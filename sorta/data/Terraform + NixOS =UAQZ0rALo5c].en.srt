1
00:00:00,440 --> 00:00:01,670

hey y'all thought I'd show you what I've

2
00:00:01,670 --> 00:00:01,680
hey y'all thought I'd show you what I've
 

3
00:00:01,680 --> 00:00:02,950
hey y'all thought I'd show you what I've
been working on recently which is

4
00:00:02,950 --> 00:00:02,960
been working on recently which is
 

5
00:00:02,960 --> 00:00:05,190
been working on recently which is
managing and installing nyos using nyos

6
00:00:05,190 --> 00:00:05,200
managing and installing nyos using nyos
 

7
00:00:05,200 --> 00:00:08,230
managing and installing nyos using nyos
anywhere and terraform so vijoy made a

8
00:00:08,230 --> 00:00:08,240
anywhere and terraform so vijoy made a
 

9
00:00:08,240 --> 00:00:09,750
anywhere and terraform so vijoy made a
video on nexos anywhere a couple weeks

10
00:00:09,750 --> 00:00:09,760
video on nexos anywhere a couple weeks
 

11
00:00:09,760 --> 00:00:12,190
video on nexos anywhere a couple weeks
ago and uh one of the cool features that

12
00:00:12,190 --> 00:00:12,200
ago and uh one of the cool features that
 

13
00:00:12,200 --> 00:00:14,669
ago and uh one of the cool features that
they have is a terraform module so I'll

14
00:00:14,669 --> 00:00:14,679
they have is a terraform module so I'll
 

15
00:00:14,679 --> 00:00:16,510
they have is a terraform module so I'll
kind of go over how it works here and

16
00:00:16,510 --> 00:00:16,520
kind of go over how it works here and
 

17
00:00:16,520 --> 00:00:19,429
kind of go over how it works here and
what to do so we have a couple modules

18
00:00:19,429 --> 00:00:19,439
what to do so we have a couple modules
 

19
00:00:19,439 --> 00:00:20,910
what to do so we have a couple modules
we have the all-in-one the install the

20
00:00:20,910 --> 00:00:20,920
we have the all-in-one the install the
 

21
00:00:20,920 --> 00:00:23,029
we have the all-in-one the install the
rebuild and the build the install as

22
00:00:23,029 --> 00:00:23,039
rebuild and the build the install as
 

23
00:00:23,039 --> 00:00:24,750
rebuild and the build the install as
soon as terraform starts to manage a

24
00:00:24,750 --> 00:00:24,760
soon as terraform starts to manage a
 

25
00:00:24,760 --> 00:00:27,310
soon as terraform starts to manage a
resource it will go ahead and uh

26
00:00:27,310 --> 00:00:27,320
resource it will go ahead and uh
 

27
00:00:27,320 --> 00:00:29,269
resource it will go ahead and uh
completely wipe it and reinstall it um

28
00:00:29,269 --> 00:00:29,279
completely wipe it and reinstall it um
 

29
00:00:29,279 --> 00:00:31,509
completely wipe it and reinstall it um
using disco and nyos anywhere and

30
00:00:31,509 --> 00:00:31,519
using disco and nyos anywhere and
 

31
00:00:31,519 --> 00:00:33,709
using disco and nyos anywhere and
everything nyos rebuild we'll go ahead

32
00:00:33,709 --> 00:00:33,719
everything nyos rebuild we'll go ahead
 

33
00:00:33,719 --> 00:00:35,670
everything nyos rebuild we'll go ahead
and do updates using just the nyos

34
00:00:35,670 --> 00:00:35,680
and do updates using just the nyos
 

35
00:00:35,680 --> 00:00:38,790
and do updates using just the nyos
rebuild setup so if you just wanted to

36
00:00:38,790 --> 00:00:38,800
rebuild setup so if you just wanted to
 

37
00:00:38,800 --> 00:00:40,510
rebuild setup so if you just wanted to
update your systems using terraform and

38
00:00:40,510 --> 00:00:40,520
update your systems using terraform and
 

39
00:00:40,520 --> 00:00:43,150
update your systems using terraform and
manually install them that's a that's a

40
00:00:43,150 --> 00:00:43,160
manually install them that's a that's a
 

41
00:00:43,160 --> 00:00:45,510
manually install them that's a that's a
good approach but sometimes n OS

42
00:00:45,510 --> 00:00:45,520
good approach but sometimes n OS
 

43
00:00:45,520 --> 00:00:47,029
good approach but sometimes n OS
anywhere with terraform can kind of be a

44
00:00:47,029 --> 00:00:47,039
anywhere with terraform can kind of be a
 

45
00:00:47,039 --> 00:00:50,029
anywhere with terraform can kind of be a
little finicky so uh NYX build is their

46
00:00:50,029 --> 00:00:50,039
little finicky so uh NYX build is their
 

47
00:00:50,039 --> 00:00:52,029
little finicky so uh NYX build is their
helper function to actually build the

48
00:00:52,029 --> 00:00:52,039
helper function to actually build the
 

49
00:00:52,039 --> 00:00:54,950
helper function to actually build the
resource um like the system

50
00:00:54,950 --> 00:00:54,960
resource um like the system
 

51
00:00:54,960 --> 00:00:57,670
resource um like the system
closure the allinone is just those

52
00:00:57,670 --> 00:00:57,680
closure the allinone is just those
 

53
00:00:57,680 --> 00:00:59,229
closure the allinone is just those
combined so let me show you how that

54
00:00:59,229 --> 00:00:59,239
combined so let me show you how that
 

55
00:00:59,239 --> 00:01:01,470
combined so let me show you how that
works

56
00:01:01,470 --> 00:01:01,480
works
 

57
00:01:01,480 --> 00:01:03,990
works
so uh they just kind of go over a little

58
00:01:03,990 --> 00:01:04,000
so uh they just kind of go over a little
 

59
00:01:04,000 --> 00:01:06,190
so uh they just kind of go over a little
bit about how it works here and a basic

60
00:01:06,190 --> 00:01:06,200
bit about how it works here and a basic
 

61
00:01:06,200 --> 00:01:07,749
bit about how it works here and a basic
kind of setup that will work for pretty

62
00:01:07,749 --> 00:01:07,759
kind of setup that will work for pretty
 

63
00:01:07,759 --> 00:01:09,710
kind of setup that will work for pretty
much anyone except these parts usually

64
00:01:09,710 --> 00:01:09,720
much anyone except these parts usually
 

65
00:01:09,720 --> 00:01:12,429
much anyone except these parts usually
you don't need those um but some scripts

66
00:01:12,429 --> 00:01:12,439
you don't need those um but some scripts
 

67
00:01:12,439 --> 00:01:14,990
you don't need those um but some scripts
they got the how the NX OS Wiki is set

68
00:01:14,990 --> 00:01:15,000
they got the how the NX OS Wiki is set
 

69
00:01:15,000 --> 00:01:18,070
they got the how the NX OS Wiki is set
up on hetner cloud using terraform and

70
00:01:18,070 --> 00:01:18,080
up on hetner cloud using terraform and
 

71
00:01:18,080 --> 00:01:20,149
up on hetner cloud using terraform and
uh they kind of go over just how you

72
00:01:20,149 --> 00:01:20,159
uh they kind of go over just how you
 

73
00:01:20,159 --> 00:01:23,270
uh they kind of go over just how you
should do some stuff uh get

74
00:01:23,270 --> 00:01:23,280
should do some stuff uh get
 

75
00:01:23,280 --> 00:01:26,910
should do some stuff uh get
Ops sort of and uh just the modules they

76
00:01:26,910 --> 00:01:26,920
Ops sort of and uh just the modules they
 

77
00:01:26,920 --> 00:01:29,230
Ops sort of and uh just the modules they
provide here as well as the uh the

78
00:01:29,230 --> 00:01:29,240
provide here as well as the uh the
 

79
00:01:29,240 --> 00:01:31,190
provide here as well as the uh the
settings that you you can configure let

80
00:01:31,190 --> 00:01:31,200
settings that you you can configure let
 

81
00:01:31,200 --> 00:01:33,950
settings that you you can configure let
me show you how I have it set up first

82
00:01:33,950 --> 00:01:33,960
me show you how I have it set up first
 

83
00:01:33,960 --> 00:01:36,670
me show you how I have it set up first
of all the module actually requires a

84
00:01:36,670 --> 00:01:36,680
of all the module actually requires a
 

85
00:01:36,680 --> 00:01:39,230
of all the module actually requires a
custom uh version of terraform that you

86
00:01:39,230 --> 00:01:39,240
custom uh version of terraform that you
 

87
00:01:39,240 --> 00:01:41,590
custom uh version of terraform that you
set up here with plugins so because NYX

88
00:01:41,590 --> 00:01:41,600
set up here with plugins so because NYX
 

89
00:01:41,600 --> 00:01:42,910
set up here with plugins so because NYX
is immutable you actually need to

90
00:01:42,910 --> 00:01:42,920
is immutable you actually need to
 

91
00:01:42,920 --> 00:01:44,670
is immutable you actually need to
provide the plugins themselves and I

92
00:01:44,670 --> 00:01:44,680
provide the plugins themselves and I
 

93
00:01:44,680 --> 00:01:47,230
provide the plugins themselves and I
also needed JQ uh for some reason I

94
00:01:47,230 --> 00:01:47,240
also needed JQ uh for some reason I
 

95
00:01:47,240 --> 00:01:49,109
also needed JQ uh for some reason I
believe so as you can see with this

96
00:01:49,109 --> 00:01:49,119
believe so as you can see with this
 

97
00:01:49,119 --> 00:01:52,230
believe so as you can see with this
terraform in it commit so uh yeah so you

98
00:01:52,230 --> 00:01:52,240
terraform in it commit so uh yeah so you
 

99
00:01:52,240 --> 00:01:53,990
terraform in it commit so uh yeah so you
just say terraform with plugins in your

100
00:01:53,990 --> 00:01:54,000
just say terraform with plugins in your
 

101
00:01:54,000 --> 00:01:56,069
just say terraform with plugins in your
shell and then in this case you have you

102
00:01:56,069 --> 00:01:56,079
shell and then in this case you have you
 

103
00:01:56,079 --> 00:01:57,910
shell and then in this case you have you
I do p. n because otherwise it gets

104
00:01:57,910 --> 00:01:57,920
I do p. n because otherwise it gets
 

105
00:01:57,920 --> 00:02:00,350
I do p. n because otherwise it gets
interpreted as a raw

106
00:02:00,350 --> 00:02:00,360
interpreted as a raw
 

107
00:02:00,360 --> 00:02:03,149
interpreted as a raw
object uh from NYX so yeah we say

108
00:02:03,149 --> 00:02:03,159
object uh from NYX so yeah we say
 

109
00:02:03,159 --> 00:02:04,630
object uh from NYX so yeah we say
packages null so that's the null

110
00:02:04,630 --> 00:02:04,640
packages null so that's the null
 

111
00:02:04,640 --> 00:02:06,109
packages null so that's the null
provider and this is the external

112
00:02:06,109 --> 00:02:06,119
provider and this is the external
 

113
00:02:06,119 --> 00:02:08,510
provider and this is the external
provider so that's all you really need

114
00:02:08,510 --> 00:02:08,520
provider so that's all you really need
 

115
00:02:08,520 --> 00:02:10,510
provider so that's all you really need
um just to get started for just

116
00:02:10,510 --> 00:02:10,520
um just to get started for just
 

117
00:02:10,520 --> 00:02:12,990
um just to get started for just
completely raw networking no cloud

118
00:02:12,990 --> 00:02:13,000
completely raw networking no cloud
 

119
00:02:13,000 --> 00:02:15,229
completely raw networking no cloud
provisioning like hetner or vulture or

120
00:02:15,229 --> 00:02:15,239
provisioning like hetner or vulture or
 

121
00:02:15,239 --> 00:02:18,270
provisioning like hetner or vulture or
uh AWS nothing like that or any VPS like

122
00:02:18,270 --> 00:02:18,280
uh AWS nothing like that or any VPS like
 

123
00:02:18,280 --> 00:02:21,110
uh AWS nothing like that or any VPS like
Len node um those are all this is just a

124
00:02:21,110 --> 00:02:21,120
Len node um those are all this is just a
 

125
00:02:21,120 --> 00:02:22,509
Len node um those are all this is just a
complete default you would need to

126
00:02:22,509 --> 00:02:22,519
complete default you would need to
 

127
00:02:22,519 --> 00:02:25,110
complete default you would need to
provide those providers um plugins in

128
00:02:25,110 --> 00:02:25,120
provide those providers um plugins in
 

129
00:02:25,120 --> 00:02:26,710
provide those providers um plugins in
there which you can use the nxo search

130
00:02:26,710 --> 00:02:26,720
there which you can use the nxo search
 

131
00:02:26,720 --> 00:02:31,110
there which you can use the nxo search
to find um so next I'm going to go over

132
00:02:31,110 --> 00:02:31,120
to find um so next I'm going to go over
 

133
00:02:31,120 --> 00:02:34,309
to find um so next I'm going to go over
my actual terraform file so I just have

134
00:02:34,309 --> 00:02:34,319
my actual terraform file so I just have
 

135
00:02:34,319 --> 00:02:36,070
my actual terraform file so I just have
this directory here deployment nios and

136
00:02:36,070 --> 00:02:36,080
this directory here deployment nios and
 

137
00:02:36,080 --> 00:02:37,430
this directory here deployment nios and
these are a bunch of State files and

138
00:02:37,430 --> 00:02:37,440
these are a bunch of State files and
 

139
00:02:37,440 --> 00:02:39,470
these are a bunch of State files and
stuff uh doesn't matter too much what

140
00:02:39,470 --> 00:02:39,480
stuff uh doesn't matter too much what
 

141
00:02:39,480 --> 00:02:42,790
stuff uh doesn't matter too much what
really matters is the main.tf so this is

142
00:02:42,790 --> 00:02:42,800
really matters is the main.tf so this is
 

143
00:02:42,800 --> 00:02:44,509
really matters is the main.tf so this is
the only file I have here for this

144
00:02:44,509 --> 00:02:44,519
the only file I have here for this
 

145
00:02:44,519 --> 00:02:46,710
the only file I have here for this
deployment and in this case we have

146
00:02:46,710 --> 00:02:46,720
deployment and in this case we have
 

147
00:02:46,720 --> 00:02:48,790
deployment and in this case we have
these local variables and locals are

148
00:02:48,790 --> 00:02:48,800
these local variables and locals are
 

149
00:02:48,800 --> 00:02:50,430
these local variables and locals are
just yeah they're just variables just

150
00:02:50,430 --> 00:02:50,440
just yeah they're just variables just
 

151
00:02:50,440 --> 00:02:52,350
just yeah they're just variables just
for this file rather than variables

152
00:02:52,350 --> 00:02:52,360
for this file rather than variables
 

153
00:02:52,360 --> 00:02:55,390
for this file rather than variables
across files and and modules so we have

154
00:02:55,390 --> 00:02:55,400
across files and and modules so we have
 

155
00:02:55,400 --> 00:02:56,790
across files and and modules so we have
two variables here we have host files

156
00:02:56,790 --> 00:02:56,800
two variables here we have host files
 

157
00:02:56,800 --> 00:02:59,470
two variables here we have host files
and hosts so this will return a bunch of

158
00:02:59,470 --> 00:02:59,480
and hosts so this will return a bunch of
 

159
00:02:59,480 --> 00:03:00,949
and hosts so this will return a bunch of
Json files which I'll show you their

160
00:03:00,949 --> 00:03:00,959
Json files which I'll show you their
 

161
00:03:00,959 --> 00:03:03,110
Json files which I'll show you their
contents and hosts will take each one of

162
00:03:03,110 --> 00:03:03,120
contents and hosts will take each one of
 

163
00:03:03,120 --> 00:03:05,750
contents and hosts will take each one of
the Json files in the directory and

164
00:03:05,750 --> 00:03:05,760
the Json files in the directory and
 

165
00:03:05,760 --> 00:03:07,229
the Json files in the directory and
we'll go ahead and decode the Json and

166
00:03:07,229 --> 00:03:07,239
we'll go ahead and decode the Json and
 

167
00:03:07,239 --> 00:03:10,229
we'll go ahead and decode the Json and
variables so if we go here the path goes

168
00:03:10,229 --> 00:03:10,239
variables so if we go here the path goes
 

169
00:03:10,239 --> 00:03:13,589
variables so if we go here the path goes
up to directories into systems and then

170
00:03:13,589 --> 00:03:13,599
up to directories into systems and then
 

171
00:03:13,599 --> 00:03:15,470
up to directories into systems and then
searches down recursively a couple

172
00:03:15,470 --> 00:03:15,480
searches down recursively a couple
 

173
00:03:15,480 --> 00:03:18,110
searches down recursively a couple
directories until it finds a host so it

174
00:03:18,110 --> 00:03:18,120
directories until it finds a host so it
 

175
00:03:18,120 --> 00:03:21,830
directories until it finds a host so it
searches down two exactly so it finds

176
00:03:21,830 --> 00:03:21,840
searches down two exactly so it finds
 

177
00:03:21,840 --> 00:03:24,750
searches down two exactly so it finds
this file here and we go ahead and I'll

178
00:03:24,750 --> 00:03:24,760
this file here and we go ahead and I'll
 

179
00:03:24,760 --> 00:03:27,910
this file here and we go ahead and I'll
um use this so ipv4 is the address we're

180
00:03:27,910 --> 00:03:27,920
um use this so ipv4 is the address we're
 

181
00:03:27,920 --> 00:03:29,750
um use this so ipv4 is the address we're
going to override Um this can be public

182
00:03:29,750 --> 00:03:29,760
going to override Um this can be public
 

183
00:03:29,760 --> 00:03:31,429
going to override Um this can be public
public or private doesn't really matter

184
00:03:31,429 --> 00:03:31,439
public or private doesn't really matter
 

185
00:03:31,439 --> 00:03:33,229
public or private doesn't really matter
as long as it's accessible by you and

186
00:03:33,229 --> 00:03:33,239
as long as it's accessible by you and
 

187
00:03:33,239 --> 00:03:36,390
as long as it's accessible by you and
you have SSH keys to access it and the

188
00:03:36,390 --> 00:03:36,400
you have SSH keys to access it and the
 

189
00:03:36,400 --> 00:03:39,030
you have SSH keys to access it and the
host name is what we use to graft into

190
00:03:39,030 --> 00:03:39,040
host name is what we use to graft into
 

191
00:03:39,040 --> 00:03:41,429
host name is what we use to graft into
the actual build attribute so if we go

192
00:03:41,429 --> 00:03:41,439
the actual build attribute so if we go
 

193
00:03:41,439 --> 00:03:42,390
the actual build attribute so if we go
back into

194
00:03:42,390 --> 00:03:42,400
back into
 

195
00:03:42,400 --> 00:03:46,229
back into
main.tf um here we go ahead and do this

196
00:03:46,229 --> 00:03:46,239
main.tf um here we go ahead and do this
 

197
00:03:46,239 --> 00:03:47,630
main.tf um here we go ahead and do this
module and I'll kind of explain how it

198
00:03:47,630 --> 00:03:47,640
module and I'll kind of explain how it
 

199
00:03:47,640 --> 00:03:50,229
module and I'll kind of explain how it
works so in terraform there is a 4 each

200
00:03:50,229 --> 00:03:50,239
works so in terraform there is a 4 each
 

201
00:03:50,239 --> 00:03:52,550
works so in terraform there is a 4 each
block and this for each block goes ahead

202
00:03:52,550 --> 00:03:52,560
block and this for each block goes ahead
 

203
00:03:52,560 --> 00:03:57,550
block and this for each block goes ahead
and will do the same action on each host

204
00:03:57,550 --> 00:03:57,560
and will do the same action on each host
 

205
00:03:57,560 --> 00:03:59,589
and will do the same action on each host
that is defined by each file so I can

206
00:03:59,589 --> 00:03:59,599
that is defined by each file so I can
 

207
00:03:59,599 --> 00:04:01,990
that is defined by each file so I can
have 100 of these files and they will it

208
00:04:01,990 --> 00:04:02,000
have 100 of these files and they will it
 

209
00:04:02,000 --> 00:04:04,149
have 100 of these files and they will it
will run one deploy for each one in

210
00:04:04,149 --> 00:04:04,159
will run one deploy for each one in
 

211
00:04:04,159 --> 00:04:07,990
will run one deploy for each one in
parallel so that's how that works and

212
00:04:07,990 --> 00:04:08,000
parallel so that's how that works and
 

213
00:04:08,000 --> 00:04:10,270
parallel so that's how that works and
then we get the source which this is the

214
00:04:10,270 --> 00:04:10,280
then we get the source which this is the
 

215
00:04:10,280 --> 00:04:12,350
then we get the source which this is the
actual what the module like is built

216
00:04:12,350 --> 00:04:12,360
actual what the module like is built
 

217
00:04:12,360 --> 00:04:14,509
actual what the module like is built
upon so in this case we get the repo and

218
00:04:14,509 --> 00:04:14,519
upon so in this case we get the repo and
 

219
00:04:14,519 --> 00:04:17,189
upon so in this case we get the repo and
then this double slash says end of URL

220
00:04:17,189 --> 00:04:17,199
then this double slash says end of URL
 

221
00:04:17,199 --> 00:04:19,749
then this double slash says end of URL
into the file system of the repo cloned

222
00:04:19,749 --> 00:04:19,759
into the file system of the repo cloned
 

223
00:04:19,759 --> 00:04:23,030
into the file system of the repo cloned
and then this says Hey SL terraform SL

224
00:04:23,030 --> 00:04:23,040
and then this says Hey SL terraform SL
 

225
00:04:23,040 --> 00:04:24,990
and then this says Hey SL terraform SL
allinone um the system and the

226
00:04:24,990 --> 00:04:25,000
allinone um the system and the
 

227
00:04:25,000 --> 00:04:28,070
allinone um the system and the
partitioner Adder these are the the

228
00:04:28,070 --> 00:04:28,080
partitioner Adder these are the the
 

229
00:04:28,080 --> 00:04:30,230
partitioner Adder these are the the
build so this system Adder is the actual

230
00:04:30,230 --> 00:04:30,240
build so this system Adder is the actual
 

231
00:04:30,240 --> 00:04:31,550
build so this system Adder is the actual
implicit build that happens when you do

232
00:04:31,550 --> 00:04:31,560
implicit build that happens when you do
 

233
00:04:31,560 --> 00:04:34,670
implicit build that happens when you do
nixos rebuild switch with a flake uh it

234
00:04:34,670 --> 00:04:34,680
nixos rebuild switch with a flake uh it
 

235
00:04:34,680 --> 00:04:36,990
nixos rebuild switch with a flake uh it
just uses your host name uh environment

236
00:04:36,990 --> 00:04:37,000
just uses your host name uh environment
 

237
00:04:37,000 --> 00:04:38,710
just uses your host name uh environment
variable and graphs it into this this

238
00:04:38,710 --> 00:04:38,720
variable and graphs it into this this
 

239
00:04:38,720 --> 00:04:40,990
variable and graphs it into this this
configuration build top level and in

240
00:04:40,990 --> 00:04:41,000
configuration build top level and in
 

241
00:04:41,000 --> 00:04:43,270
configuration build top level and in
this case when you do a for each block

242
00:04:43,270 --> 00:04:43,280
this case when you do a for each block
 

243
00:04:43,280 --> 00:04:45,310
this case when you do a for each block
you can access the values in the keys

244
00:04:45,310 --> 00:04:45,320
you can access the values in the keys
 

245
00:04:45,320 --> 00:04:47,510
you can access the values in the keys
which the key is the current uh host

246
00:04:47,510 --> 00:04:47,520
which the key is the current uh host
 

247
00:04:47,520 --> 00:04:50,070
which the key is the current uh host
file path that we're accessing and the

248
00:04:50,070 --> 00:04:50,080
file path that we're accessing and the
 

249
00:04:50,080 --> 00:04:53,270
file path that we're accessing and the
values is the decoded version of that so

250
00:04:53,270 --> 00:04:53,280
values is the decoded version of that so
 

251
00:04:53,280 --> 00:04:56,710
values is the decoded version of that so
this each here is the value and the host

252
00:04:56,710 --> 00:04:56,720
this each here is the value and the host
 

253
00:04:56,720 --> 00:04:58,029
this each here is the value and the host
name so we go ahead and grab that host

254
00:04:58,029 --> 00:04:58,039
name so we go ahead and grab that host
 

255
00:04:58,039 --> 00:05:00,110
name so we go ahead and grab that host
name from that Json and we say build

256
00:05:00,110 --> 00:05:00,120
name from that Json and we say build
 

257
00:05:00,120 --> 00:05:03,310
name from that Json and we say build
that nexos configuration uh top level

258
00:05:03,310 --> 00:05:03,320
that nexos configuration uh top level
 

259
00:05:03,320 --> 00:05:04,550
that nexos configuration uh top level
and then the partitioner is just saying

260
00:05:04,550 --> 00:05:04,560
and then the partitioner is just saying
 

261
00:05:04,560 --> 00:05:05,990
and then the partitioner is just saying
hey do that for the Disco script so it

262
00:05:05,990 --> 00:05:06,000
hey do that for the Disco script so it
 

263
00:05:06,000 --> 00:05:08,029
hey do that for the Disco script so it
knows what script to run to format the

264
00:05:08,029 --> 00:05:08,039
knows what script to run to format the
 

265
00:05:08,039 --> 00:05:10,469
knows what script to run to format the
system next we do Target host which this

266
00:05:10,469 --> 00:05:10,479
system next we do Target host which this
 

267
00:05:10,479 --> 00:05:12,590
system next we do Target host which this
is just what system to run on and

268
00:05:12,590 --> 00:05:12,600
is just what system to run on and
 

269
00:05:12,600 --> 00:05:14,390
is just what system to run on and
instance ID we set to the same so if we

270
00:05:14,390 --> 00:05:14,400
instance ID we set to the same so if we
 

271
00:05:14,400 --> 00:05:16,310
instance ID we set to the same so if we
change the IP address it'll go ahead and

272
00:05:16,310 --> 00:05:16,320
change the IP address it'll go ahead and
 

273
00:05:16,320 --> 00:05:18,990
change the IP address it'll go ahead and
overwrite the system and completely just

274
00:05:18,990 --> 00:05:19,000
overwrite the system and completely just
 

275
00:05:19,000 --> 00:05:20,629
overwrite the system and completely just
install to a new system the same host

276
00:05:20,629 --> 00:05:20,639
install to a new system the same host
 

277
00:05:20,639 --> 00:05:24,309
install to a new system the same host
name so it just lets uh perform know

278
00:05:24,309 --> 00:05:24,319
name so it just lets uh perform know
 

279
00:05:24,319 --> 00:05:27,150
name so it just lets uh perform know
that we changed uh the IP address that

280
00:05:27,150 --> 00:05:27,160
that we changed uh the IP address that
 

281
00:05:27,160 --> 00:05:28,909
that we changed uh the IP address that
we want to deploy to so it'll completely

282
00:05:28,909 --> 00:05:28,919
we want to deploy to so it'll completely
 

283
00:05:28,919 --> 00:05:31,870
we want to deploy to so it'll completely
recreate everything and then finally we

284
00:05:31,870 --> 00:05:31,880
recreate everything and then finally we
 

285
00:05:31,880 --> 00:05:34,070
recreate everything and then finally we
actually get the key which in this case

286
00:05:34,070 --> 00:05:34,080
actually get the key which in this case
 

287
00:05:34,080 --> 00:05:37,150
actually get the key which in this case
is the path from the

288
00:05:37,150 --> 00:05:37,160
is the path from the
 

289
00:05:37,160 --> 00:05:40,550
is the path from the
main.tf uh relative all the way back to

290
00:05:40,550 --> 00:05:40,560
main.tf uh relative all the way back to
 

291
00:05:40,560 --> 00:05:43,550
main.tf uh relative all the way back to
the host. TF we cut off the host. TF so

292
00:05:43,550 --> 00:05:43,560
the host. TF we cut off the host. TF so
 

293
00:05:43,560 --> 00:05:46,830
the host. TF we cut off the host. TF so
that leaves us with systems slash you

294
00:05:46,830 --> 00:05:46,840
that leaves us with systems slash you
 

295
00:05:46,840 --> 00:05:48,870
that leaves us with systems slash you
know dot dot

296
00:05:48,870 --> 00:05:48,880
know dot dot
 

297
00:05:48,880 --> 00:05:53,710
know dot dot
slash um dos systems slash

298
00:05:53,710 --> 00:05:53,720
slash um dos systems slash
 

299
00:05:53,720 --> 00:05:57,469
slash um dos systems slash
this Equinox host. TF we get rid of

300
00:05:57,469 --> 00:05:57,479
this Equinox host. TF we get rid of
 

301
00:05:57,479 --> 00:06:00,309
this Equinox host. TF we get rid of
host. TF and we append Hardware config

302
00:06:00,309 --> 00:06:00,319
host. TF and we append Hardware config
 

303
00:06:00,319 --> 00:06:02,870
host. TF and we append Hardware config
and that is the path that ends up being

304
00:06:02,870 --> 00:06:02,880
and that is the path that ends up being
 

305
00:06:02,880 --> 00:06:07,070
and that is the path that ends up being
passed to um to this and that says we

306
00:06:07,070 --> 00:06:07,080
passed to um to this and that says we
 

307
00:06:07,080 --> 00:06:10,070
passed to um to this and that says we
can overwrite the generate config path

308
00:06:10,070 --> 00:06:10,080
can overwrite the generate config path
 

309
00:06:10,080 --> 00:06:13,430
can overwrite the generate config path
here so when we install the system the

310
00:06:13,430 --> 00:06:13,440
here so when we install the system the
 

311
00:06:13,440 --> 00:06:15,309
here so when we install the system the
system we're installing its Hardware

312
00:06:15,309 --> 00:06:15,319
system we're installing its Hardware
 

313
00:06:15,319 --> 00:06:17,749
system we're installing its Hardware
config will get overridden so you don't

314
00:06:17,749 --> 00:06:17,759
config will get overridden so you don't
 

315
00:06:17,759 --> 00:06:19,790
config will get overridden so you don't
need to do any manual cloning of that or

316
00:06:19,790 --> 00:06:19,800
need to do any manual cloning of that or
 

317
00:06:19,800 --> 00:06:21,550
need to do any manual cloning of that or
don't worry about that you can also do

318
00:06:21,550 --> 00:06:21,560
don't worry about that you can also do
 

319
00:06:21,560 --> 00:06:23,110
don't worry about that you can also do
it with nios Factor but I'm not using

320
00:06:23,110 --> 00:06:23,120
it with nios Factor but I'm not using
 

321
00:06:23,120 --> 00:06:25,870
it with nios Factor but I'm not using
that right now so that's a basic summary

322
00:06:25,870 --> 00:06:25,880
that right now so that's a basic summary
 

323
00:06:25,880 --> 00:06:27,189
that right now so that's a basic summary
of how it works let me show you how we

324
00:06:27,189 --> 00:06:27,199
of how it works let me show you how we
 

325
00:06:27,199 --> 00:06:29,749
of how it works let me show you how we
actually deploy so you go ahead and you

326
00:06:29,749 --> 00:06:29,759
actually deploy so you go ahead and you
 

327
00:06:29,759 --> 00:06:31,430
actually deploy so you go ahead and you
say terraform apply and here it is

328
00:06:31,430 --> 00:06:31,440
say terraform apply and here it is
 

329
00:06:31,440 --> 00:06:33,150
say terraform apply and here it is
running I only have one file that's why

330
00:06:33,150 --> 00:06:33,160
running I only have one file that's why
 

331
00:06:33,160 --> 00:06:34,350
running I only have one file that's why
the git is there because I didn't want

332
00:06:34,350 --> 00:06:34,360
the git is there because I didn't want
 

333
00:06:34,360 --> 00:06:36,150
the git is there because I didn't want
to override a second system that I don't

334
00:06:36,150 --> 00:06:36,160
to override a second system that I don't
 

335
00:06:36,160 --> 00:06:39,749
to override a second system that I don't
want to override so we have there's the

336
00:06:39,749 --> 00:06:39,759
want to override so we have there's the
 

337
00:06:39,759 --> 00:06:42,790
want to override so we have there's the
relative path running module on this it

338
00:06:42,790 --> 00:06:42,800
relative path running module on this it
 

339
00:06:42,800 --> 00:06:45,029
relative path running module on this it
uses nyx's build to build the system

340
00:06:45,029 --> 00:06:45,039
uses nyx's build to build the system
 

341
00:06:45,039 --> 00:06:49,469
uses nyx's build to build the system
closure as well as the um the setup so

342
00:06:49,469 --> 00:06:49,479
closure as well as the um the setup so
 

343
00:06:49,479 --> 00:06:51,469
closure as well as the um the setup so
it'll it'll create two resources when

344
00:06:51,469 --> 00:06:51,479
it'll it'll create two resources when
 

345
00:06:51,479 --> 00:06:53,670
it'll it'll create two resources when
you first create it it will create a NX

346
00:06:53,670 --> 00:06:53,680
you first create it it will create a NX
 

347
00:06:53,680 --> 00:06:56,270
you first create it it will create a NX
remote resource which this is saying do

348
00:06:56,270 --> 00:06:56,280
remote resource which this is saying do
 

349
00:06:56,280 --> 00:06:57,990
remote resource which this is saying do
the install as you can see the instance

350
00:06:57,990 --> 00:06:58,000
the install as you can see the instance
 

351
00:06:58,000 --> 00:07:01,070
the install as you can see the instance
ID is the uh is the IP address so we're

352
00:07:01,070 --> 00:07:01,080
ID is the uh is the IP address so we're
 

353
00:07:01,080 --> 00:07:03,790
ID is the uh is the IP address so we're
going to use no resource to create a

354
00:07:03,790 --> 00:07:03,800
going to use no resource to create a
 

355
00:07:03,800 --> 00:07:05,550
going to use no resource to create a
remote resource that will go ahead and

356
00:07:05,550 --> 00:07:05,560
remote resource that will go ahead and
 

357
00:07:05,560 --> 00:07:07,830
remote resource that will go ahead and
Destroy and install using nyos anywhere

358
00:07:07,830 --> 00:07:07,840
Destroy and install using nyos anywhere
 

359
00:07:07,840 --> 00:07:09,150
Destroy and install using nyos anywhere
and it will create a second resource

360
00:07:09,150 --> 00:07:09,160
and it will create a second resource
 

361
00:07:09,160 --> 00:07:12,189
and it will create a second resource
called nyos rebuild and this resource

362
00:07:12,189 --> 00:07:12,199
called nyos rebuild and this resource
 

363
00:07:12,199 --> 00:07:14,469
called nyos rebuild and this resource
has the store path of the system closure

364
00:07:14,469 --> 00:07:14,479
has the store path of the system closure
 

365
00:07:14,479 --> 00:07:16,710
has the store path of the system closure
but like I said when we go ahead and

366
00:07:16,710 --> 00:07:16,720
but like I said when we go ahead and
 

367
00:07:16,720 --> 00:07:20,110
but like I said when we go ahead and
cover the store path um if this changes

368
00:07:20,110 --> 00:07:20,120
cover the store path um if this changes
 

369
00:07:20,120 --> 00:07:21,710
cover the store path um if this changes
which when you run terraform apply it'll

370
00:07:21,710 --> 00:07:21,720
which when you run terraform apply it'll
 

371
00:07:21,720 --> 00:07:23,710
which when you run terraform apply it'll
do a rebuild which can take between 20

372
00:07:23,710 --> 00:07:23,720
do a rebuild which can take between 20
 

373
00:07:23,720 --> 00:07:26,550
do a rebuild which can take between 20
and 40 seconds on average for me um it

374
00:07:26,550 --> 00:07:26,560
and 40 seconds on average for me um it
 

375
00:07:26,560 --> 00:07:28,550
and 40 seconds on average for me um it
will go ahead and say hey this store

376
00:07:28,550 --> 00:07:28,560
will go ahead and say hey this store
 

377
00:07:28,560 --> 00:07:30,710
will go ahead and say hey this store
path is Tainted so it will destroy and

378
00:07:30,710 --> 00:07:30,720
path is Tainted so it will destroy and
 

379
00:07:30,720 --> 00:07:33,150
path is Tainted so it will destroy and
recreate the rebuild now if you destroy

380
00:07:33,150 --> 00:07:33,160
recreate the rebuild now if you destroy
 

381
00:07:33,160 --> 00:07:35,150
recreate the rebuild now if you destroy
the remote and you recreate it that'll

382
00:07:35,150 --> 00:07:35,160
the remote and you recreate it that'll
 

383
00:07:35,160 --> 00:07:37,629
the remote and you recreate it that'll
reinstall but if you destroy the rebuild

384
00:07:37,629 --> 00:07:37,639
reinstall but if you destroy the rebuild
 

385
00:07:37,639 --> 00:07:39,790
reinstall but if you destroy the rebuild
it'll actually just update so that's

386
00:07:39,790 --> 00:07:39,800
it'll actually just update so that's
 

387
00:07:39,800 --> 00:07:41,510
it'll actually just update so that's
what it does it says it's tainted and

388
00:07:41,510 --> 00:07:41,520
what it does it says it's tainted and
 

389
00:07:41,520 --> 00:07:43,230
what it does it says it's tainted and
must be replaced and it will replace it

390
00:07:43,230 --> 00:07:43,240
must be replaced and it will replace it
 

391
00:07:43,240 --> 00:07:44,550
must be replaced and it will replace it
with a brand new rebuild with a new

392
00:07:44,550 --> 00:07:44,560
with a brand new rebuild with a new
 

393
00:07:44,560 --> 00:07:46,790
with a brand new rebuild with a new
store path so it'll reinstall or it it

394
00:07:46,790 --> 00:07:46,800
store path so it'll reinstall or it it
 

395
00:07:46,800 --> 00:07:49,749
store path so it'll reinstall or it it
it'll update so if we say yes here it's

396
00:07:49,749 --> 00:07:49,759
it'll update so if we say yes here it's
 

397
00:07:49,759 --> 00:07:52,430
it'll update so if we say yes here it's
going to go ahead and it's going to SSH

398
00:07:52,430 --> 00:07:52,440
going to go ahead and it's going to SSH
 

399
00:07:52,440 --> 00:07:56,350
going to go ahead and it's going to SSH
onto the local network system and it's

400
00:07:56,350 --> 00:07:56,360
onto the local network system and it's
 

401
00:07:56,360 --> 00:08:00,110
onto the local network system and it's
then going to a

402
00:08:00,110 --> 00:08:00,120
then going to a
 

403
00:08:00,120 --> 00:08:01,909
then going to a
the image so it's downloading the KAC

404
00:08:01,909 --> 00:08:01,919
the image so it's downloading the KAC
 

405
00:08:01,919 --> 00:08:04,749
the image so it's downloading the KAC
right now and once it gets copied over

406
00:08:04,749 --> 00:08:04,759
right now and once it gets copied over
 

407
00:08:04,759 --> 00:08:07,869
right now and once it gets copied over
that's going to reboot the system into

408
00:08:07,869 --> 00:08:07,879
that's going to reboot the system into
 

409
00:08:07,879 --> 00:08:10,390
that's going to reboot the system into
the installer so it's as if you plugged

410
00:08:10,390 --> 00:08:10,400
the installer so it's as if you plugged
 

411
00:08:10,400 --> 00:08:14,869
the installer so it's as if you plugged
in a USB for a uh just a regular install

412
00:08:14,869 --> 00:08:14,879
in a USB for a uh just a regular install
 

413
00:08:14,879 --> 00:08:17,029
in a USB for a uh just a regular install
so here it is doing a k exac it waits

414
00:08:17,029 --> 00:08:17,039
so here it is doing a k exac it waits
 

415
00:08:17,039 --> 00:08:19,710
so here it is doing a k exac it waits
about 6 seconds and it will

416
00:08:19,710 --> 00:08:19,720
about 6 seconds and it will
 

417
00:08:19,720 --> 00:08:23,309
about 6 seconds and it will
reboot so it also copies special keys

418
00:08:23,309 --> 00:08:23,319
reboot so it also copies special keys
 

419
00:08:23,319 --> 00:08:25,950
reboot so it also copies special keys
specifically for this install to that

420
00:08:25,950 --> 00:08:25,960
specifically for this install to that
 

421
00:08:25,960 --> 00:08:30,189
specifically for this install to that
system and it's now going to wait

422
00:08:30,189 --> 00:08:30,199
system and it's now going to wait
 

423
00:08:30,199 --> 00:08:31,749
system and it's now going to wait
and it's going to start building the

424
00:08:31,749 --> 00:08:31,759
and it's going to start building the
 

425
00:08:31,759 --> 00:08:36,790
and it's going to start building the
system as soon as it's reachable

426
00:08:36,790 --> 00:08:36,800

 

427
00:08:36,800 --> 00:08:39,110

again okay so my router's been acting a

428
00:08:39,110 --> 00:08:39,120
again okay so my router's been acting a
 

429
00:08:39,120 --> 00:08:41,550
again okay so my router's been acting a
little bit weird recently so um yeah it

430
00:08:41,550 --> 00:08:41,560
little bit weird recently so um yeah it
 

431
00:08:41,560 --> 00:08:43,430
little bit weird recently so um yeah it
did not hand out the same IP address

432
00:08:43,430 --> 00:08:43,440
did not hand out the same IP address
 

433
00:08:43,440 --> 00:08:45,509
did not hand out the same IP address
that it had before that I was expecting

434
00:08:45,509 --> 00:08:45,519
that it had before that I was expecting
 

435
00:08:45,519 --> 00:08:47,030
that it had before that I was expecting
so I went ahead and changed the IP

436
00:08:47,030 --> 00:08:47,040
so I went ahead and changed the IP
 

437
00:08:47,040 --> 00:08:50,230
so I went ahead and changed the IP
address in the host. TF uh. Json file

438
00:08:50,230 --> 00:08:50,240
address in the host. TF uh. Json file
 

439
00:08:50,240 --> 00:08:53,110
address in the host. TF uh. Json file
and as you can see it triggered the

440
00:08:53,110 --> 00:08:53,120
and as you can see it triggered the
 

441
00:08:53,120 --> 00:08:56,070
and as you can see it triggered the
remote to be replaced because it started

442
00:08:56,070 --> 00:08:56,080
remote to be replaced because it started
 

443
00:08:56,080 --> 00:08:57,910
remote to be replaced because it started
the creation but in this case it's going

444
00:08:57,910 --> 00:08:57,920
the creation but in this case it's going
 

445
00:08:57,920 --> 00:08:59,430
the creation but in this case it's going
to do this destroy and then create

446
00:08:59,430 --> 00:08:59,440
to do this destroy and then create
 

447
00:08:59,440 --> 00:09:01,350
to do this destroy and then create
create replacement and it still hasn't

448
00:09:01,350 --> 00:09:01,360
create replacement and it still hasn't
 

449
00:09:01,360 --> 00:09:02,829
create replacement and it still hasn't
done the rebuild because that is the

450
00:09:02,829 --> 00:09:02,839
done the rebuild because that is the
 

451
00:09:02,839 --> 00:09:05,310
done the rebuild because that is the
actual bootstrap after the install so it

452
00:09:05,310 --> 00:09:05,320
actual bootstrap after the install so it
 

453
00:09:05,320 --> 00:09:07,870
actual bootstrap after the install so it
needs to create it so we say yes and

454
00:09:07,870 --> 00:09:07,880
needs to create it so we say yes and
 

455
00:09:07,880 --> 00:09:09,990
needs to create it so we say yes and
this is going to finish it and in this

456
00:09:09,990 --> 00:09:10,000
this is going to finish it and in this
 

457
00:09:10,000 --> 00:09:12,550
this is going to finish it and in this
case it's on the remote system and now

458
00:09:12,550 --> 00:09:12,560
case it's on the remote system and now
 

459
00:09:12,560 --> 00:09:14,110
case it's on the remote system and now
what it's going to do is it's going to

460
00:09:14,110 --> 00:09:14,120
what it's going to do is it's going to
 

461
00:09:14,120 --> 00:09:16,389
what it's going to do is it's going to
start copying all the paths now it's

462
00:09:16,389 --> 00:09:16,399
start copying all the paths now it's
 

463
00:09:16,399 --> 00:09:17,790
start copying all the paths now it's
formatting all the drives using the

464
00:09:17,790 --> 00:09:17,800
formatting all the drives using the
 

465
00:09:17,800 --> 00:09:19,590
formatting all the drives using the
Disco configuration which in this case

466
00:09:19,590 --> 00:09:19,600
Disco configuration which in this case
 

467
00:09:19,600 --> 00:09:22,230
Disco configuration which in this case
is an impermanent setup with uh butter

468
00:09:22,230 --> 00:09:22,240
is an impermanent setup with uh butter
 

469
00:09:22,240 --> 00:09:24,630
is an impermanent setup with uh butter
fs and it went ahead and built the

470
00:09:24,630 --> 00:09:24,640
fs and it went ahead and built the
 

471
00:09:24,640 --> 00:09:26,949
fs and it went ahead and built the
system closure and because I changed I

472
00:09:26,949 --> 00:09:26,959
system closure and because I changed I
 

473
00:09:26,959 --> 00:09:28,949
system closure and because I changed I
set it up so it automatically forces the

474
00:09:28,949 --> 00:09:28,959
set it up so it automatically forces the
 

475
00:09:28,959 --> 00:09:31,790
set it up so it automatically forces the
IP add address it's now going to just

476
00:09:31,790 --> 00:09:31,800
IP add address it's now going to just
 

477
00:09:31,800 --> 00:09:35,389
IP add address it's now going to just
set it uh to that IP address so I'll be

478
00:09:35,389 --> 00:09:35,399
set it uh to that IP address so I'll be
 

479
00:09:35,399 --> 00:09:36,829
set it uh to that IP address so I'll be
back when this is done copying all this

480
00:09:36,829 --> 00:09:36,839
back when this is done copying all this
 

481
00:09:36,839 --> 00:09:38,670
back when this is done copying all this
because this takes quite a minute but uh

482
00:09:38,670 --> 00:09:38,680
because this takes quite a minute but uh
 

483
00:09:38,680 --> 00:09:40,509
because this takes quite a minute but uh
yeah it'll do it all in parallel if you

484
00:09:40,509 --> 00:09:40,519
yeah it'll do it all in parallel if you
 

485
00:09:40,519 --> 00:09:42,310
yeah it'll do it all in parallel if you
have multiple systems at the same time

486
00:09:42,310 --> 00:09:42,320
have multiple systems at the same time
 

487
00:09:42,320 --> 00:09:43,590
have multiple systems at the same time
it'll just start new threads and do

488
00:09:43,590 --> 00:09:43,600
it'll just start new threads and do
 

489
00:09:43,600 --> 00:09:45,750
it'll just start new threads and do
multiple installs concurrently so it

490
00:09:45,750 --> 00:09:45,760
multiple installs concurrently so it
 

491
00:09:45,760 --> 00:09:47,190
multiple installs concurrently so it
should take roughly the same time for

492
00:09:47,190 --> 00:09:47,200
should take roughly the same time for
 

493
00:09:47,200 --> 00:09:49,030
should take roughly the same time for
the same number of machines as long as

494
00:09:49,030 --> 00:09:49,040
the same number of machines as long as
 

495
00:09:49,040 --> 00:09:51,670
the same number of machines as long as
you it's around 10 machines is is what

496
00:09:51,670 --> 00:09:51,680
you it's around 10 machines is is what
 

497
00:09:51,680 --> 00:09:53,230
you it's around 10 machines is is what
terraform tries to do at a time but you

498
00:09:53,230 --> 00:09:53,240
terraform tries to do at a time but you
 

499
00:09:53,240 --> 00:09:54,949
terraform tries to do at a time but you
can override this to be as many as you

500
00:09:54,949 --> 00:09:54,959
can override this to be as many as you
 

501
00:09:54,959 --> 00:09:57,350
can override this to be as many as you
want so I'll be right

502
00:09:57,350 --> 00:09:57,360
want so I'll be right
 

503
00:09:57,360 --> 00:09:59,829
want so I'll be right
back okay so now that it's finished

504
00:09:59,829 --> 00:09:59,839
back okay so now that it's finished
 

505
00:09:59,839 --> 00:10:02,230
back okay so now that it's finished
copying all of that um it goes ahead and

506
00:10:02,230 --> 00:10:02,240
copying all of that um it goes ahead and
 

507
00:10:02,240 --> 00:10:04,910
copying all of that um it goes ahead and
runs an actual deployment uh on the

508
00:10:04,910 --> 00:10:04,920
runs an actual deployment uh on the
 

509
00:10:04,920 --> 00:10:08,150
runs an actual deployment uh on the
remote so in this case here it copied uh

510
00:10:08,150 --> 00:10:08,160
remote so in this case here it copied uh
 

511
00:10:08,160 --> 00:10:10,350
remote so in this case here it copied uh
all the extra stuff it needed and it

512
00:10:10,350 --> 00:10:10,360
all the extra stuff it needed and it
 

513
00:10:10,360 --> 00:10:12,509
all the extra stuff it needed and it
said installation finished as you can

514
00:10:12,509 --> 00:10:12,519
said installation finished as you can
 

515
00:10:12,519 --> 00:10:16,069
said installation finished as you can
see here so now it went ahead and added

516
00:10:16,069 --> 00:10:16,079
see here so now it went ahead and added
 

517
00:10:16,079 --> 00:10:19,030
see here so now it went ahead and added
the IP address to the system and now

518
00:10:19,030 --> 00:10:19,040
the IP address to the system and now
 

519
00:10:19,040 --> 00:10:21,430
the IP address to the system and now
that it rebooted again and it's fully

520
00:10:21,430 --> 00:10:21,440
that it rebooted again and it's fully
 

521
00:10:21,440 --> 00:10:24,350
that it rebooted again and it's fully
installed it's now performing the nyos

522
00:10:24,350 --> 00:10:24,360
installed it's now performing the nyos
 

523
00:10:24,360 --> 00:10:27,310
installed it's now performing the nyos
rebuilt so in this case it's executing

524
00:10:27,310 --> 00:10:27,320
rebuilt so in this case it's executing
 

525
00:10:27,320 --> 00:10:30,030
rebuilt so in this case it's executing
the with all these flags and setup it's

526
00:10:30,030 --> 00:10:30,040
the with all these flags and setup it's
 

527
00:10:30,040 --> 00:10:31,750
the with all these flags and setup it's
just doing ni copy and it's copying the

528
00:10:31,750 --> 00:10:31,760
just doing ni copy and it's copying the
 

529
00:10:31,760 --> 00:10:33,550
just doing ni copy and it's copying the
closure and then executing that closure

530
00:10:33,550 --> 00:10:33,560
closure and then executing that closure
 

531
00:10:33,560 --> 00:10:36,110
closure and then executing that closure
there which when nexos rebuild actually

532
00:10:36,110 --> 00:10:36,120
there which when nexos rebuild actually
 

533
00:10:36,120 --> 00:10:38,389
there which when nexos rebuild actually
runs it just generates a bash script

534
00:10:38,389 --> 00:10:38,399
runs it just generates a bash script
 

535
00:10:38,399 --> 00:10:41,030
runs it just generates a bash script
that goes ahead and does all the changes

536
00:10:41,030 --> 00:10:41,040
that goes ahead and does all the changes
 

537
00:10:41,040 --> 00:10:43,110
that goes ahead and does all the changes
so now I ran it and in this case it

538
00:10:43,110 --> 00:10:43,120
so now I ran it and in this case it
 

539
00:10:43,120 --> 00:10:46,389
so now I ran it and in this case it
failed because I actually did not copy

540
00:10:46,389 --> 00:10:46,399
failed because I actually did not copy
 

541
00:10:46,399 --> 00:10:49,150
failed because I actually did not copy
my Sops Keys however it doesn't really

542
00:10:49,150 --> 00:10:49,160
my Sops Keys however it doesn't really
 

543
00:10:49,160 --> 00:10:51,550
my Sops Keys however it doesn't really
matter because it's still set up and it

544
00:10:51,550 --> 00:10:51,560
matter because it's still set up and it
 

545
00:10:51,560 --> 00:10:53,430
matter because it's still set up and it
still is finished deploying it just

546
00:10:53,430 --> 00:10:53,440
still is finished deploying it just
 

547
00:10:53,440 --> 00:10:55,829
still is finished deploying it just
failed that so uh if I copy my keys I

548
00:10:55,829 --> 00:10:55,839
failed that so uh if I copy my keys I
 

549
00:10:55,839 --> 00:10:57,389
failed that so uh if I copy my keys I
can reapply to show you what an update

550
00:10:57,389 --> 00:10:57,399
can reapply to show you what an update
 

551
00:10:57,399 --> 00:10:58,710
can reapply to show you what an update
looks like and I'll show you that in a

552
00:10:58,710 --> 00:10:58,720
looks like and I'll show you that in a
 

553
00:10:58,720 --> 00:11:01,389
looks like and I'll show you that in a
second okay so my router closed off

554
00:11:01,389 --> 00:11:01,399
second okay so my router closed off
 

555
00:11:01,399 --> 00:11:05,030
second okay so my router closed off
access but uh the install itself did

556
00:11:05,030 --> 00:11:05,040
access but uh the install itself did
 

557
00:11:05,040 --> 00:11:07,550
access but uh the install itself did
function and it is a system running on

558
00:11:07,550 --> 00:11:07,560
function and it is a system running on
 

559
00:11:07,560 --> 00:11:09,350
function and it is a system running on
on my network it's just uh acting a

560
00:11:09,350 --> 00:11:09,360
on my network it's just uh acting a
 

561
00:11:09,360 --> 00:11:12,910
on my network it's just uh acting a
little weird but if I if I were to go

562
00:11:12,910 --> 00:11:12,920
little weird but if I if I were to go
 

563
00:11:12,920 --> 00:11:17,269
little weird but if I if I were to go
ahead and just copy the keys over to the

564
00:11:17,269 --> 00:11:17,279
ahead and just copy the keys over to the
 

565
00:11:17,279 --> 00:11:20,150
ahead and just copy the keys over to the
system and I ran terraform apply it

566
00:11:20,150 --> 00:11:20,160
system and I ran terraform apply it
 

567
00:11:20,160 --> 00:11:22,829
system and I ran terraform apply it
would go ahead and build the system and

568
00:11:22,829 --> 00:11:22,839
would go ahead and build the system and
 

569
00:11:22,839 --> 00:11:24,829
would go ahead and build the system and
uh update so yeah I hope that was

570
00:11:24,829 --> 00:11:24,839
uh update so yeah I hope that was
 

571
00:11:24,839 --> 00:11:26,750
uh update so yeah I hope that was
helpful and I hope that you start using

572
00:11:26,750 --> 00:11:26,760
helpful and I hope that you start using
 

573
00:11:26,760 --> 00:11:29,629
helpful and I hope that you start using
terraform uh it's it's a good way to

574
00:11:29,629 --> 00:11:29,639
terraform uh it's it's a good way to
 

575
00:11:29,639 --> 00:11:32,389
terraform uh it's it's a good way to
deploy stuff and if you let's say in the

576
00:11:32,389 --> 00:11:32,399
deploy stuff and if you let's say in the
 

577
00:11:32,399 --> 00:11:36,629
deploy stuff and if you let's say in the
future had a kubernetes cluster that you

578
00:11:36,629 --> 00:11:36,639
future had a kubernetes cluster that you
 

579
00:11:36,639 --> 00:11:39,750
future had a kubernetes cluster that you
were going to add using k3s or proxmox

580
00:11:39,750 --> 00:11:39,760
were going to add using k3s or proxmox
 

581
00:11:39,760 --> 00:11:41,269
were going to add using k3s or proxmox
for an example which I do want to make

582
00:11:41,269 --> 00:11:41,279
for an example which I do want to make
 

583
00:11:41,279 --> 00:11:42,949
for an example which I do want to make
some videos kind of covering how those

584
00:11:42,949 --> 00:11:42,959
some videos kind of covering how those
 

585
00:11:42,959 --> 00:11:46,710
some videos kind of covering how those
work uh you can use terraform to set up

586
00:11:46,710 --> 00:11:46,720
work uh you can use terraform to set up
 

587
00:11:46,720 --> 00:11:48,069
work uh you can use terraform to set up
prox MOX

588
00:11:48,069 --> 00:11:48,079
prox MOX
 

589
00:11:48,079 --> 00:11:50,790
prox MOX
automatically um on the system so you

590
00:11:50,790 --> 00:11:50,800
automatically um on the system so you
 

591
00:11:50,800 --> 00:11:53,350
automatically um on the system so you
can use NYX OS to install prox Mox and

592
00:11:53,350 --> 00:11:53,360
can use NYX OS to install prox Mox and
 

593
00:11:53,360 --> 00:11:55,790
can use NYX OS to install prox Mox and
generate a a template VM and then use

594
00:11:55,790 --> 00:11:55,800
generate a a template VM and then use
 

595
00:11:55,800 --> 00:11:59,030
generate a a template VM and then use
terraform to copy that VM and have uh

596
00:11:59,030 --> 00:11:59,040
terraform to copy that VM and have uh
 

597
00:11:59,040 --> 00:12:01,190
terraform to copy that VM and have uh
just just infrastructure is code set up

598
00:12:01,190 --> 00:12:01,200
just just infrastructure is code set up
 

599
00:12:01,200 --> 00:12:03,069
just just infrastructure is code set up
and for kubernetes you can set up the

600
00:12:03,069 --> 00:12:03,079
and for kubernetes you can set up the
 

601
00:12:03,079 --> 00:12:05,670
and for kubernetes you can set up the
kubernetes cluster on NX OS systems and

602
00:12:05,670 --> 00:12:05,680
kubernetes cluster on NX OS systems and
 

603
00:12:05,680 --> 00:12:07,389
kubernetes cluster on NX OS systems and
then you can use terraform to uh

604
00:12:07,389 --> 00:12:07,399
then you can use terraform to uh
 

605
00:12:07,399 --> 00:12:10,350
then you can use terraform to uh
bootstrap Argo CD for giops yeah I hope

606
00:12:10,350 --> 00:12:10,360
bootstrap Argo CD for giops yeah I hope
 

607
00:12:10,360 --> 00:12:11,629
bootstrap Argo CD for giops yeah I hope
that helped and I hope you have a great

608
00:12:11,629 --> 00:12:11,639
that helped and I hope you have a great
 

609
00:12:11,639 --> 00:12:15,160
that helped and I hope you have a great
day bye

