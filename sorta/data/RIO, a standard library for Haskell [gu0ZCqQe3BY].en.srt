1
00:00:01,970 --> 00:00:07,480

[Music]

2
00:00:07,480 --> 00:00:07,490
[Music]
 

3
00:00:07,490 --> 00:00:09,410
[Music]
all right we're gonna go ahead and get

4
00:00:09,410 --> 00:00:09,420
all right we're gonna go ahead and get
 

5
00:00:09,420 --> 00:00:12,410
all right we're gonna go ahead and get
started welcome everyone my name is

6
00:00:12,410 --> 00:00:12,420
started welcome everyone my name is
 

7
00:00:12,420 --> 00:00:14,209
started welcome everyone my name is
Michael Simon welcome to this FP

8
00:00:14,209 --> 00:00:14,219
Michael Simon welcome to this FP
 

9
00:00:14,219 --> 00:00:16,250
Michael Simon welcome to this FP
complete webinar today we are going to

10
00:00:16,250 --> 00:00:16,260
complete webinar today we are going to
 

11
00:00:16,260 --> 00:00:17,930
complete webinar today we are going to
be talking about real a standard library

12
00:00:17,930 --> 00:00:17,940
be talking about real a standard library
 

13
00:00:17,940 --> 00:00:21,080
be talking about real a standard library
for Haskell I'm going to be shotgunning

14
00:00:21,080 --> 00:00:21,090
for Haskell I'm going to be shotgunning
 

15
00:00:21,090 --> 00:00:22,790
for Haskell I'm going to be shotgunning
this I'm going to be reviewing the text

16
00:00:22,790 --> 00:00:22,800
this I'm going to be reviewing the text
 

17
00:00:22,800 --> 00:00:25,400
this I'm going to be reviewing the text
chat and answering the Q&A section and

18
00:00:25,400 --> 00:00:25,410
chat and answering the Q&A section and
 

19
00:00:25,410 --> 00:00:27,800
chat and answering the Q&A section and
bringing up any questions live at

20
00:00:27,800 --> 00:00:27,810
bringing up any questions live at
 

21
00:00:27,810 --> 00:00:30,230
bringing up any questions live at
appropriate times this webinar is going

22
00:00:30,230 --> 00:00:30,240
appropriate times this webinar is going
 

23
00:00:30,240 --> 00:00:32,060
appropriate times this webinar is going
to be presented by alexei Cola Shevek

24
00:00:32,060 --> 00:00:32,070
to be presented by alexei Cola Shevek
 

25
00:00:32,070 --> 00:00:34,880
to be presented by alexei Cola Shevek
one of our senior Haskell developers

26
00:00:34,880 --> 00:00:34,890
one of our senior Haskell developers
 

27
00:00:34,890 --> 00:00:36,709
one of our senior Haskell developers
here at FB complete at this point I'm

28
00:00:36,709 --> 00:00:36,719
here at FB complete at this point I'm
 

29
00:00:36,719 --> 00:00:38,180
here at FB complete at this point I'm
gonna hand the floor over to Alexei

30
00:00:38,180 --> 00:00:38,190
gonna hand the floor over to Alexei
 

31
00:00:38,190 --> 00:00:41,049
gonna hand the floor over to Alexei
Alexei please take it away

32
00:00:41,049 --> 00:00:41,059
Alexei please take it away
 

33
00:00:41,059 --> 00:00:45,110
Alexei please take it away
hi everybody good time over to you

34
00:00:45,110 --> 00:00:45,120
hi everybody good time over to you
 

35
00:00:45,120 --> 00:00:47,569
hi everybody good time over to you
my name is Lexi as Michael said I will

36
00:00:47,569 --> 00:00:47,579
my name is Lexi as Michael said I will
 

37
00:00:47,579 --> 00:00:52,279
my name is Lexi as Michael said I will
be talking about Rio library I will be

38
00:00:52,279 --> 00:00:52,289
be talking about Rio library I will be
 

39
00:00:52,289 --> 00:00:54,380
be talking about Rio library I will be
talking about it from the perspective of

40
00:00:54,380 --> 00:00:54,390
talking about it from the perspective of
 

41
00:00:54,390 --> 00:00:58,369
talking about it from the perspective of
a user of the library thanks to Michael

42
00:00:58,369 --> 00:00:58,379
a user of the library thanks to Michael
 

43
00:00:58,379 --> 00:01:02,060
a user of the library thanks to Michael
who one of the main contributors and

44
00:01:02,060 --> 00:01:02,070
who one of the main contributors and
 

45
00:01:02,070 --> 00:01:06,530
who one of the main contributors and
authors of this library so I'm gonna

46
00:01:06,530 --> 00:01:06,540
authors of this library so I'm gonna
 

47
00:01:06,540 --> 00:01:09,859
authors of this library so I'm gonna
mention a little bit about the concerts

48
00:01:09,859 --> 00:01:09,869
mention a little bit about the concerts
 

49
00:01:09,869 --> 00:01:12,679
mention a little bit about the concerts
it's it introduces and I'll talk about

50
00:01:12,679 --> 00:01:12,689
it's it introduces and I'll talk about
 

51
00:01:12,689 --> 00:01:15,289
it's it introduces and I'll talk about
what does have what sort of promises or

52
00:01:15,289 --> 00:01:15,299
what does have what sort of promises or
 

53
00:01:15,299 --> 00:01:19,880
what does have what sort of promises or
souls and how we going to be using it I

54
00:01:19,880 --> 00:01:19,890
souls and how we going to be using it I
 

55
00:01:19,890 --> 00:01:22,490
souls and how we going to be using it I
will the second half of the talk will be

56
00:01:22,490 --> 00:01:22,500
will the second half of the talk will be
 

57
00:01:22,500 --> 00:01:25,039
will the second half of the talk will be
an application demo application that

58
00:01:25,039 --> 00:01:25,049
an application demo application that
 

59
00:01:25,049 --> 00:01:29,780
an application demo application that
I've created just for this webinar so we

60
00:01:29,780 --> 00:01:29,790
I've created just for this webinar so we
 

61
00:01:29,790 --> 00:01:33,819
I've created just for this webinar so we
can actually see some classical examples

62
00:01:33,819 --> 00:01:33,829

 

63
00:01:33,829 --> 00:01:36,620

so where does the real name come from

64
00:01:36,620 --> 00:01:36,630
so where does the real name come from
 

65
00:01:36,630 --> 00:01:39,710
so where does the real name come from
it's a not from Rio de Janeiro although

66
00:01:39,710 --> 00:01:39,720
it's a not from Rio de Janeiro although
 

67
00:01:39,720 --> 00:01:42,230
it's a not from Rio de Janeiro although
the picture on github is nice to look at

68
00:01:42,230 --> 00:01:42,240
the picture on github is nice to look at
 

69
00:01:42,240 --> 00:01:44,359
the picture on github is nice to look at
the name actually comes from a reader

70
00:01:44,359 --> 00:01:44,369
the name actually comes from a reader
 

71
00:01:44,369 --> 00:01:48,560
the name actually comes from a reader
design pattern with T in IO there is a

72
00:01:48,560 --> 00:01:48,570
design pattern with T in IO there is a
 

73
00:01:48,570 --> 00:01:52,160
design pattern with T in IO there is a
bitter ambiguity which is coloring half

74
00:01:52,160 --> 00:01:52,170
bitter ambiguity which is coloring half
 

75
00:01:52,170 --> 00:01:54,020
bitter ambiguity which is coloring half
cup packages there is a real package

76
00:01:54,020 --> 00:01:54,030
cup packages there is a real package
 

77
00:01:54,030 --> 00:01:56,270
cup packages there is a real package
there is a real module and there is a

78
00:01:56,270 --> 00:01:56,280
there is a real module and there is a
 

79
00:01:56,280 --> 00:01:58,310
there is a real module and there is a
real data table but it's very

80
00:01:58,310 --> 00:01:58,320
real data table but it's very
 

81
00:01:58,320 --> 00:02:00,350
real data table but it's very
unambiguous whenever you bring some

82
00:02:00,350 --> 00:02:00,360
unambiguous whenever you bring some
 

83
00:02:00,360 --> 00:02:03,289
unambiguous whenever you bring some
context in there

84
00:02:03,289 --> 00:02:03,299

 

85
00:02:03,299 --> 00:02:06,639

so what is the real first of all it is a

86
00:02:06,639 --> 00:02:06,649
so what is the real first of all it is a
 

87
00:02:06,649 --> 00:02:10,660
so what is the real first of all it is a
prelude replacement as you already heard

88
00:02:10,660 --> 00:02:10,670
prelude replacement as you already heard
 

89
00:02:10,670 --> 00:02:13,700
prelude replacement as you already heard
it exports a lot of functionality

90
00:02:13,700 --> 00:02:13,710
it exports a lot of functionality
 

91
00:02:13,710 --> 00:02:17,090
it exports a lot of functionality
from prelude it's doesn't try to

92
00:02:17,090 --> 00:02:17,100
from prelude it's doesn't try to
 

93
00:02:17,100 --> 00:02:18,980
from prelude it's doesn't try to
re-implement everything like some other

94
00:02:18,980 --> 00:02:18,990
re-implement everything like some other
 

95
00:02:18,990 --> 00:02:23,840
re-implement everything like some other
problems do well what it does it tries

96
00:02:23,840 --> 00:02:23,850
problems do well what it does it tries
 

97
00:02:23,850 --> 00:02:27,440
problems do well what it does it tries
to hide everything that is not that good

98
00:02:27,440 --> 00:02:27,450
to hide everything that is not that good
 

99
00:02:27,450 --> 00:02:31,750
to hide everything that is not that good
or safe for instance partial functions

100
00:02:31,750 --> 00:02:31,760

 

101
00:02:31,760 --> 00:02:34,310

there is no functions that interact with

102
00:02:34,310 --> 00:02:34,320
there is no functions that interact with
 

103
00:02:34,320 --> 00:02:36,890
there is no functions that interact with
the terminal or handles important by

104
00:02:36,890 --> 00:02:36,900
the terminal or handles important by
 

105
00:02:36,900 --> 00:02:40,040
the terminal or handles important by
default I'll talk about a little bit

106
00:02:40,040 --> 00:02:40,050
default I'll talk about a little bit
 

107
00:02:40,050 --> 00:02:43,490
default I'll talk about a little bit
about it later there is a lot of imports

108
00:02:43,490 --> 00:02:43,500
about it later there is a lot of imports
 

109
00:02:43,500 --> 00:02:45,770
about it later there is a lot of imports
of the functions that I normally have to

110
00:02:45,770 --> 00:02:45,780
of the functions that I normally have to
 

111
00:02:45,780 --> 00:02:48,590
of the functions that I normally have to
be imported manually if you deal with

112
00:02:48,590 --> 00:02:48,600
be imported manually if you deal with
 

113
00:02:48,600 --> 00:02:50,930
be imported manually if you deal with
just regular Perley and they imported by

114
00:02:50,930 --> 00:02:50,940
just regular Perley and they imported by
 

115
00:02:50,940 --> 00:02:54,350
just regular Perley and they imported by
default like strict fault and proxy and

116
00:02:54,350 --> 00:02:54,360
default like strict fault and proxy and
 

117
00:02:54,360 --> 00:02:56,000
default like strict fault and proxy and
stuff like that there is a whole

118
00:02:56,000 --> 00:02:56,010
stuff like that there is a whole
 

119
00:02:56,010 --> 00:02:58,250
stuff like that there is a whole
collection of functions that are not

120
00:02:58,250 --> 00:02:58,260
collection of functions that are not
 

121
00:02:58,260 --> 00:03:01,730
collection of functions that are not
available in base this is just a very

122
00:03:01,730 --> 00:03:01,740
available in base this is just a very
 

123
00:03:01,740 --> 00:03:03,710
available in base this is just a very
short list just to give you an idea

124
00:03:03,710 --> 00:03:03,720
short list just to give you an idea
 

125
00:03:03,720 --> 00:03:08,350
short list just to give you an idea
something like not worth that will do

126
00:03:08,350 --> 00:03:08,360
something like not worth that will do
 

127
00:03:08,360 --> 00:03:14,030
something like not worth that will do
efficient removal of duplicates broken

128
00:03:14,030 --> 00:03:14,040
efficient removal of duplicates broken
 

129
00:03:14,040 --> 00:03:17,870
efficient removal of duplicates broken
fixes some broken functions and it also

130
00:03:17,870 --> 00:03:17,880
fixes some broken functions and it also
 

131
00:03:17,880 --> 00:03:20,990
fixes some broken functions and it also
lifts all of their iOS are your actions

132
00:03:20,990 --> 00:03:21,000
lifts all of their iOS are your actions
 

133
00:03:21,000 --> 00:03:24,260
lifts all of their iOS are your actions
from restricting to IO to monitor lift

134
00:03:24,260 --> 00:03:24,270
from restricting to IO to monitor lift
 

135
00:03:24,270 --> 00:03:26,960
from restricting to IO to monitor lift
IO or mod modded IO or monitored lift IO

136
00:03:26,960 --> 00:03:26,970
IO or mod modded IO or monitored lift IO
 

137
00:03:26,970 --> 00:03:29,780
IO or mod modded IO or monitored lift IO
and there is a little bit of tension I

138
00:03:29,780 --> 00:03:29,790
and there is a little bit of tension I
 

139
00:03:29,790 --> 00:03:34,900
and there is a little bit of tension I
want to bring to durable atomic rights

140
00:03:34,900 --> 00:03:34,910
want to bring to durable atomic rights
 

141
00:03:34,910 --> 00:03:37,820
want to bring to durable atomic rights
check very cool functions police check

142
00:03:37,820 --> 00:03:37,830
check very cool functions police check
 

143
00:03:37,830 --> 00:03:39,890
check very cool functions police check
mark but I'm not gonna be talking about

144
00:03:39,890 --> 00:03:39,900
mark but I'm not gonna be talking about
 

145
00:03:39,900 --> 00:03:43,820
mark but I'm not gonna be talking about
those in particular in this webinar also

146
00:03:43,820 --> 00:03:43,830
those in particular in this webinar also
 

147
00:03:43,830 --> 00:03:47,420
those in particular in this webinar also
Rio is a collection of vetted libraries

148
00:03:47,420 --> 00:03:47,430
Rio is a collection of vetted libraries
 

149
00:03:47,430 --> 00:03:48,770
Rio is a collection of vetted libraries
that were well known in the community

150
00:03:48,770 --> 00:03:48,780
that were well known in the community
 

151
00:03:48,780 --> 00:03:52,340
that were well known in the community
they've known to be fast safe and they

152
00:03:52,340 --> 00:03:52,350
they've known to be fast safe and they
 

153
00:03:52,350 --> 00:03:54,110
they've known to be fast safe and they
work very well together

154
00:03:54,110 --> 00:03:54,120
work very well together
 

155
00:03:54,120 --> 00:03:58,070
work very well together
they this is a full list of dependencies

156
00:03:58,070 --> 00:03:58,080
they this is a full list of dependencies
 

157
00:03:58,080 --> 00:03:59,660
they this is a full list of dependencies
over your library and most of the

158
00:03:59,660 --> 00:03:59,670
over your library and most of the
 

159
00:03:59,670 --> 00:04:02,420
over your library and most of the
functionality in this libraries will be

160
00:04:02,420 --> 00:04:02,430
functionality in this libraries will be
 

161
00:04:02,430 --> 00:04:05,150
functionality in this libraries will be
exported by Rio some with slight

162
00:04:05,150 --> 00:04:05,160
exported by Rio some with slight
 

163
00:04:05,160 --> 00:04:12,650
exported by Rio some with slight
modifications some directly what sort of

164
00:04:12,650 --> 00:04:12,660
modifications some directly what sort of
 

165
00:04:12,660 --> 00:04:15,370
modifications some directly what sort of
problems does view yourself besides the

166
00:04:15,370 --> 00:04:15,380
problems does view yourself besides the
 

167
00:04:15,380 --> 00:04:17,300
problems does view yourself besides the
prelude replaced in the collection of

168
00:04:17,300 --> 00:04:17,310
prelude replaced in the collection of
 

169
00:04:17,310 --> 00:04:19,070
prelude replaced in the collection of
libraries it brings together best

170
00:04:19,070 --> 00:04:19,080
libraries it brings together best
 

171
00:04:19,080 --> 00:04:21,710
libraries it brings together best
practices that we found over the years

172
00:04:21,710 --> 00:04:21,720
practices that we found over the years
 

173
00:04:21,720 --> 00:04:24,350
practices that we found over the years
to work very well for develop in-house

174
00:04:24,350 --> 00:04:24,360
to work very well for develop in-house
 

175
00:04:24,360 --> 00:04:25,030
to work very well for develop in-house
programs

176
00:04:25,030 --> 00:04:25,040
programs
 

177
00:04:25,040 --> 00:04:27,550
programs
and libraries and also design patterns

178
00:04:27,550 --> 00:04:27,560
and libraries and also design patterns
 

179
00:04:27,560 --> 00:04:31,900
and libraries and also design patterns
and I will touch upon each one of those

180
00:04:31,900 --> 00:04:31,910
and I will touch upon each one of those
 

181
00:04:31,910 --> 00:04:37,240
and I will touch upon each one of those
points in more detail in a little bit so

182
00:04:37,240 --> 00:04:37,250
points in more detail in a little bit so
 

183
00:04:37,250 --> 00:04:39,250
points in more detail in a little bit so
first we'll start with consistent

184
00:04:39,250 --> 00:04:39,260
first we'll start with consistent
 

185
00:04:39,260 --> 00:04:43,720
first we'll start with consistent
imports I'm sure a lot of you written

186
00:04:43,720 --> 00:04:43,730
imports I'm sure a lot of you written
 

187
00:04:43,730 --> 00:04:46,720
imports I'm sure a lot of you written
code like that where you import by

188
00:04:46,720 --> 00:04:46,730
code like that where you import by
 

189
00:04:46,730 --> 00:04:48,490
code like that where you import by
string you import the type and then you

190
00:04:48,490 --> 00:04:48,500
string you import the type and then you
 

191
00:04:48,500 --> 00:04:50,430
string you import the type and then you
call if I import all the functions and

192
00:04:50,430 --> 00:04:50,440
call if I import all the functions and
 

193
00:04:50,440 --> 00:04:54,940
call if I import all the functions and
then same with containers or an order

194
00:04:54,940 --> 00:04:54,950
then same with containers or an order
 

195
00:04:54,950 --> 00:04:57,310
then same with containers or an order
containers who lists or what have you

196
00:04:57,310 --> 00:04:57,320
containers who lists or what have you
 

197
00:04:57,320 --> 00:05:00,940
containers who lists or what have you
now you can do important directly from

198
00:05:00,940 --> 00:05:00,950
now you can do important directly from
 

199
00:05:00,950 --> 00:05:04,750
now you can do important directly from
real and it doesn't provide lazy stuff

200
00:05:04,750 --> 00:05:04,760
real and it doesn't provide lazy stuff
 

201
00:05:04,760 --> 00:05:07,750
real and it doesn't provide lazy stuff
like lazy by strings or lazy maps just

202
00:05:07,750 --> 00:05:07,760
like lazy by strings or lazy maps just
 

203
00:05:07,760 --> 00:05:10,210
like lazy by strings or lazy maps just
because if you want to write efficient

204
00:05:10,210 --> 00:05:10,220
because if you want to write efficient
 

205
00:05:10,220 --> 00:05:13,900
because if you want to write efficient
programs usually don't need those and as

206
00:05:13,900 --> 00:05:13,910
programs usually don't need those and as
 

207
00:05:13,910 --> 00:05:17,560
programs usually don't need those and as
such you can still import this not

208
00:05:17,560 --> 00:05:17,570
such you can still import this not
 

209
00:05:17,570 --> 00:05:20,190
such you can still import this not
re-exported style by Rio but you will

210
00:05:20,190 --> 00:05:20,200
re-exported style by Rio but you will
 

211
00:05:20,200 --> 00:05:23,770
re-exported style by Rio but you will
end up editing an independancy to your

212
00:05:23,770 --> 00:05:23,780
end up editing an independancy to your
 

213
00:05:23,780 --> 00:05:28,420
end up editing an independancy to your
COBOL file package demo file and you'll

214
00:05:28,420 --> 00:05:28,430
COBOL file package demo file and you'll
 

215
00:05:28,430 --> 00:05:32,470
COBOL file package demo file and you'll
have to do it manually so as I said by

216
00:05:32,470 --> 00:05:32,480
have to do it manually so as I said by
 

217
00:05:32,480 --> 00:05:34,780
have to do it manually so as I said by
string map set stuff like that is

218
00:05:34,780 --> 00:05:34,790
string map set stuff like that is
 

219
00:05:34,790 --> 00:05:36,940
string map set stuff like that is
imported by default from if you do it

220
00:05:36,940 --> 00:05:36,950
imported by default from if you do it
 

221
00:05:36,950 --> 00:05:40,620
imported by default from if you do it
for real

222
00:05:40,620 --> 00:05:40,630

 

223
00:05:40,630 --> 00:05:44,020

all these re-exports do not export

224
00:05:44,020 --> 00:05:44,030
all these re-exports do not export
 

225
00:05:44,030 --> 00:05:46,450
all these re-exports do not export
partial functions or anything unsafe if

226
00:05:46,450 --> 00:05:46,460
partial functions or anything unsafe if
 

227
00:05:46,460 --> 00:05:48,820
partial functions or anything unsafe if
you want to use that it have to be

228
00:05:48,820 --> 00:05:48,830
you want to use that it have to be
 

229
00:05:48,830 --> 00:05:51,190
you want to use that it have to be
imported manually so for example if you

230
00:05:51,190 --> 00:05:51,200
imported manually so for example if you
 

231
00:05:51,200 --> 00:05:55,000
imported manually so for example if you
want to use an indexing function from

232
00:05:55,000 --> 00:05:55,010
want to use an indexing function from
 

233
00:05:55,010 --> 00:05:59,980
want to use an indexing function from
vector that will throw a runtime

234
00:05:59,980 --> 00:05:59,990
vector that will throw a runtime
 

235
00:05:59,990 --> 00:06:01,960
vector that will throw a runtime
exception from your code this is

236
00:06:01,960 --> 00:06:01,970
exception from your code this is
 

237
00:06:01,970 --> 00:06:03,970
exception from your code this is
considered partial it will have to be

238
00:06:03,970 --> 00:06:03,980
considered partial it will have to be
 

239
00:06:03,980 --> 00:06:06,010
considered partial it will have to be
imported many and I will say you know

240
00:06:06,010 --> 00:06:06,020
imported many and I will say you know
 

241
00:06:06,020 --> 00:06:07,570
imported many and I will say you know
try to avoid it at all times

242
00:06:07,570 --> 00:06:07,580
try to avoid it at all times
 

243
00:06:07,580 --> 00:06:10,900
try to avoid it at all times
Oh cast there of the time safe

244
00:06:10,900 --> 00:06:10,910
Oh cast there of the time safe
 

245
00:06:10,910 --> 00:06:14,500
Oh cast there of the time safe
counterparts for all functions there is

246
00:06:14,500 --> 00:06:14,510
counterparts for all functions there is
 

247
00:06:14,510 --> 00:06:18,730
counterparts for all functions there is
also concept of I said and they have to

248
00:06:18,730 --> 00:06:18,740
also concept of I said and they have to
 

249
00:06:18,740 --> 00:06:20,650
also concept of I said and they have to
be imported explicitly as well for

250
00:06:20,650 --> 00:06:20,660
be imported explicitly as well for
 

251
00:06:20,660 --> 00:06:24,880
be imported explicitly as well for
modules in ton checked and what this

252
00:06:24,880 --> 00:06:24,890
modules in ton checked and what this
 

253
00:06:24,890 --> 00:06:26,320
modules in ton checked and what this
means is these functions will have

254
00:06:26,320 --> 00:06:26,330
means is these functions will have
 

255
00:06:26,330 --> 00:06:29,050
means is these functions will have
certain preconditions to them that you

256
00:06:29,050 --> 00:06:29,060
certain preconditions to them that you
 

257
00:06:29,060 --> 00:06:30,790
certain preconditions to them that you
violated they will behave very

258
00:06:30,790 --> 00:06:30,800
violated they will behave very
 

259
00:06:30,800 --> 00:06:36,670
violated they will behave very
dangerously and will unsafe functions I

260
00:06:36,670 --> 00:06:36,680
dangerously and will unsafe functions I
 

261
00:06:36,680 --> 00:06:37,930
dangerously and will unsafe functions I
even worse

262
00:06:37,930 --> 00:06:37,940
even worse
 

263
00:06:37,940 --> 00:06:40,720
even worse
that they if you violate the

264
00:06:40,720 --> 00:06:40,730
that they if you violate the
 

265
00:06:40,730 --> 00:06:43,240
that they if you violate the
preconditions you you can break a fridge

266
00:06:43,240 --> 00:06:43,250
preconditions you you can break a fridge
 

267
00:06:43,250 --> 00:06:46,390
preconditions you you can break a fridge
with transparency costs egg falls so you

268
00:06:46,390 --> 00:06:46,400
with transparency costs egg falls so you
 

269
00:06:46,400 --> 00:06:48,520
with transparency costs egg falls so you
better really be sure that you don't

270
00:06:48,520 --> 00:06:48,530
better really be sure that you don't
 

271
00:06:48,530 --> 00:06:50,890
better really be sure that you don't
violate these preconditions whenever you

272
00:06:50,890 --> 00:06:50,900
violate these preconditions whenever you
 

273
00:06:50,900 --> 00:06:53,860
violate these preconditions whenever you
use that safe right for instance you got

274
00:06:53,860 --> 00:06:53,870
use that safe right for instance you got
 

275
00:06:53,870 --> 00:06:56,140
use that safe right for instance you got
to make sure that the bounds are correct

276
00:06:56,140 --> 00:06:56,150
to make sure that the bounds are correct
 

277
00:06:56,150 --> 00:07:00,640
to make sure that the bounds are correct
I mean why would we even export them if

278
00:07:00,640 --> 00:07:00,650
I mean why would we even export them if
 

279
00:07:00,650 --> 00:07:03,160
I mean why would we even export them if
they're not that safe well for

280
00:07:03,160 --> 00:07:03,170
they're not that safe well for
 

281
00:07:03,170 --> 00:07:05,230
they're not that safe well for
performance reasons sometimes if you're

282
00:07:05,230 --> 00:07:05,240
performance reasons sometimes if you're
 

283
00:07:05,240 --> 00:07:07,900
performance reasons sometimes if you're
sure your code is correct you can switch

284
00:07:07,900 --> 00:07:07,910
sure your code is correct you can switch
 

285
00:07:07,910 --> 00:07:10,470
sure your code is correct you can switch
to unsafe variants and use those for

286
00:07:10,470 --> 00:07:10,480
to unsafe variants and use those for
 

287
00:07:10,480 --> 00:07:19,380
to unsafe variants and use those for
performance here's a list of extensions

288
00:07:19,380 --> 00:07:19,390
performance here's a list of extensions
 

289
00:07:19,390 --> 00:07:22,420
performance here's a list of extensions
jigs and extensions that we consider

290
00:07:22,420 --> 00:07:22,430
jigs and extensions that we consider
 

291
00:07:22,430 --> 00:07:25,350
jigs and extensions that we consider
safe you can find always an updated list

292
00:07:25,350 --> 00:07:25,360
safe you can find always an updated list
 

293
00:07:25,360 --> 00:07:29,350
safe you can find always an updated list
and you have patients read B you can

294
00:07:29,350 --> 00:07:29,360
and you have patients read B you can
 

295
00:07:29,360 --> 00:07:33,640
and you have patients read B you can
include him globally in a cabal file or

296
00:07:33,640 --> 00:07:33,650
include him globally in a cabal file or
 

297
00:07:33,650 --> 00:07:37,060
include him globally in a cabal file or
if you prefer turn them on turn them on

298
00:07:37,060 --> 00:07:37,070
if you prefer turn them on turn them on
 

299
00:07:37,070 --> 00:07:39,100
if you prefer turn them on turn them on
manually at the top of the file it's up

300
00:07:39,100 --> 00:07:39,110
manually at the top of the file it's up
 

301
00:07:39,110 --> 00:07:43,390
manually at the top of the file it's up
to you that's all I have to say about

302
00:07:43,390 --> 00:07:43,400
to you that's all I have to say about
 

303
00:07:43,400 --> 00:07:47,230
to you that's all I have to say about
those now there is also GC flags which

304
00:07:47,230 --> 00:07:47,240
those now there is also GC flags which
 

305
00:07:47,240 --> 00:07:50,680
those now there is also GC flags which
are good to turn on by default these

306
00:07:50,680 --> 00:07:50,690
are good to turn on by default these
 

307
00:07:50,690 --> 00:07:53,260
are good to turn on by default these
will prevent you from shooting yourself

308
00:07:53,260 --> 00:07:53,270
will prevent you from shooting yourself
 

309
00:07:53,270 --> 00:07:56,260
will prevent you from shooting yourself
in the foot and help with compatibility

310
00:07:56,260 --> 00:07:56,270
in the foot and help with compatibility
 

311
00:07:56,270 --> 00:08:00,159
in the foot and help with compatibility
across GHC versions and for production

312
00:08:00,159 --> 00:08:00,169
across GHC versions and for production
 

313
00:08:00,169 --> 00:08:03,400
across GHC versions and for production
and continuous integration it's also a

314
00:08:03,400 --> 00:08:03,410
and continuous integration it's also a
 

315
00:08:03,410 --> 00:08:10,870
and continuous integration it's also a
good idea to enable W error if you want

316
00:08:10,870 --> 00:08:10,880
good idea to enable W error if you want
 

317
00:08:10,880 --> 00:08:14,200
good idea to enable W error if you want
to start using real it's very easy there

318
00:08:14,200 --> 00:08:14,210
to start using real it's very easy there
 

319
00:08:14,210 --> 00:08:16,330
to start using real it's very easy there
is even a template for a stack and can

320
00:08:16,330 --> 00:08:16,340
is even a template for a stack and can
 

321
00:08:16,340 --> 00:08:18,220
is even a template for a stack and can
run and it will create a skeleton for

322
00:08:18,220 --> 00:08:18,230
run and it will create a skeleton for
 

323
00:08:18,230 --> 00:08:24,520
run and it will create a skeleton for
you with all the structure that you

324
00:08:24,520 --> 00:08:24,530
you with all the structure that you
 

325
00:08:24,530 --> 00:08:28,080
you with all the structure that you
might need this test the application for

326
00:08:28,080 --> 00:08:28,090
might need this test the application for
 

327
00:08:28,090 --> 00:08:30,909
might need this test the application for
having a quick start the application of

328
00:08:30,909 --> 00:08:30,919
having a quick start the application of
 

329
00:08:30,919 --> 00:08:34,719
having a quick start the application of
our library fuse all by some other means

330
00:08:34,719 --> 00:08:34,729
our library fuse all by some other means
 

331
00:08:34,729 --> 00:08:36,610
our library fuse all by some other means
whatever you prefer just at every you as

332
00:08:36,610 --> 00:08:36,620
whatever you prefer just at every you as
 

333
00:08:36,620 --> 00:08:39,760
whatever you prefer just at every you as
a dependency to you package the yellow

334
00:08:39,760 --> 00:08:39,770
a dependency to you package the yellow
 

335
00:08:39,770 --> 00:08:42,969
a dependency to you package the yellow
or cabal file and as well as extension

336
00:08:42,969 --> 00:08:42,979
or cabal file and as well as extension
 

337
00:08:42,979 --> 00:08:45,820
or cabal file and as well as extension
if you wish the reason why I bring this

338
00:08:45,820 --> 00:08:45,830
if you wish the reason why I bring this
 

339
00:08:45,830 --> 00:08:49,900
if you wish the reason why I bring this
slide up is also to point out that real

340
00:08:49,900 --> 00:08:49,910
slide up is also to point out that real
 

341
00:08:49,910 --> 00:08:51,690
slide up is also to point out that real
works with

342
00:08:51,690 --> 00:08:51,700
works with
 

343
00:08:51,700 --> 00:08:54,810
works with
GT version 8 and up

344
00:08:54,810 --> 00:08:54,820
GT version 8 and up
 

345
00:08:54,820 --> 00:08:57,510
GT version 8 and up
zero and up so 710 and below an

346
00:08:57,510 --> 00:08:57,520
zero and up so 710 and below an
 

347
00:08:57,520 --> 00:09:02,700
zero and up so 710 and below an
unsupported another design that now I

348
00:09:02,700 --> 00:09:02,710
unsupported another design that now I
 

349
00:09:02,710 --> 00:09:05,840
unsupported another design that now I
want to switch the design patterns and

350
00:09:05,840 --> 00:09:05,850
want to switch the design patterns and
 

351
00:09:05,850 --> 00:09:08,070
want to switch the design patterns and
first one is going to be exceptions

352
00:09:08,070 --> 00:09:08,080
first one is going to be exceptions
 

353
00:09:08,080 --> 00:09:10,340
first one is going to be exceptions
which is very touching and very

354
00:09:10,340 --> 00:09:10,350
which is very touching and very
 

355
00:09:10,350 --> 00:09:12,510
which is very touching and very
excessive not sensitive but very

356
00:09:12,510 --> 00:09:12,520
excessive not sensitive but very
 

357
00:09:12,520 --> 00:09:16,050
excessive not sensitive but very
important topic in half code because it

358
00:09:16,050 --> 00:09:16,060
important topic in half code because it
 

359
00:09:16,060 --> 00:09:18,630
important topic in half code because it
can be complicated the example I have

360
00:09:18,630 --> 00:09:18,640
can be complicated the example I have
 

361
00:09:18,640 --> 00:09:22,410
can be complicated the example I have
over here is not has nothing nothing to

362
00:09:22,410 --> 00:09:22,420
over here is not has nothing nothing to
 

363
00:09:22,420 --> 00:09:24,450
over here is not has nothing nothing to
do with reordan it just one of my

364
00:09:24,450 --> 00:09:24,460
do with reordan it just one of my
 

365
00:09:24,460 --> 00:09:26,910
do with reordan it just one of my
favorite examples of how Haskell can

366
00:09:26,910 --> 00:09:26,920
favorite examples of how Haskell can
 

367
00:09:26,920 --> 00:09:30,540
favorite examples of how Haskell can
programs can fail either silently with

368
00:09:30,540 --> 00:09:30,550
programs can fail either silently with
 

369
00:09:30,550 --> 00:09:33,720
programs can fail either silently with
just overflows or with pure exceptions

370
00:09:33,720 --> 00:09:33,730
just overflows or with pure exceptions
 

371
00:09:33,730 --> 00:09:37,560
just overflows or with pure exceptions
for reason so what do we say just

372
00:09:37,560 --> 00:09:37,570
for reason so what do we say just
 

373
00:09:37,570 --> 00:09:39,810
for reason so what do we say just
whenever you write applications is if

374
00:09:39,810 --> 00:09:39,820
whenever you write applications is if
 

375
00:09:39,820 --> 00:09:42,990
whenever you write applications is if
you're at a pure function and it has to

376
00:09:42,990 --> 00:09:43,000
you're at a pure function and it has to
 

377
00:09:43,000 --> 00:09:45,960
you're at a pure function and it has to
fail fail it purely with a explicit type

378
00:09:45,960 --> 00:09:45,970
fail fail it purely with a explicit type
 

379
00:09:45,970 --> 00:09:47,810
fail fail it purely with a explicit type
level limitation that it may be or

380
00:09:47,810 --> 00:09:47,820
level limitation that it may be or
 

381
00:09:47,820 --> 00:09:50,910
level limitation that it may be or
either if you want to be more general

382
00:09:50,910 --> 00:09:50,920
either if you want to be more general
 

383
00:09:50,920 --> 00:09:52,800
either if you want to be more general
you could go with the throw throw M

384
00:09:52,800 --> 00:09:52,810
you could go with the throw throw M
 

385
00:09:52,810 --> 00:09:55,320
you could go with the throw throw M
which will unify with either and maybe

386
00:09:55,320 --> 00:09:55,330
which will unify with either and maybe
 

387
00:09:55,330 --> 00:09:57,720
which will unify with either and maybe
as well

388
00:09:57,720 --> 00:09:57,730

 

389
00:09:57,730 --> 00:10:03,120

avoid error this should be reserved for

390
00:10:03,120 --> 00:10:03,130
avoid error this should be reserved for
 

391
00:10:03,130 --> 00:10:05,700
avoid error this should be reserved for
something truly impossible that can

392
00:10:05,700 --> 00:10:05,710
something truly impossible that can
 

393
00:10:05,710 --> 00:10:07,370
something truly impossible that can
never happen

394
00:10:07,370 --> 00:10:07,380
never happen
 

395
00:10:07,380 --> 00:10:09,540
never happen
throwing pure exceptions

396
00:10:09,540 --> 00:10:09,550
throwing pure exceptions
 

397
00:10:09,550 --> 00:10:12,360
throwing pure exceptions
I mean throw an exception from pure code

398
00:10:12,360 --> 00:10:12,370
I mean throw an exception from pure code
 

399
00:10:12,370 --> 00:10:13,560
I mean throw an exception from pure code
is also frowned upon

400
00:10:13,560 --> 00:10:13,570
is also frowned upon
 

401
00:10:13,570 --> 00:10:16,740
is also frowned upon
try try to avoid it and the fine can be

402
00:10:16,740 --> 00:10:16,750
try try to avoid it and the fine can be
 

403
00:10:16,750 --> 00:10:19,410
try try to avoid it and the fine can be
used as a temporary placeholder but it's

404
00:10:19,410 --> 00:10:19,420
used as a temporary placeholder but it's
 

405
00:10:19,420 --> 00:10:23,390
used as a temporary placeholder but it's
way too easy to just forget about it

406
00:10:23,390 --> 00:10:23,400
way too easy to just forget about it
 

407
00:10:23,400 --> 00:10:27,720
way too easy to just forget about it
avoid it as well some like to use except

408
00:10:27,720 --> 00:10:27,730
avoid it as well some like to use except
 

409
00:10:27,730 --> 00:10:31,680
avoid it as well some like to use except
for exception handling and these can be

410
00:10:31,680 --> 00:10:31,690
for exception handling and these can be
 

411
00:10:31,690 --> 00:10:34,530
for exception handling and these can be
dangerous so there is a very few blog

412
00:10:34,530 --> 00:10:34,540
dangerous so there is a very few blog
 

413
00:10:34,540 --> 00:10:37,490
dangerous so there is a very few blog
posts also written by Michael and some

414
00:10:37,490 --> 00:10:37,500
posts also written by Michael and some
 

415
00:10:37,500 --> 00:10:41,910
posts also written by Michael and some
other material on mind that hopefully

416
00:10:41,910 --> 00:10:41,920
other material on mind that hopefully
 

417
00:10:41,920 --> 00:10:44,090
other material on mind that hopefully
can convince you better than I can but

418
00:10:44,090 --> 00:10:44,100
can convince you better than I can but
 

419
00:10:44,100 --> 00:10:48,040
can convince you better than I can but
if you're dealing with the exception in

420
00:10:48,040 --> 00:10:48,050
if you're dealing with the exception in
 

421
00:10:48,050 --> 00:10:49,790
if you're dealing with the exception in
[Music]

422
00:10:49,790 --> 00:10:49,800
[Music]
 

423
00:10:49,800 --> 00:10:52,260
[Music]
you know yo chill then just stick to our

424
00:10:52,260 --> 00:10:52,270
you know yo chill then just stick to our
 

425
00:10:52,270 --> 00:10:55,140
you know yo chill then just stick to our
because except he can give you an

426
00:10:55,140 --> 00:10:55,150
because except he can give you an
 

427
00:10:55,150 --> 00:10:57,450
because except he can give you an
expected results and it also doesn't

428
00:10:57,450 --> 00:10:57,460
expected results and it also doesn't
 

429
00:10:57,460 --> 00:10:59,880
expected results and it also doesn't
show you all the exceptions that can be

430
00:10:59,880 --> 00:10:59,890
show you all the exceptions that can be
 

431
00:10:59,890 --> 00:11:01,200
show you all the exceptions that can be
thrown because there's always a

432
00:11:01,200 --> 00:11:01,210
thrown because there's always a
 

433
00:11:01,210 --> 00:11:04,020
thrown because there's always a
synchronous exceptions and there is also

434
00:11:04,020 --> 00:11:04,030
synchronous exceptions and there is also
 

435
00:11:04,030 --> 00:11:05,290
synchronous exceptions and there is also
such demons mask is

436
00:11:05,290 --> 00:11:05,300
such demons mask is
 

437
00:11:05,300 --> 00:11:07,060
such demons mask is
cannot be cannot be represented with

438
00:11:07,060 --> 00:11:07,070
cannot be cannot be represented with
 

439
00:11:07,070 --> 00:11:17,050
cannot be cannot be represented with
type of so the next thing is catching

440
00:11:17,050 --> 00:11:17,060
type of so the next thing is catching
 

441
00:11:17,060 --> 00:11:19,630
type of so the next thing is catching
exceptions this was how we throw

442
00:11:19,630 --> 00:11:19,640
exceptions this was how we throw
 

443
00:11:19,640 --> 00:11:23,530
exceptions this was how we throw
exceptions catching exceptions is if you

444
00:11:23,530 --> 00:11:23,540
exceptions catching exceptions is if you
 

445
00:11:23,540 --> 00:11:26,710
exceptions catching exceptions is if you
do that just just a nail i like michael

446
00:11:26,710 --> 00:11:26,720
do that just just a nail i like michael
 

447
00:11:26,720 --> 00:11:29,410
do that just just a nail i like michael
says bite the bullet and I should do

448
00:11:29,410 --> 00:11:29,420
says bite the bullet and I should do
 

449
00:11:29,420 --> 00:11:31,750
says bite the bullet and I should do
build a beautiful state or dealing with

450
00:11:31,750 --> 00:11:31,760
build a beautiful state or dealing with
 

451
00:11:31,760 --> 00:11:34,960
build a beautiful state or dealing with
kitchen exceptions it's better to stick

452
00:11:34,960 --> 00:11:34,970
kitchen exceptions it's better to stick
 

453
00:11:34,970 --> 00:11:38,650
kitchen exceptions it's better to stick
with a or something like I Oh which can

454
00:11:38,650 --> 00:11:38,660
with a or something like I Oh which can
 

455
00:11:38,660 --> 00:11:43,389
with a or something like I Oh which can
be reader the or real you never recover

456
00:11:43,389 --> 00:11:43,399
be reader the or real you never recover
 

457
00:11:43,399 --> 00:11:45,790
be reader the or real you never recover
from a synchronous exceptions in fact

458
00:11:45,790 --> 00:11:45,800
from a synchronous exceptions in fact
 

459
00:11:45,800 --> 00:11:49,660
from a synchronous exceptions in fact
Rio does not provide it doesn't export

460
00:11:49,660 --> 00:11:49,670
Rio does not provide it doesn't export
 

461
00:11:49,670 --> 00:11:52,150
Rio does not provide it doesn't export
any functions that can allow you

462
00:11:52,150 --> 00:11:52,160
any functions that can allow you
 

463
00:11:52,160 --> 00:11:55,720
any functions that can allow you
catching synchronous exceptions so for

464
00:11:55,720 --> 00:11:55,730
catching synchronous exceptions so for
 

465
00:11:55,730 --> 00:11:57,579
catching synchronous exceptions so for
good reason because you should never

466
00:11:57,579 --> 00:11:57,589
good reason because you should never
 

467
00:11:57,589 --> 00:12:00,579
good reason because you should never
cover for them or they suggest ways to

468
00:12:00,579 --> 00:12:00,589
cover for them or they suggest ways to
 

469
00:12:00,589 --> 00:12:06,130
cover for them or they suggest ways to
use bracket pattern finally footing with

470
00:12:06,130 --> 00:12:06,140
use bracket pattern finally footing with
 

471
00:12:06,140 --> 00:12:08,889
use bracket pattern finally footing with
resources and catch and handle which

472
00:12:08,889 --> 00:12:08,899
resources and catch and handle which
 

473
00:12:08,899 --> 00:12:13,210
resources and catch and handle which
will ignore the asynchronous exceptions

474
00:12:13,210 --> 00:12:13,220
will ignore the asynchronous exceptions
 

475
00:12:13,220 --> 00:12:17,650
will ignore the asynchronous exceptions
and communications exceptions always use

476
00:12:17,650 --> 00:12:17,660
and communications exceptions always use
 

477
00:12:17,660 --> 00:12:20,380
and communications exceptions always use
their we've the style pattern which is

478
00:12:20,380 --> 00:12:20,390
their we've the style pattern which is
 

479
00:12:20,390 --> 00:12:22,120
their we've the style pattern which is
only seen which means they will be

480
00:12:22,120 --> 00:12:22,130
only seen which means they will be
 

481
00:12:22,130 --> 00:12:24,190
only seen which means they will be
exported from the Rio whenever there is

482
00:12:24,190 --> 00:12:24,200
exported from the Rio whenever there is
 

483
00:12:24,200 --> 00:12:27,550
exported from the Rio whenever there is
some sort or resource allocation and you

484
00:12:27,550 --> 00:12:27,560
some sort or resource allocation and you
 

485
00:12:27,560 --> 00:12:29,199
some sort or resource allocation and you
will see two throughout the examples

486
00:12:29,199 --> 00:12:29,209
will see two throughout the examples
 

487
00:12:29,209 --> 00:12:32,170
will see two throughout the examples
there's also this new thing you might

488
00:12:32,170 --> 00:12:32,180
there's also this new thing you might
 

489
00:12:32,180 --> 00:12:36,010
there's also this new thing you might
not haven't seen with modern least i/o

490
00:12:36,010 --> 00:12:36,020
not haven't seen with modern least i/o
 

491
00:12:36,020 --> 00:12:38,170
not haven't seen with modern least i/o
it's fairly new just as a real library

492
00:12:38,170 --> 00:12:38,180
it's fairly new just as a real library
 

493
00:12:38,180 --> 00:12:43,930
it's fairly new just as a real library
is burning you a couple years old there

494
00:12:43,930 --> 00:12:43,940
is burning you a couple years old there
 

495
00:12:43,940 --> 00:12:45,970
is burning you a couple years old there
is a blog post that goes into a little

496
00:12:45,970 --> 00:12:45,980
is a blog post that goes into a little
 

497
00:12:45,980 --> 00:12:47,860
is a blog post that goes into a little
bit more detail I'm gonna show you how

498
00:12:47,860 --> 00:12:47,870
bit more detail I'm gonna show you how
 

499
00:12:47,870 --> 00:12:50,319
bit more detail I'm gonna show you how
to use the matter going to explain what

500
00:12:50,319 --> 00:12:50,329
to use the matter going to explain what
 

501
00:12:50,329 --> 00:12:54,280
to use the matter going to explain what
actually does but to give you an a just

502
00:12:54,280 --> 00:12:54,290
actually does but to give you an a just
 

503
00:12:54,290 --> 00:12:56,710
actually does but to give you an a just
a feel for it it's it helps you deal

504
00:12:56,710 --> 00:12:56,720
a feel for it it's it helps you deal
 

505
00:12:56,720 --> 00:12:59,319
a feel for it it's it helps you deal
with the exceptions and with this with

506
00:12:59,319 --> 00:12:59,329
with the exceptions and with this with
 

507
00:12:59,329 --> 00:13:07,990
with the exceptions and with this with
style actions under lift your provides a

508
00:13:07,990 --> 00:13:08,000
style actions under lift your provides a
 

509
00:13:08,000 --> 00:13:13,360
style actions under lift your provides a
lot of functions gathers together quite

510
00:13:13,360 --> 00:13:13,370
lot of functions gathers together quite
 

511
00:13:13,370 --> 00:13:15,250
lot of functions gathers together quite
a few libraries like a sink

512
00:13:15,250 --> 00:13:15,260
a few libraries like a sink
 

513
00:13:15,260 --> 00:13:19,060
a few libraries like a sink
STM and it provides this

514
00:13:19,060 --> 00:13:19,070
STM and it provides this
 

515
00:13:19,070 --> 00:13:20,980
STM and it provides this
functions that they have except in the

516
00:13:20,980 --> 00:13:20,990
functions that they have except in the
 

517
00:13:20,990 --> 00:13:23,350
functions that they have except in the
lifted fashion they will have a

518
00:13:23,350 --> 00:13:23,360
lifted fashion they will have a
 

519
00:13:23,360 --> 00:13:25,420
lifted fashion they will have a
restriction on a tie oh come on I had

520
00:13:25,420 --> 00:13:25,430
restriction on a tie oh come on I had
 

521
00:13:25,430 --> 00:13:26,590
restriction on a tie oh come on I had
looked at you instead of being

522
00:13:26,590 --> 00:13:26,600
looked at you instead of being
 

523
00:13:26,600 --> 00:13:30,160
looked at you instead of being
restricted to IO this allows us to use

524
00:13:30,160 --> 00:13:30,170
restricted to IO this allows us to use
 

525
00:13:30,170 --> 00:13:34,300
restricted to IO this allows us to use
this functions for all of the things

526
00:13:34,300 --> 00:13:34,310
this functions for all of the things
 

527
00:13:34,310 --> 00:13:36,180
this functions for all of the things
I've described before like real for real

528
00:13:36,180 --> 00:13:36,190
I've described before like real for real
 

529
00:13:36,190 --> 00:13:43,449
I've described before like real for real
reader team email and so these modules

530
00:13:43,449 --> 00:13:43,459
reader team email and so these modules
 

531
00:13:43,459 --> 00:13:45,370
reader team email and so these modules
they are all imported by default

532
00:13:45,370 --> 00:13:45,380
they are all imported by default
 

533
00:13:45,380 --> 00:13:47,829
they are all imported by default
whenever you do import real this will be

534
00:13:47,829 --> 00:13:47,839
whenever you do import real this will be
 

535
00:13:47,839 --> 00:13:49,870
whenever you do import real this will be
all available to you together with real

536
00:13:49,870 --> 00:13:49,880
all available to you together with real
 

537
00:13:49,880 --> 00:13:52,720
all available to you together with real
directory angry or directory can be

538
00:13:52,720 --> 00:13:52,730
directory angry or directory can be
 

539
00:13:52,730 --> 00:13:55,329
directory angry or directory can be
imported explicitly if you need it but

540
00:13:55,329 --> 00:13:55,339
imported explicitly if you need it but
 

541
00:13:55,339 --> 00:13:58,389
imported explicitly if you need it but
the point is all of this functionality

542
00:13:58,389 --> 00:13:58,399
the point is all of this functionality
 

543
00:13:58,399 --> 00:14:00,790
the point is all of this functionality
that you normally need for writing

544
00:14:00,790 --> 00:14:00,800
that you normally need for writing
 

545
00:14:00,800 --> 00:14:02,860
that you normally need for writing
applications will be available for you

546
00:14:02,860 --> 00:14:02,870
applications will be available for you
 

547
00:14:02,870 --> 00:14:09,129
applications will be available for you
right away and they're all very very

548
00:14:09,129 --> 00:14:09,139
right away and they're all very very
 

549
00:14:09,139 --> 00:14:13,300
right away and they're all very very
good libraries so it provides a really

550
00:14:13,300 --> 00:14:13,310
good libraries so it provides a really
 

551
00:14:13,310 --> 00:14:17,230
good libraries so it provides a really
good start so what is the reader design

552
00:14:17,230 --> 00:14:17,240
good start so what is the reader design
 

553
00:14:17,240 --> 00:14:21,129
good start so what is the reader design
pattern first of all it allows you to

554
00:14:21,129 --> 00:14:21,139
pattern first of all it allows you to
 

555
00:14:21,139 --> 00:14:25,569
pattern first of all it allows you to
specify a global immutable environment a

556
00:14:25,569 --> 00:14:25,579
specify a global immutable environment a
 

557
00:14:25,579 --> 00:14:29,170
specify a global immutable environment a
global variables if you come from sea

558
00:14:29,170 --> 00:14:29,180
global variables if you come from sea
 

559
00:14:29,180 --> 00:14:31,540
global variables if you come from sea
world you will have just you know Const

560
00:14:31,540 --> 00:14:31,550
world you will have just you know Const
 

561
00:14:31,550 --> 00:14:34,030
world you will have just you know Const
variable whatever in there somewhere

562
00:14:34,030 --> 00:14:34,040
variable whatever in there somewhere
 

563
00:14:34,040 --> 00:14:37,569
variable whatever in there somewhere
at top module these we can do the same

564
00:14:37,569 --> 00:14:37,579
at top module these we can do the same
 

565
00:14:37,579 --> 00:14:39,790
at top module these we can do the same
in haskell by using unsafe perform a oh

566
00:14:39,790 --> 00:14:39,800
in haskell by using unsafe perform a oh
 

567
00:14:39,800 --> 00:14:42,490
in haskell by using unsafe perform a oh
but that's pretty ugly and you don't

568
00:14:42,490 --> 00:14:42,500
but that's pretty ugly and you don't
 

569
00:14:42,500 --> 00:14:46,449
but that's pretty ugly and you don't
want to change this you don't want to

570
00:14:46,449 --> 00:14:46,459
want to change this you don't want to
 

571
00:14:46,459 --> 00:14:47,920
want to change this you don't want to
recompile everything if you want to just

572
00:14:47,920 --> 00:14:47,930
recompile everything if you want to just
 

573
00:14:47,930 --> 00:14:51,340
recompile everything if you want to just
change it at some point there is also a

574
00:14:51,340 --> 00:14:51,350
change it at some point there is also a
 

575
00:14:51,350 --> 00:14:53,439
change it at some point there is also a
way to do it with compile flags that

576
00:14:53,439 --> 00:14:53,449
way to do it with compile flags that
 

577
00:14:53,449 --> 00:14:57,819
way to do it with compile flags that
becomes very complicated and I will

578
00:14:57,819 --> 00:14:57,829
becomes very complicated and I will
 

579
00:14:57,829 --> 00:15:00,400
becomes very complicated and I will
start with as much as possible good way

580
00:15:00,400 --> 00:15:00,410
start with as much as possible good way
 

581
00:15:00,410 --> 00:15:02,500
start with as much as possible good way
to do it is with the video pattern so

582
00:15:02,500 --> 00:15:02,510
to do it is with the video pattern so
 

583
00:15:02,510 --> 00:15:06,129
to do it is with the video pattern so
whenever you have more restriction on

584
00:15:06,129 --> 00:15:06,139
whenever you have more restriction on
 

585
00:15:06,139 --> 00:15:09,280
whenever you have more restriction on
your function you can always access this

586
00:15:09,280 --> 00:15:09,290
your function you can always access this
 

587
00:15:09,290 --> 00:15:13,090
your function you can always access this
in this environment and if you thread it

588
00:15:13,090 --> 00:15:13,100
in this environment and if you thread it
 

589
00:15:13,100 --> 00:15:14,500
in this environment and if you thread it
through all of your functions this will

590
00:15:14,500 --> 00:15:14,510
through all of your functions this will
 

591
00:15:14,510 --> 00:15:20,050
through all of your functions this will
become a global environment for you so

592
00:15:20,050 --> 00:15:20,060
become a global environment for you so
 

593
00:15:20,060 --> 00:15:21,910
become a global environment for you so
how do we pass this this environment

594
00:15:21,910 --> 00:15:21,920
how do we pass this this environment
 

595
00:15:21,920 --> 00:15:23,829
how do we pass this this environment
again with the bonnet reader this solves

596
00:15:23,829 --> 00:15:23,839
again with the bonnet reader this solves
 

597
00:15:23,839 --> 00:15:26,199
again with the bonnet reader this solves
this problem very well if you follow

598
00:15:26,199 --> 00:15:26,209
this problem very well if you follow
 

599
00:15:26,209 --> 00:15:28,540
this problem very well if you follow
your functions have this then you have

600
00:15:28,540 --> 00:15:28,550
your functions have this then you have
 

601
00:15:28,550 --> 00:15:30,250
your functions have this then you have
access to this global and global

602
00:15:30,250 --> 00:15:30,260
access to this global and global
 

603
00:15:30,260 --> 00:15:32,620
access to this global and global
environment there is a star

604
00:15:32,620 --> 00:15:32,630
environment there is a star
 

605
00:15:32,630 --> 00:15:34,830
environment there is a star
of how to do it otherwise you know

606
00:15:34,830 --> 00:15:34,840
of how to do it otherwise you know
 

607
00:15:34,840 --> 00:15:38,970
of how to do it otherwise you know
double implicit primaries they have a

608
00:15:38,970 --> 00:15:38,980
double implicit primaries they have a
 

609
00:15:38,980 --> 00:15:42,430
double implicit primaries they have a
very surprising consequences and I don't

610
00:15:42,430 --> 00:15:42,440
very surprising consequences and I don't
 

611
00:15:42,440 --> 00:15:47,020
very surprising consequences and I don't
recommend using that also you can pass

612
00:15:47,020 --> 00:15:47,030
recommend using that also you can pass
 

613
00:15:47,030 --> 00:15:49,000
recommend using that also you can pass
it as an extra argument to every single

614
00:15:49,000 --> 00:15:49,010
it as an extra argument to every single
 

615
00:15:49,010 --> 00:15:50,770
it as an extra argument to every single
function but that becomes very

616
00:15:50,770 --> 00:15:50,780
function but that becomes very
 

617
00:15:50,780 --> 00:15:53,650
function but that becomes very
complicated for refactoring and not very

618
00:15:53,650 --> 00:15:53,660
complicated for refactoring and not very
 

619
00:15:53,660 --> 00:15:57,850
complicated for refactoring and not very
composable if you wish so something

620
00:15:57,850 --> 00:15:57,860
composable if you wish so something
 

621
00:15:57,860 --> 00:16:01,240
composable if you wish so something
really works we found is reader T used

622
00:16:01,240 --> 00:16:01,250
really works we found is reader T used
 

623
00:16:01,250 --> 00:16:04,540
really works we found is reader T used
all the time and let us down yet

624
00:16:04,540 --> 00:16:04,550
all the time and let us down yet
 

625
00:16:04,550 --> 00:16:08,950
all the time and let us down yet
I could thing we can ryokan generalize

626
00:16:08,950 --> 00:16:08,960
I could thing we can ryokan generalize
 

627
00:16:08,960 --> 00:16:14,050
I could thing we can ryokan generalize
to monitor and if you want to just stick

628
00:16:14,050 --> 00:16:14,060
to monitor and if you want to just stick
 

629
00:16:14,060 --> 00:16:16,410
to monitor and if you want to just stick
to REO you can absolutely do that and

630
00:16:16,410 --> 00:16:16,420
to REO you can absolutely do that and
 

631
00:16:16,420 --> 00:16:18,850
to REO you can absolutely do that and
I'll give you a couple examples when

632
00:16:18,850 --> 00:16:18,860
I'll give you a couple examples when
 

633
00:16:18,860 --> 00:16:28,780
I'll give you a couple examples when
it's one versus another we also have a

634
00:16:28,780 --> 00:16:28,790
it's one versus another we also have a
 

635
00:16:28,790 --> 00:16:30,880
it's one versus another we also have a
global mutable state that we have to

636
00:16:30,880 --> 00:16:30,890
global mutable state that we have to
 

637
00:16:30,890 --> 00:16:34,540
global mutable state that we have to
deal somehow with a game radio pattern

638
00:16:34,540 --> 00:16:34,550
deal somehow with a game radio pattern
 

639
00:16:34,550 --> 00:16:38,650
deal somehow with a game radio pattern
helps us with it all we're gonna do is

640
00:16:38,650 --> 00:16:38,660
helps us with it all we're gonna do is
 

641
00:16:38,660 --> 00:16:42,130
helps us with it all we're gonna do is
just use explicit mutable variables so

642
00:16:42,130 --> 00:16:42,140
just use explicit mutable variables so
 

643
00:16:42,140 --> 00:16:48,010
just use explicit mutable variables so
they can live in our environment we try

644
00:16:48,010 --> 00:16:48,020
they can live in our environment we try
 

645
00:16:48,020 --> 00:16:51,070
they can live in our environment we try
to avoid state T and writer and stuff

646
00:16:51,070 --> 00:16:51,080
to avoid state T and writer and stuff
 

647
00:16:51,080 --> 00:16:52,960
to avoid state T and writer and stuff
like that because first of all

648
00:16:52,960 --> 00:16:52,970
like that because first of all
 

649
00:16:52,970 --> 00:16:55,780
like that because first of all
efficiency tends to slow things slow

650
00:16:55,780 --> 00:16:55,790
efficiency tends to slow things slow
 

651
00:16:55,790 --> 00:16:56,430
efficiency tends to slow things slow
things down

652
00:16:56,430 --> 00:16:56,440
things down
 

653
00:16:56,440 --> 00:16:59,290
things down
nested stack of transformers can be

654
00:16:59,290 --> 00:16:59,300
nested stack of transformers can be
 

655
00:16:59,300 --> 00:17:04,240
nested stack of transformers can be
confusing to a lot of people and also

656
00:17:04,240 --> 00:17:04,250
confusing to a lot of people and also
 

657
00:17:04,250 --> 00:17:07,569
confusing to a lot of people and also
gives you an impression that it's pure

658
00:17:07,569 --> 00:17:07,579
gives you an impression that it's pure
 

659
00:17:07,579 --> 00:17:13,210
gives you an impression that it's pure
we didn't when it's really not I'm gonna

660
00:17:13,210 --> 00:17:13,220
we didn't when it's really not I'm gonna
 

661
00:17:13,220 --> 00:17:15,309
we didn't when it's really not I'm gonna
do all too much on this topic but the

662
00:17:15,309 --> 00:17:15,319
do all too much on this topic but the
 

663
00:17:15,319 --> 00:17:18,160
do all too much on this topic but the
point I want to make is that reader T

664
00:17:18,160 --> 00:17:18,170
point I want to make is that reader T
 

665
00:17:18,170 --> 00:17:20,770
point I want to make is that reader T
solves our global mutable state problem

666
00:17:20,770 --> 00:17:20,780
solves our global mutable state problem
 

667
00:17:20,780 --> 00:17:23,110
solves our global mutable state problem
very well and I'll have a very nice

668
00:17:23,110 --> 00:17:23,120
very well and I'll have a very nice
 

669
00:17:23,120 --> 00:17:27,699
very well and I'll have a very nice
example there showing that so now we get

670
00:17:27,699 --> 00:17:27,709
example there showing that so now we get
 

671
00:17:27,709 --> 00:17:30,730
example there showing that so now we get
to the actual example which is the fun

672
00:17:30,730 --> 00:17:30,740
to the actual example which is the fun
 

673
00:17:30,740 --> 00:17:33,850
to the actual example which is the fun
stuff I like to look at the slides and

674
00:17:33,850 --> 00:17:33,860
stuff I like to look at the slides and
 

675
00:17:33,860 --> 00:17:37,060
stuff I like to look at the slides and
bullet points this is the applications

676
00:17:37,060 --> 00:17:37,070
bullet points this is the applications
 

677
00:17:37,070 --> 00:17:40,630
bullet points this is the applications
that we can use for demo in real this is

678
00:17:40,630 --> 00:17:40,640
that we can use for demo in real this is
 

679
00:17:40,640 --> 00:17:42,789
that we can use for demo in real this is
a web show

680
00:17:42,789 --> 00:17:42,799
a web show
 

681
00:17:42,799 --> 00:17:44,870
a web show
probably trying to solve is we have a

682
00:17:44,870 --> 00:17:44,880
probably trying to solve is we have a
 

683
00:17:44,880 --> 00:17:47,720
probably trying to solve is we have a
web server that can spawn off shells

684
00:17:47,720 --> 00:17:47,730
web server that can spawn off shells
 

685
00:17:47,730 --> 00:17:48,980
web server that can spawn off shells
like a bash

686
00:17:48,980 --> 00:17:48,990
like a bash
 

687
00:17:48,990 --> 00:17:53,630
like a bash
Sh what have you and using WebSockets it

688
00:17:53,630 --> 00:17:53,640
Sh what have you and using WebSockets it
 

689
00:17:53,640 --> 00:17:58,419
Sh what have you and using WebSockets it
can communicate over all that traffic to

690
00:17:58,419 --> 00:17:58,429
can communicate over all that traffic to
 

691
00:17:58,429 --> 00:18:01,010
can communicate over all that traffic to
to the terminal that is terminal

692
00:18:01,010 --> 00:18:01,020
to the terminal that is terminal
 

693
00:18:01,020 --> 00:18:03,789
to the terminal that is terminal
emulated the leads net users web browser

694
00:18:03,789 --> 00:18:03,799
emulated the leads net users web browser
 

695
00:18:03,799 --> 00:18:08,870
emulated the leads net users web browser
so you can open your favorite explore my

696
00:18:08,870 --> 00:18:08,880
so you can open your favorite explore my
 

697
00:18:08,880 --> 00:18:13,279
so you can open your favorite explore my
browser in going to your your private

698
00:18:13,279 --> 00:18:13,289
browser in going to your your private
 

699
00:18:13,289 --> 00:18:16,610
browser in going to your your private
web server and if you have a minute

700
00:18:16,610 --> 00:18:16,620
web server and if you have a minute
 

701
00:18:16,620 --> 00:18:18,680
web server and if you have a minute
authentication you can just go ahead and

702
00:18:18,680 --> 00:18:18,690
authentication you can just go ahead and
 

703
00:18:18,690 --> 00:18:25,399
authentication you can just go ahead and
log in through the web so how do we do

704
00:18:25,399 --> 00:18:25,409
log in through the web so how do we do
 

705
00:18:25,409 --> 00:18:29,080
log in through the web so how do we do
that the first thing we need to do is

706
00:18:29,080 --> 00:18:29,090
that the first thing we need to do is
 

707
00:18:29,090 --> 00:18:34,549
that the first thing we need to do is
create a Sulha terminal in order for for

708
00:18:34,549 --> 00:18:34,559
create a Sulha terminal in order for for
 

709
00:18:34,559 --> 00:18:36,140
create a Sulha terminal in order for for
it to work this will work only on unix

710
00:18:36,140 --> 00:18:36,150
it to work this will work only on unix
 

711
00:18:36,150 --> 00:18:38,149
it to work this will work only on unix
but that's okay we don't care about

712
00:18:38,149 --> 00:18:38,159
but that's okay we don't care about
 

713
00:18:38,159 --> 00:18:41,419
but that's okay we don't care about
windows just getting really works with

714
00:18:41,419 --> 00:18:41,429
windows just getting really works with
 

715
00:18:41,429 --> 00:18:42,860
windows just getting really works with
windows as well but this particular

716
00:18:42,860 --> 00:18:42,870
windows as well but this particular
 

717
00:18:42,870 --> 00:18:49,930
windows as well but this particular
example is not here i want to bring up

718
00:18:49,930 --> 00:18:49,940
example is not here i want to bring up
 

719
00:18:49,940 --> 00:18:54,470
example is not here i want to bring up
the first usership of real it's a fairly

720
00:18:54,470 --> 00:18:54,480
the first usership of real it's a fairly
 

721
00:18:54,480 --> 00:18:56,630
the first usership of real it's a fairly
straightforward function it takes an

722
00:18:56,630 --> 00:18:56,640
straightforward function it takes an
 

723
00:18:56,640 --> 00:18:59,180
straightforward function it takes an
epoch token that we used that we will

724
00:18:59,180 --> 00:18:59,190
epoch token that we used that we will
 

725
00:18:59,190 --> 00:19:01,909
epoch token that we used that we will
use to identify a terminal in in our

726
00:19:01,909 --> 00:19:01,919
use to identify a terminal in in our
 

727
00:19:01,919 --> 00:19:05,149
use to identify a terminal in in our
global state our global staple the wedge

728
00:19:05,149 --> 00:19:05,159
global state our global staple the wedge
 

729
00:19:05,159 --> 00:19:07,970
global state our global staple the wedge
state which is just my RF and you can

730
00:19:07,970 --> 00:19:07,980
state which is just my RF and you can
 

731
00:19:07,980 --> 00:19:12,320
state which is just my RF and you can
see that it is our environment in the

732
00:19:12,320 --> 00:19:12,330
see that it is our environment in the
 

733
00:19:12,330 --> 00:19:16,640
see that it is our environment in the
real model so we can access this state

734
00:19:16,640 --> 00:19:16,650
real model so we can access this state
 

735
00:19:16,650 --> 00:19:20,930
real model so we can access this state
by getting the the ref and we can modify

736
00:19:20,930 --> 00:19:20,940
by getting the the ref and we can modify
 

737
00:19:20,940 --> 00:19:25,669
by getting the the ref and we can modify
it as we please so what do you want to

738
00:19:25,669 --> 00:19:25,679
it as we please so what do you want to
 

739
00:19:25,679 --> 00:19:28,520
it as we please so what do you want to
do is we want to create a terminal which

740
00:19:28,520 --> 00:19:28,530
do is we want to create a terminal which
 

741
00:19:28,530 --> 00:19:30,950
do is we want to create a terminal which
essentially what it does it cause a

742
00:19:30,950 --> 00:19:30,960
essentially what it does it cause a
 

743
00:19:30,960 --> 00:19:33,890
essentially what it does it cause a
system call that will give us back to

744
00:19:33,890 --> 00:19:33,900
system call that will give us back to
 

745
00:19:33,900 --> 00:19:34,820
system call that will give us back to
file handles

746
00:19:34,820 --> 00:19:34,830
file handles
 

747
00:19:34,830 --> 00:19:37,580
file handles
or to file scriptures that will turn

748
00:19:37,580 --> 00:19:37,590
or to file scriptures that will turn
 

749
00:19:37,590 --> 00:19:40,039
or to file scriptures that will turn
handles that's not terribly important

750
00:19:40,039 --> 00:19:40,049
handles that's not terribly important
 

751
00:19:40,049 --> 00:19:41,899
handles that's not terribly important
the important part is that whatever we

752
00:19:41,899 --> 00:19:41,909
the important part is that whatever we
 

753
00:19:41,909 --> 00:19:44,299
the important part is that whatever we
get these two handles we need to make

754
00:19:44,299 --> 00:19:44,309
get these two handles we need to make
 

755
00:19:44,309 --> 00:19:45,860
get these two handles we need to make
sure that we close them otherwise you're

756
00:19:45,860 --> 00:19:45,870
sure that we close them otherwise you're
 

757
00:19:45,870 --> 00:19:48,260
sure that we close them otherwise you're
going to be a little resource so we have

758
00:19:48,260 --> 00:19:48,270
going to be a little resource so we have
 

759
00:19:48,270 --> 00:19:53,740
going to be a little resource so we have
to use this bracket pattern which we

760
00:19:53,740 --> 00:19:53,750
to use this bracket pattern which we
 

761
00:19:53,750 --> 00:19:56,730
to use this bracket pattern which we
acquire resources the term

762
00:19:56,730 --> 00:19:56,740
acquire resources the term
 

763
00:19:56,740 --> 00:19:58,380
acquire resources the term
that contains two handles and then we

764
00:19:58,380 --> 00:19:58,390
that contains two handles and then we
 

765
00:19:58,390 --> 00:20:01,680
that contains two handles and then we
close it the you notice here we close

766
00:20:01,680 --> 00:20:01,690
close it the you notice here we close
 

767
00:20:01,690 --> 00:20:04,740
close it the you notice here we close
these handles and at the same time we

768
00:20:04,740 --> 00:20:04,750
these handles and at the same time we
 

769
00:20:04,750 --> 00:20:08,250
these handles and at the same time we
also modify Lin global state we and our

770
00:20:08,250 --> 00:20:08,260
also modify Lin global state we and our
 

771
00:20:08,260 --> 00:20:12,690
also modify Lin global state we and our
terminal to our global state and then

772
00:20:12,690 --> 00:20:12,700
terminal to our global state and then
 

773
00:20:12,700 --> 00:20:14,750
terminal to our global state and then
once we're done whatever there might be

774
00:20:14,750 --> 00:20:14,760
once we're done whatever there might be
 

775
00:20:14,760 --> 00:20:19,230
once we're done whatever there might be
caused by an exception or by user type

776
00:20:19,230 --> 00:20:19,240
caused by an exception or by user type
 

777
00:20:19,240 --> 00:20:23,820
caused by an exception or by user type
in exit we delete that the terminal from

778
00:20:23,820 --> 00:20:23,830
in exit we delete that the terminal from
 

779
00:20:23,830 --> 00:20:29,040
in exit we delete that the terminal from
our state great this should work fine

780
00:20:29,040 --> 00:20:29,050
our state great this should work fine
 

781
00:20:29,050 --> 00:20:31,320
our state great this should work fine
we have properly resource cleanup we

782
00:20:31,320 --> 00:20:31,330
we have properly resource cleanup we
 

783
00:20:31,330 --> 00:20:34,110
we have properly resource cleanup we
it's all accepted safe there is a little

784
00:20:34,110 --> 00:20:34,120
it's all accepted safe there is a little
 

785
00:20:34,120 --> 00:20:37,970
it's all accepted safe there is a little
bit problem that not were well component

786
00:20:37,970 --> 00:20:37,980
bit problem that not were well component
 

787
00:20:37,980 --> 00:20:40,620
bit problem that not were well component
if this function will be called only

788
00:20:40,620 --> 00:20:40,630
if this function will be called only
 

789
00:20:40,630 --> 00:20:42,540
if this function will be called only
once with this particular environment

790
00:20:42,540 --> 00:20:42,550
once with this particular environment
 

791
00:20:42,550 --> 00:20:45,600
once with this particular environment
that'll be okay but we gonna be coming

792
00:20:45,600 --> 00:20:45,610
that'll be okay but we gonna be coming
 

793
00:20:45,610 --> 00:20:47,640
that'll be okay but we gonna be coming
with a different environment so what we

794
00:20:47,640 --> 00:20:47,650
with a different environment so what we
 

795
00:20:47,650 --> 00:20:50,430
with a different environment so what we
can do in order to resolve that is

796
00:20:50,430 --> 00:20:50,440
can do in order to resolve that is
 

797
00:20:50,440 --> 00:20:54,770
can do in order to resolve that is
switch to monad reader just an example

798
00:20:54,770 --> 00:20:54,780
switch to monad reader just an example
 

799
00:20:54,780 --> 00:21:00,020
switch to monad reader just an example
show here real wish state is essentially

800
00:21:00,020 --> 00:21:00,030
show here real wish state is essentially
 

801
00:21:00,030 --> 00:21:03,810
show here real wish state is essentially
same as a reader th state mail because

802
00:21:03,810 --> 00:21:03,820
same as a reader th state mail because
 

803
00:21:03,820 --> 00:21:10,320
same as a reader th state mail because
Rio is just a wrapper around so if we go

804
00:21:10,320 --> 00:21:10,330
Rio is just a wrapper around so if we go
 

805
00:21:10,330 --> 00:21:13,650
Rio is just a wrapper around so if we go
further we can go ahead and make it more

806
00:21:13,650 --> 00:21:13,660
further we can go ahead and make it more
 

807
00:21:13,660 --> 00:21:17,610
further we can go ahead and make it more
general in particularly switch as I said

808
00:21:17,610 --> 00:21:17,620
general in particularly switch as I said
 

809
00:21:17,620 --> 00:21:22,350
general in particularly switch as I said
to monad reader but normally we wouldn't

810
00:21:22,350 --> 00:21:22,360
to monad reader but normally we wouldn't
 

811
00:21:22,360 --> 00:21:25,830
to monad reader but normally we wouldn't
be able to do that because we using a

812
00:21:25,830 --> 00:21:25,840
be able to do that because we using a
 

813
00:21:25,840 --> 00:21:29,160
be able to do that because we using a
bracket pad this is where Mona on leaf

814
00:21:29,160 --> 00:21:29,170
bracket pad this is where Mona on leaf
 

815
00:21:29,170 --> 00:21:31,140
bracket pad this is where Mona on leaf
that you all comes into play it allows

816
00:21:31,140 --> 00:21:31,150
that you all comes into play it allows
 

817
00:21:31,150 --> 00:21:35,100
that you all comes into play it allows
us to to use a functions like bracket

818
00:21:35,100 --> 00:21:35,110
us to to use a functions like bracket
 

819
00:21:35,110 --> 00:21:39,930
us to to use a functions like bracket
and catch and we can use it for more

820
00:21:39,930 --> 00:21:39,940
and catch and we can use it for more
 

821
00:21:39,940 --> 00:21:43,890
and catch and we can use it for more
like real for readers now here's

822
00:21:43,890 --> 00:21:43,900
like real for readers now here's
 

823
00:21:43,900 --> 00:21:46,470
like real for readers now here's
something funny happens we have to

824
00:21:46,470 --> 00:21:46,480
something funny happens we have to
 

825
00:21:46,480 --> 00:21:52,380
something funny happens we have to
define has where state class which is a

826
00:21:52,380 --> 00:21:52,390
define has where state class which is a
 

827
00:21:52,390 --> 00:21:56,010
define has where state class which is a
micro lens gather which that we can

828
00:21:56,010 --> 00:21:56,020
micro lens gather which that we can
 

829
00:21:56,020 --> 00:21:58,680
micro lens gather which that we can
instantiate for any other environment

830
00:21:58,680 --> 00:21:58,690
instantiate for any other environment
 

831
00:21:58,690 --> 00:22:01,610
instantiate for any other environment
and do it will allow us to get the state

832
00:22:01,610 --> 00:22:01,620
and do it will allow us to get the state
 

833
00:22:01,620 --> 00:22:06,150
and do it will allow us to get the state
from whatever environment we have there

834
00:22:06,150 --> 00:22:06,160
from whatever environment we have there
 

835
00:22:06,160 --> 00:22:07,770
from whatever environment we have there
is a little bit of difference here we

836
00:22:07,770 --> 00:22:07,780
is a little bit of difference here we
 

837
00:22:07,780 --> 00:22:09,900
is a little bit of difference here we
can store you call a square

838
00:22:09,900 --> 00:22:09,910
can store you call a square
 

839
00:22:09,910 --> 00:22:16,650
can store you call a square
using you is unnatural it does add a

840
00:22:16,650 --> 00:22:16,660
using you is unnatural it does add a
 

841
00:22:16,660 --> 00:22:20,520
using you is unnatural it does add a
little bit of boilerplate but we with

842
00:22:20,520 --> 00:22:20,530
little bit of boilerplate but we with
 

843
00:22:20,530 --> 00:22:22,920
little bit of boilerplate but we with
this approach we get our function to be

844
00:22:22,920 --> 00:22:22,930
this approach we get our function to be
 

845
00:22:22,930 --> 00:22:27,410
this approach we get our function to be
more general very composable and we see

846
00:22:27,410 --> 00:22:27,420
more general very composable and we see
 

847
00:22:27,420 --> 00:22:31,020
more general very composable and we see
what our function does by looking just

848
00:22:31,020 --> 00:22:31,030
what our function does by looking just
 

849
00:22:31,030 --> 00:22:33,620
what our function does by looking just
other types of know that it exceeds

850
00:22:33,620 --> 00:22:33,630
other types of know that it exceeds
 

851
00:22:33,630 --> 00:22:36,990
other types of know that it exceeds
their state from the environment namely

852
00:22:36,990 --> 00:22:37,000
their state from the environment namely
 

853
00:22:37,000 --> 00:22:40,890
their state from the environment namely
here and nothing else which is really

854
00:22:40,890 --> 00:22:40,900
here and nothing else which is really
 

855
00:22:40,900 --> 00:22:48,770
here and nothing else which is really
cool so why is this has a pattern

856
00:22:48,770 --> 00:22:48,780
cool so why is this has a pattern
 

857
00:22:48,780 --> 00:22:51,660
cool so why is this has a pattern
simpler I'll try to convince you all

858
00:22:51,660 --> 00:22:51,670
simpler I'll try to convince you all
 

859
00:22:51,670 --> 00:22:54,900
simpler I'll try to convince you all
although this example looks like it

860
00:22:54,900 --> 00:22:54,910
although this example looks like it
 

861
00:22:54,910 --> 00:23:00,000
although this example looks like it
makes it more complicated but let's look

862
00:23:00,000 --> 00:23:00,010
makes it more complicated but let's look
 

863
00:23:00,010 --> 00:23:01,620
makes it more complicated but let's look
at this we have two data types we can be

864
00:23:01,620 --> 00:23:01,630
at this we have two data types we can be
 

865
00:23:01,630 --> 00:23:04,200
at this we have two data types we can be
using in our example it's a session that

866
00:23:04,200 --> 00:23:04,210
using in our example it's a session that
 

867
00:23:04,210 --> 00:23:06,540
using in our example it's a session that
we can create for every terminal session

868
00:23:06,540 --> 00:23:06,550
we can create for every terminal session
 

869
00:23:06,550 --> 00:23:09,240
we can create for every terminal session
that will be spawned off and we have a

870
00:23:09,240 --> 00:23:09,250
that will be spawned off and we have a
 

871
00:23:09,250 --> 00:23:14,400
that will be spawned off and we have a
global environment that we will be using

872
00:23:14,400 --> 00:23:14,410
global environment that we will be using
 

873
00:23:14,410 --> 00:23:19,560
global environment that we will be using
throughout our web server which has the

874
00:23:19,560 --> 00:23:19,570
throughout our web server which has the
 

875
00:23:19,570 --> 00:23:22,380
throughout our web server which has the
state and a log function and a session

876
00:23:22,380 --> 00:23:22,390
state and a log function and a session
 

877
00:23:22,390 --> 00:23:24,030
state and a log function and a session
will have a context and a connection

878
00:23:24,030 --> 00:23:24,040
will have a context and a connection
 

879
00:23:24,040 --> 00:23:27,720
will have a context and a connection
which the web socket wrench with this

880
00:23:27,720 --> 00:23:27,730
which the web socket wrench with this
 

881
00:23:27,730 --> 00:23:31,110
which the web socket wrench with this
general approach that we have here with

882
00:23:31,110 --> 00:23:31,120
general approach that we have here with
 

883
00:23:31,120 --> 00:23:33,690
general approach that we have here with
to the terminal we know that it's not

884
00:23:33,690 --> 00:23:33,700
to the terminal we know that it's not
 

885
00:23:33,700 --> 00:23:35,730
to the terminal we know that it's not
gonna these functions will still eternal

886
00:23:35,730 --> 00:23:35,740
gonna these functions will still eternal
 

887
00:23:35,740 --> 00:23:40,740
gonna these functions will still eternal
does not access any of these any of

888
00:23:40,740 --> 00:23:40,750
does not access any of these any of
 

889
00:23:40,750 --> 00:23:42,660
does not access any of these any of
these variables which is which is great

890
00:23:42,660 --> 00:23:42,670
these variables which is which is great
 

891
00:23:42,670 --> 00:23:50,190
these variables which is which is great
it proves our safety and making

892
00:23:50,190 --> 00:23:50,200
it proves our safety and making
 

893
00:23:50,200 --> 00:23:52,440
it proves our safety and making
instances of this this class is fairly

894
00:23:52,440 --> 00:23:52,450
instances of this this class is fairly
 

895
00:23:52,450 --> 00:23:56,340
instances of this this class is fairly
straight code use use a little bit of a

896
00:23:56,340 --> 00:23:56,350
straight code use use a little bit of a
 

897
00:23:56,350 --> 00:24:00,930
straight code use use a little bit of a
lens magic here's a little bit more

898
00:24:00,930 --> 00:24:00,940
lens magic here's a little bit more
 

899
00:24:00,940 --> 00:24:03,480
lens magic here's a little bit more
complicated example which uses our

900
00:24:03,480 --> 00:24:03,490
complicated example which uses our
 

901
00:24:03,490 --> 00:24:04,980
complicated example which uses our
previous function we see the terminal

902
00:24:04,980 --> 00:24:04,990
previous function we see the terminal
 

903
00:24:04,990 --> 00:24:08,760
previous function we see the terminal
this with shell will actually spun out

904
00:24:08,760 --> 00:24:08,770
this with shell will actually spun out
 

905
00:24:08,770 --> 00:24:15,450
this with shell will actually spun out
the actual process so how does that

906
00:24:15,450 --> 00:24:15,460
the actual process so how does that
 

907
00:24:15,460 --> 00:24:17,850
the actual process so how does that
gonna happen we create a terminal to the

908
00:24:17,850 --> 00:24:17,860
gonna happen we create a terminal to the
 

909
00:24:17,860 --> 00:24:20,820
gonna happen we create a terminal to the
terminal which which doesn't have any

910
00:24:20,820 --> 00:24:20,830
terminal which which doesn't have any
 

911
00:24:20,830 --> 00:24:22,980
terminal which which doesn't have any
processor on it all it does gives us two

912
00:24:22,980 --> 00:24:22,990
processor on it all it does gives us two
 

913
00:24:22,990 --> 00:24:23,549
processor on it all it does gives us two
handles

914
00:24:23,549 --> 00:24:23,559
handles
 

915
00:24:23,559 --> 00:24:26,430
handles
we can do it for communication and

916
00:24:26,430 --> 00:24:26,440
we can do it for communication and
 

917
00:24:26,440 --> 00:24:31,019
we can do it for communication and
recall Prats which will create a process

918
00:24:31,019 --> 00:24:31,029
recall Prats which will create a process
 

919
00:24:31,029 --> 00:24:34,850
recall Prats which will create a process
context so we can use it to adjust our

920
00:24:34,850 --> 00:24:34,860
context so we can use it to adjust our
 

921
00:24:34,860 --> 00:24:37,619
context so we can use it to adjust our
environment variables and our current

922
00:24:37,619 --> 00:24:37,629
environment variables and our current
 

923
00:24:37,629 --> 00:24:41,730
environment variables and our current
directory for the process of invoke we

924
00:24:41,730 --> 00:24:41,740
directory for the process of invoke we
 

925
00:24:41,740 --> 00:24:43,649
directory for the process of invoke we
can also use that process configuration

926
00:24:43,649 --> 00:24:43,659
can also use that process configuration
 

927
00:24:43,659 --> 00:24:48,180
can also use that process configuration
that trail to adjust our standard

928
00:24:48,180 --> 00:24:48,190
that trail to adjust our standard
 

929
00:24:48,190 --> 00:24:52,680
that trail to adjust our standard
input/output create a session and group

930
00:24:52,680 --> 00:24:52,690
input/output create a session and group
 

931
00:24:52,690 --> 00:24:54,330
input/output create a session and group
which is required for if you want to

932
00:24:54,330 --> 00:24:54,340
which is required for if you want to
 

933
00:24:54,340 --> 00:24:58,430
which is required for if you want to
emulate the emulate terminal and

934
00:24:58,430 --> 00:24:58,440

 

935
00:24:58,440 --> 00:25:02,399

obviously CMD narks is what we used it's

936
00:25:02,399 --> 00:25:02,409
obviously CMD narks is what we used it's
 

937
00:25:02,409 --> 00:25:04,379
obviously CMD narks is what we used it's
this example it's only gonna be batch

938
00:25:04,379 --> 00:25:04,389
this example it's only gonna be batch
 

939
00:25:04,389 --> 00:25:09,090
this example it's only gonna be batch
with empty arguments now and actually we

940
00:25:09,090 --> 00:25:09,100
with empty arguments now and actually we
 

941
00:25:09,100 --> 00:25:11,249
with empty arguments now and actually we
get to the point where we call the

942
00:25:11,249 --> 00:25:11,259
get to the point where we call the
 

943
00:25:11,259 --> 00:25:13,649
get to the point where we call the
process it will spawn out of the process

944
00:25:13,649 --> 00:25:13,659
process it will spawn out of the process
 

945
00:25:13,659 --> 00:25:19,289
process it will spawn out of the process
and now because we have imported by

946
00:25:19,289 --> 00:25:19,299
and now because we have imported by
 

947
00:25:19,299 --> 00:25:21,840
and now because we have imported by
default with real async library we can

948
00:25:21,840 --> 00:25:21,850
default with real async library we can
 

949
00:25:21,850 --> 00:25:23,789
default with real async library we can
call race which is an amazing function

950
00:25:23,789 --> 00:25:23,799
call race which is an amazing function
 

951
00:25:23,799 --> 00:25:27,269
call race which is an amazing function
and allows us to wait for the process to

952
00:25:27,269 --> 00:25:27,279
and allows us to wait for the process to
 

953
00:25:27,279 --> 00:25:29,879
and allows us to wait for the process to
finish and at the same time do something

954
00:25:29,879 --> 00:25:29,889
finish and at the same time do something
 

955
00:25:29,889 --> 00:25:31,859
finish and at the same time do something
else with that terminal so basically

956
00:25:31,859 --> 00:25:31,869
else with that terminal so basically
 

957
00:25:31,869 --> 00:25:34,440
else with that terminal so basically
what it translates to is either our

958
00:25:34,440 --> 00:25:34,450
what it translates to is either our
 

959
00:25:34,450 --> 00:25:38,119
what it translates to is either our
process exit or dies or something else

960
00:25:38,119 --> 00:25:38,129
process exit or dies or something else
 

961
00:25:38,129 --> 00:25:42,539
process exit or dies or something else
or we stop dealing with this terminal

962
00:25:42,539 --> 00:25:42,549
or we stop dealing with this terminal
 

963
00:25:42,549 --> 00:25:45,180
or we stop dealing with this terminal
for example a user closes the browser

964
00:25:45,180 --> 00:25:45,190
for example a user closes the browser
 

965
00:25:45,190 --> 00:25:49,489
for example a user closes the browser
tab you know this actions will cause

966
00:25:49,489 --> 00:25:49,499
tab you know this actions will cause
 

967
00:25:49,499 --> 00:25:53,730
tab you know this actions will cause
this action to either terminate properly

968
00:25:53,730 --> 00:25:53,740
this action to either terminate properly
 

969
00:25:53,740 --> 00:25:56,749
this action to either terminate properly
on with an exception but at this point

970
00:25:56,749 --> 00:25:56,759
on with an exception but at this point
 

971
00:25:56,759 --> 00:25:59,430
on with an exception but at this point
the other one will be also terminating

972
00:25:59,430 --> 00:25:59,440
the other one will be also terminating
 

973
00:25:59,440 --> 00:26:03,149
the other one will be also terminating
and all of the functions with Prats

974
00:26:03,149 --> 00:26:03,159
and all of the functions with Prats
 

975
00:26:03,159 --> 00:26:04,799
and all of the functions with Prats
which internal will clean up their

976
00:26:04,799 --> 00:26:04,809
which internal will clean up their
 

977
00:26:04,809 --> 00:26:07,460
which internal will clean up their
resources properly not gonna memory

978
00:26:07,460 --> 00:26:07,470
resources properly not gonna memory
 

979
00:26:07,470 --> 00:26:13,680
resources properly not gonna memory
resources great and it returns back if

980
00:26:13,680 --> 00:26:13,690
resources great and it returns back if
 

981
00:26:13,690 --> 00:26:18,090
resources great and it returns back if
you see either exit status how our

982
00:26:18,090 --> 00:26:18,100
you see either exit status how our
 

983
00:26:18,100 --> 00:26:21,840
you see either exit status how our
process actually or whatever our on

984
00:26:21,840 --> 00:26:21,850
process actually or whatever our on
 

985
00:26:21,850 --> 00:26:24,389
process actually or whatever our on
terminal function returns which is again

986
00:26:24,389 --> 00:26:24,399
terminal function returns which is again
 

987
00:26:24,399 --> 00:26:33,810
terminal function returns which is again
be unit all right we can almost done to

988
00:26:33,810 --> 00:26:33,820
be unit all right we can almost done to
 

989
00:26:33,820 --> 00:26:34,499
be unit all right we can almost done to
our terminal

990
00:26:34,499 --> 00:26:34,509
our terminal
 

991
00:26:34,509 --> 00:26:37,049
our terminal
LM emulator they want you know

992
00:26:37,049 --> 00:26:37,059
LM emulator they want you know
 

993
00:26:37,059 --> 00:26:40,889
LM emulator they want you know
is why did we need that global state in

994
00:26:40,889 --> 00:26:40,899
is why did we need that global state in
 

995
00:26:40,899 --> 00:26:44,249
is why did we need that global state in
the first place and particularly we

996
00:26:44,249 --> 00:26:44,259
the first place and particularly we
 

997
00:26:44,259 --> 00:26:46,739
the first place and particularly we
needed for resizing determine imagine

998
00:26:46,739 --> 00:26:46,749
needed for resizing determine imagine
 

999
00:26:46,749 --> 00:26:52,200
needed for resizing determine imagine
the user resizes the browser or the tab

1000
00:26:52,200 --> 00:26:52,210
the user resizes the browser or the tab
 

1001
00:26:52,210 --> 00:26:56,009
the user resizes the browser or the tab
itself and the size of it changes so we

1002
00:26:56,009 --> 00:26:56,019
itself and the size of it changes so we
 

1003
00:26:56,019 --> 00:26:59,279
itself and the size of it changes so we
need to change make the terminal

1004
00:26:59,279 --> 00:26:59,289
need to change make the terminal
 

1005
00:26:59,289 --> 00:27:01,259
need to change make the terminal
emulator or now web server where is it

1006
00:27:01,259 --> 00:27:01,269
emulator or now web server where is it
 

1007
00:27:01,269 --> 00:27:06,960
emulator or now web server where is it
so what do we do we get new size we get

1008
00:27:06,960 --> 00:27:06,970
so what do we do we get new size we get
 

1009
00:27:06,970 --> 00:27:11,419
so what do we do we get new size we get
the our global state by using the same

1010
00:27:11,419 --> 00:27:11,429
the our global state by using the same
 

1011
00:27:11,429 --> 00:27:15,629
the our global state by using the same
same bearing has by state we read the

1012
00:27:15,629 --> 00:27:15,639
same bearing has by state we read the
 

1013
00:27:15,639 --> 00:27:18,869
same bearing has by state we read the
state from our by reference we look it

1014
00:27:18,869 --> 00:27:18,879
state from our by reference we look it
 

1015
00:27:18,879 --> 00:27:22,049
state from our by reference we look it
up if we have that state for this opaque

1016
00:27:22,049 --> 00:27:22,059
up if we have that state for this opaque
 

1017
00:27:22,059 --> 00:27:26,430
up if we have that state for this opaque
token great we can go ahead and issue a

1018
00:27:26,430 --> 00:27:26,440
token great we can go ahead and issue a
 

1019
00:27:26,440 --> 00:27:30,029
token great we can go ahead and issue a
system call for changing this size of

1020
00:27:30,029 --> 00:27:30,039
system call for changing this size of
 

1021
00:27:30,039 --> 00:27:31,830
system call for changing this size of
this particular terminal that's why we

1022
00:27:31,830 --> 00:27:31,840
this particular terminal that's why we
 

1023
00:27:31,840 --> 00:27:33,749
this particular terminal that's why we
needed to keep around the found

1024
00:27:33,749 --> 00:27:33,759
needed to keep around the found
 

1025
00:27:33,759 --> 00:27:39,450
needed to keep around the found
scripture inside water and this is the

1026
00:27:39,450 --> 00:27:39,460
scripture inside water and this is the
 

1027
00:27:39,460 --> 00:27:50,639
scripture inside water and this is the
the cold makes this is the the function

1028
00:27:50,639 --> 00:27:50,649
the cold makes this is the the function
 

1029
00:27:50,649 --> 00:27:53,399
the cold makes this is the the function
that will be doing the resize a uses

1030
00:27:53,399 --> 00:27:53,409
that will be doing the resize a uses
 

1031
00:27:53,409 --> 00:27:57,570
that will be doing the resize a uses
some epiphyte called ioctl which is not

1032
00:27:57,570 --> 00:27:57,580
some epiphyte called ioctl which is not
 

1033
00:27:57,580 --> 00:28:00,690
some epiphyte called ioctl which is not
terribly important here they you know

1034
00:28:00,690 --> 00:28:00,700
terribly important here they you know
 

1035
00:28:00,700 --> 00:28:03,239
terribly important here they you know
wanna bring up is this function log

1036
00:28:03,239 --> 00:28:03,249
wanna bring up is this function log
 

1037
00:28:03,249 --> 00:28:08,159
wanna bring up is this function log
debug this is how we do logging a

1038
00:28:08,159 --> 00:28:08,169
debug this is how we do logging a
 

1039
00:28:08,169 --> 00:28:15,029
debug this is how we do logging a
unified login with wheel on the next

1040
00:28:15,029 --> 00:28:15,039
unified login with wheel on the next
 

1041
00:28:15,039 --> 00:28:16,590
unified login with wheel on the next
slide I'll go a little bit more detail

1042
00:28:16,590 --> 00:28:16,600
slide I'll go a little bit more detail
 

1043
00:28:16,600 --> 00:28:18,090
slide I'll go a little bit more detail
about it but I want to point out here

1044
00:28:18,090 --> 00:28:18,100
about it but I want to point out here
 

1045
00:28:18,100 --> 00:28:21,810
about it but I want to point out here
this display and how we easily

1046
00:28:21,810 --> 00:28:21,820
this display and how we easily
 

1047
00:28:21,820 --> 00:28:28,320
this display and how we easily
structures log messages so they besides

1048
00:28:28,320 --> 00:28:28,330
structures log messages so they besides
 

1049
00:28:28,330 --> 00:28:30,119
structures log messages so they besides
log debug their wrestling's like logging

1050
00:28:30,119 --> 00:28:30,129
log debug their wrestling's like logging
 

1051
00:28:30,129 --> 00:28:33,539
log debug their wrestling's like logging
full of boring like Earth and other

1052
00:28:33,539 --> 00:28:33,549
full of boring like Earth and other
 

1053
00:28:33,549 --> 00:28:38,039
full of boring like Earth and other
whatever and there's this scary type

1054
00:28:38,039 --> 00:28:38,049
whatever and there's this scary type
 

1055
00:28:38,049 --> 00:28:40,820
whatever and there's this scary type
signature for these log functions

1056
00:28:40,820 --> 00:28:40,830
signature for these log functions
 

1057
00:28:40,830 --> 00:28:44,039
signature for these log functions
reality is not too scary we can dissect

1058
00:28:44,039 --> 00:28:44,049
reality is not too scary we can dissect
 

1059
00:28:44,049 --> 00:28:46,799
reality is not too scary we can dissect
it's a listener because it has to do

1060
00:28:46,799 --> 00:28:46,809
it's a listener because it has to do
 

1061
00:28:46,809 --> 00:28:50,670
it's a listener because it has to do
some printing he has a monorail

1062
00:28:50,670 --> 00:28:50,680
some printing he has a monorail
 

1063
00:28:50,680 --> 00:28:54,300
some printing he has a monorail
environment that has a lot function and

1064
00:28:54,300 --> 00:28:54,310
environment that has a lot function and
 

1065
00:28:54,310 --> 00:28:57,390
environment that has a lot function and
it has a call stack because at some

1066
00:28:57,390 --> 00:28:57,400
it has a call stack because at some
 

1067
00:28:57,400 --> 00:28:59,400
it has a call stack because at some
point we might want to report the

1068
00:28:59,400 --> 00:28:59,410
point we might want to report the
 

1069
00:28:59,410 --> 00:29:01,680
point we might want to report the
location of the source where they this

1070
00:29:01,680 --> 00:29:01,690
location of the source where they this
 

1071
00:29:01,690 --> 00:29:05,010
location of the source where they this
login actually was invoked and it takes

1072
00:29:05,010 --> 00:29:05,020
login actually was invoked and it takes
 

1073
00:29:05,020 --> 00:29:07,530
login actually was invoked and it takes
a utf-8 builder which is the message

1074
00:29:07,530 --> 00:29:07,540
a utf-8 builder which is the message
 

1075
00:29:07,540 --> 00:29:10,230
a utf-8 builder which is the message
that we trying to log and underneath it

1076
00:29:10,230 --> 00:29:10,240
that we trying to log and underneath it
 

1077
00:29:10,240 --> 00:29:13,860
that we trying to log and underneath it
is simple Li the new type wrapper around

1078
00:29:13,860 --> 00:29:13,870
is simple Li the new type wrapper around
 

1079
00:29:13,870 --> 00:29:21,000
is simple Li the new type wrapper around
the body builder and using class display

1080
00:29:21,000 --> 00:29:21,010
the body builder and using class display
 

1081
00:29:21,010 --> 00:29:24,450
the body builder and using class display
we can instantiate for our custom

1082
00:29:24,450 --> 00:29:24,460
we can instantiate for our custom
 

1083
00:29:24,460 --> 00:29:28,020
we can instantiate for our custom
datatypes a construction of this manager

1084
00:29:28,020 --> 00:29:28,030
datatypes a construction of this manager
 

1085
00:29:28,030 --> 00:29:29,100
datatypes a construction of this manager
sweetie pie builder

1086
00:29:29,100 --> 00:29:29,110
sweetie pie builder
 

1087
00:29:29,110 --> 00:29:31,020
sweetie pie builder
here's an example for that terminal size

1088
00:29:31,020 --> 00:29:31,030
here's an example for that terminal size
 

1089
00:29:31,030 --> 00:29:33,810
here's an example for that terminal size
pretty the previous slide where we had a

1090
00:29:33,810 --> 00:29:33,820
pretty the previous slide where we had a
 

1091
00:29:33,820 --> 00:29:37,200
pretty the previous slide where we had a
width and a height and here we just use

1092
00:29:37,200 --> 00:29:37,210
width and a height and here we just use
 

1093
00:29:37,210 --> 00:29:40,950
width and a height and here we just use
a helper function display show that use

1094
00:29:40,950 --> 00:29:40,960
a helper function display show that use
 

1095
00:29:40,960 --> 00:29:44,340
a helper function display show that use
the show instance for the your like with

1096
00:29:44,340 --> 00:29:44,350
the show instance for the your like with
 

1097
00:29:44,350 --> 00:29:45,480
the show instance for the your like with
the height and combine them together

1098
00:29:45,480 --> 00:29:45,490
the height and combine them together
 

1099
00:29:45,490 --> 00:29:49,080
the height and combine them together
with a non-oil any great thing about

1100
00:29:49,080 --> 00:29:49,090
with a non-oil any great thing about
 

1101
00:29:49,090 --> 00:29:51,630
with a non-oil any great thing about
this whole thing is be it is very

1102
00:29:51,630 --> 00:29:51,640
this whole thing is be it is very
 

1103
00:29:51,640 --> 00:29:54,900
this whole thing is be it is very
efficient and it is also thread safe so

1104
00:29:54,900 --> 00:29:54,910
efficient and it is also thread safe so
 

1105
00:29:54,910 --> 00:29:56,640
efficient and it is also thread safe so
you're not gonna have any message that

1106
00:29:56,640 --> 00:29:56,650
you're not gonna have any message that
 

1107
00:29:56,650 --> 00:29:59,160
you're not gonna have any message that
jump on each other this is the reason

1108
00:29:59,160 --> 00:29:59,170
jump on each other this is the reason
 

1109
00:29:59,170 --> 00:30:02,880
jump on each other this is the reason
why we don't have any scope functions

1110
00:30:02,880 --> 00:30:02,890
why we don't have any scope functions
 

1111
00:30:02,890 --> 00:30:06,960
why we don't have any scope functions
that deal with standard output and

1112
00:30:06,960 --> 00:30:06,970
that deal with standard output and
 

1113
00:30:06,970 --> 00:30:09,330
that deal with standard output and
standard error whatever it seems like

1114
00:30:09,330 --> 00:30:09,340
standard error whatever it seems like
 

1115
00:30:09,340 --> 00:30:12,690
standard error whatever it seems like
praying to put through because these are

1116
00:30:12,690 --> 00:30:12,700
praying to put through because these are
 

1117
00:30:12,700 --> 00:30:14,720
praying to put through because these are
not rape and is they would interleave

1118
00:30:14,720 --> 00:30:14,730
not rape and is they would interleave
 

1119
00:30:14,730 --> 00:30:19,320
not rape and is they would interleave
with login now some people ask what if I

1120
00:30:19,320 --> 00:30:19,330
with login now some people ask what if I
 

1121
00:30:19,330 --> 00:30:23,100
with login now some people ask what if I
have to design a tui I don't know editor

1122
00:30:23,100 --> 00:30:23,110
have to design a tui I don't know editor
 

1123
00:30:23,110 --> 00:30:28,040
have to design a tui I don't know editor
or when terminal male program whatever

1124
00:30:28,040 --> 00:30:28,050
or when terminal male program whatever
 

1125
00:30:28,050 --> 00:30:31,320
or when terminal male program whatever
you can still use all of your natural

1126
00:30:31,320 --> 00:30:31,330
you can still use all of your natural
 

1127
00:30:31,330 --> 00:30:34,340
you can still use all of your natural
you think dealing with their handles

1128
00:30:34,340 --> 00:30:34,350
you think dealing with their handles
 

1129
00:30:34,350 --> 00:30:39,090
you think dealing with their handles
that used to we just create a logger

1130
00:30:39,090 --> 00:30:39,100
that used to we just create a logger
 

1131
00:30:39,100 --> 00:30:41,240
that used to we just create a logger
function that goes to test has to be a

1132
00:30:41,240 --> 00:30:41,250
function that goes to test has to be a
 

1133
00:30:41,250 --> 00:30:46,140
function that goes to test has to be a
and done you have proper very important

1134
00:30:46,140 --> 00:30:46,150
and done you have proper very important
 

1135
00:30:46,150 --> 00:30:51,630
and done you have proper very important
to the using logger print whatever to

1136
00:30:51,630 --> 00:30:51,640
to the using logger print whatever to
 

1137
00:30:51,640 --> 00:30:54,570
to the using logger print whatever to
you you want there is a local things

1138
00:30:54,570 --> 00:30:54,580
you you want there is a local things
 

1139
00:30:54,580 --> 00:30:56,370
you you want there is a local things
with the logger that we have available

1140
00:30:56,370 --> 00:30:56,380
with the logger that we have available
 

1141
00:30:56,380 --> 00:30:58,890
with the logger that we have available
is lock sticky if your blogger is the

1142
00:30:58,890 --> 00:30:58,900
is lock sticky if your blogger is the
 

1143
00:30:58,900 --> 00:31:02,040
is lock sticky if your blogger is the
terminal having if you are in a terminal

1144
00:31:02,040 --> 00:31:02,050
terminal having if you are in a terminal
 

1145
00:31:02,050 --> 00:31:04,539
terminal having if you are in a terminal
you can

1146
00:31:04,539 --> 00:31:04,549
you can
 

1147
00:31:04,549 --> 00:31:07,869
you can
I keep logging at the bottom while other

1148
00:31:07,869 --> 00:31:07,879
I keep logging at the bottom while other
 

1149
00:31:07,879 --> 00:31:09,789
I keep logging at the bottom while other
long messages will continue going

1150
00:31:09,789 --> 00:31:09,799
long messages will continue going
 

1151
00:31:09,799 --> 00:31:16,239
long messages will continue going
upwards it does which is useful for for

1152
00:31:16,239 --> 00:31:16,249
upwards it does which is useful for for
 

1153
00:31:16,249 --> 00:31:17,589
upwards it does which is useful for for
progress reporting let's say you

1154
00:31:17,589 --> 00:31:17,599
progress reporting let's say you
 

1155
00:31:17,599 --> 00:31:20,649
progress reporting let's say you
uploading the file and you want to show

1156
00:31:20,649 --> 00:31:20,659
uploading the file and you want to show
 

1157
00:31:20,659 --> 00:31:23,019
uploading the file and you want to show
how what's the percentage Co supports

1158
00:31:23,019 --> 00:31:23,029
how what's the percentage Co supports
 

1159
00:31:23,029 --> 00:31:26,109
how what's the percentage Co supports
colors and it's terminal aware so if

1160
00:31:26,109 --> 00:31:26,119
colors and it's terminal aware so if
 

1161
00:31:26,119 --> 00:31:27,339
colors and it's terminal aware so if
it's a terminal it will turn out

1162
00:31:27,339 --> 00:31:27,349
it's a terminal it will turn out
 

1163
00:31:27,349 --> 00:31:35,019
it's a terminal it will turn out
calories and blocks ticking stop in

1164
00:31:35,019 --> 00:31:35,029
calories and blocks ticking stop in
 

1165
00:31:35,029 --> 00:31:39,039
calories and blocks ticking stop in
order to use these what functions we

1166
00:31:39,039 --> 00:31:39,049
order to use these what functions we
 

1167
00:31:39,049 --> 00:31:45,159
order to use these what functions we
have the highest log funk class which we

1168
00:31:45,159 --> 00:31:45,169
have the highest log funk class which we
 

1169
00:31:45,169 --> 00:31:48,789
have the highest log funk class which we
can instantiate and all know is how do

1170
00:31:48,789 --> 00:31:48,799
can instantiate and all know is how do
 

1171
00:31:48,799 --> 00:31:51,430
can instantiate and all know is how do
we get to our log function the better

1172
00:31:51,430 --> 00:31:51,440
we get to our log function the better
 

1173
00:31:51,440 --> 00:31:53,499
we get to our log function the better
question is how do we create this log

1174
00:31:53,499 --> 00:31:53,509
question is how do we create this log
 

1175
00:31:53,509 --> 00:31:59,469
question is how do we create this log
function lot options handle is a

1176
00:31:59,469 --> 00:31:59,479
function lot options handle is a
 

1177
00:31:59,479 --> 00:32:00,869
function lot options handle is a
function that allows us to create

1178
00:32:00,869 --> 00:32:00,879
function that allows us to create
 

1179
00:32:00,879 --> 00:32:04,029
function that allows us to create
options for the log function which takes

1180
00:32:04,029 --> 00:32:04,039
options for the log function which takes
 

1181
00:32:04,039 --> 00:32:06,999
options for the log function which takes
handle which as an example here we pass

1182
00:32:06,999 --> 00:32:07,009
handle which as an example here we pass
 

1183
00:32:07,009 --> 00:32:10,329
handle which as an example here we pass
has to be out and a boolean which means

1184
00:32:10,329 --> 00:32:10,339
has to be out and a boolean which means
 

1185
00:32:10,339 --> 00:32:14,379
has to be out and a boolean which means
birbal's now and then we can modify

1186
00:32:14,379 --> 00:32:14,389
birbal's now and then we can modify
 

1187
00:32:14,389 --> 00:32:16,389
birbal's now and then we can modify
these options with a few modifiers

1188
00:32:16,389 --> 00:32:16,399
these options with a few modifiers
 

1189
00:32:16,399 --> 00:32:18,879
these options with a few modifiers
available in view here we just update

1190
00:32:18,879 --> 00:32:18,889
available in view here we just update
 

1191
00:32:18,889 --> 00:32:22,539
available in view here we just update
the log level info and then we create

1192
00:32:22,539 --> 00:32:22,549
the log level info and then we create
 

1193
00:32:22,549 --> 00:32:24,419
the log level info and then we create
the actual log function with this option

1194
00:32:24,419 --> 00:32:24,429
the actual log function with this option
 

1195
00:32:24,429 --> 00:32:27,609
the actual log function with this option
this creates a log function again the

1196
00:32:27,609 --> 00:32:27,619
this creates a log function again the
 

1197
00:32:27,619 --> 00:32:30,249
this creates a log function again the
same with our pattern because there is

1198
00:32:30,249 --> 00:32:30,259
same with our pattern because there is
 

1199
00:32:30,259 --> 00:32:31,629
same with our pattern because there is
some resources it needs to be cleaned up

1200
00:32:31,629 --> 00:32:31,639
some resources it needs to be cleaned up
 

1201
00:32:31,639 --> 00:32:37,499
some resources it needs to be cleaned up
once we done log in we create our state

1202
00:32:37,499 --> 00:32:37,509
once we done log in we create our state
 

1203
00:32:37,509 --> 00:32:41,229
once we done log in we create our state
then we create our environment and then

1204
00:32:41,229 --> 00:32:41,239
then we create our environment and then
 

1205
00:32:41,239 --> 00:32:43,930
then we create our environment and then
go ahead and run real on our environment

1206
00:32:43,930 --> 00:32:43,940
go ahead and run real on our environment
 

1207
00:32:43,940 --> 00:32:48,039
go ahead and run real on our environment
logging function state and whatever that

1208
00:32:48,039 --> 00:32:48,049
logging function state and whatever that
 

1209
00:32:48,049 --> 00:32:51,009
logging function state and whatever that
action action might be doing so this is

1210
00:32:51,009 --> 00:32:51,019
action action might be doing so this is
 

1211
00:32:51,019 --> 00:32:53,469
action action might be doing so this is
pretty much and I'll show how you deal

1212
00:32:53,469 --> 00:32:53,479
pretty much and I'll show how you deal
 

1213
00:32:53,479 --> 00:32:56,889
pretty much and I'll show how you deal
with a simple application in real

1214
00:32:56,889 --> 00:32:56,899
with a simple application in real
 

1215
00:32:56,899 --> 00:32:59,979
with a simple application in real
there's gonna have a helper data type

1216
00:32:59,979 --> 00:32:59,989
there's gonna have a helper data type
 

1217
00:32:59,989 --> 00:33:03,789
there's gonna have a helper data type
simple app that you can use if you just

1218
00:33:03,789 --> 00:33:03,799
simple app that you can use if you just
 

1219
00:33:03,799 --> 00:33:06,279
simple app that you can use if you just
want to really quickly start using

1220
00:33:06,279 --> 00:33:06,289
want to really quickly start using
 

1221
00:33:06,289 --> 00:33:11,229
want to really quickly start using
logging stuff the cooling about what

1222
00:33:11,229 --> 00:33:11,239
logging stuff the cooling about what
 

1223
00:33:11,239 --> 00:33:13,419
logging stuff the cooling about what
from its composable because it has no

1224
00:33:13,419 --> 00:33:13,429
from its composable because it has no
 

1225
00:33:13,429 --> 00:33:16,269
from its composable because it has no
notes you can combine loggers together

1226
00:33:16,269 --> 00:33:16,279
notes you can combine loggers together
 

1227
00:33:16,279 --> 00:33:18,280
notes you can combine loggers together
as a consequence if you don't

1228
00:33:18,280 --> 00:33:18,290
as a consequence if you don't
 

1229
00:33:18,290 --> 00:33:19,960
as a consequence if you don't
using login you can just pass me empty

1230
00:33:19,960 --> 00:33:19,970
using login you can just pass me empty
 

1231
00:33:19,970 --> 00:33:21,730
using login you can just pass me empty
and done there's not gonna be any

1232
00:33:21,730 --> 00:33:21,740
and done there's not gonna be any
 

1233
00:33:21,740 --> 00:33:25,330
and done there's not gonna be any
logging and all the log debug like very

1234
00:33:25,330 --> 00:33:25,340
logging and all the log debug like very
 

1235
00:33:25,340 --> 00:33:30,700
logging and all the log debug like very
other functions what we just ignored so

1236
00:33:30,700 --> 00:33:30,710
other functions what we just ignored so
 

1237
00:33:30,710 --> 00:33:33,520
other functions what we just ignored so
there is something I made it back when I

1238
00:33:33,520 --> 00:33:33,530
there is something I made it back when I
 

1239
00:33:33,530 --> 00:33:35,430
there is something I made it back when I
was talking about the terminal emulator

1240
00:33:35,430 --> 00:33:35,440
was talking about the terminal emulator
 

1241
00:33:35,440 --> 00:33:39,310
was talking about the terminal emulator
do wanna mention it

1242
00:33:39,310 --> 00:33:39,320
do wanna mention it
 

1243
00:33:39,320 --> 00:33:42,940
do wanna mention it
we can use that we do use conduit in

1244
00:33:42,940 --> 00:33:42,950
we can use that we do use conduit in
 

1245
00:33:42,950 --> 00:33:46,750
we can use that we do use conduit in
order to do communication with the

1246
00:33:46,750 --> 00:33:46,760
order to do communication with the
 

1247
00:33:46,760 --> 00:33:50,280
order to do communication with the
terminal that we created it spawned off

1248
00:33:50,280 --> 00:33:50,290
terminal that we created it spawned off
 

1249
00:33:50,290 --> 00:33:52,450
terminal that we created it spawned off
if you don't know countries that's

1250
00:33:52,450 --> 00:33:52,460
if you don't know countries that's
 

1251
00:33:52,460 --> 00:33:55,390
if you don't know countries that's
that's fine it's fairly straightforward

1252
00:33:55,390 --> 00:33:55,400
that's fine it's fairly straightforward
 

1253
00:33:55,400 --> 00:34:02,170
that's fine it's fairly straightforward
here this is just a way to throw by

1254
00:34:02,170 --> 00:34:02,180
here this is just a way to throw by
 

1255
00:34:02,180 --> 00:34:04,930
here this is just a way to throw by
strings at the terminal that we spawned

1256
00:34:04,930 --> 00:34:04,940
strings at the terminal that we spawned
 

1257
00:34:04,940 --> 00:34:07,360
strings at the terminal that we spawned
off basically is how we feed it with the

1258
00:34:07,360 --> 00:34:07,370
off basically is how we feed it with the
 

1259
00:34:07,370 --> 00:34:10,630
off basically is how we feed it with the
input the commands and then whatever

1260
00:34:10,630 --> 00:34:10,640
input the commands and then whatever
 

1261
00:34:10,640 --> 00:34:14,350
input the commands and then whatever
comes back from the terminal we can pull

1262
00:34:14,350 --> 00:34:14,360
comes back from the terminal we can pull
 

1263
00:34:14,360 --> 00:34:19,960
comes back from the terminal we can pull
it out we using this and this makes two

1264
00:34:19,960 --> 00:34:19,970
it out we using this and this makes two
 

1265
00:34:19,970 --> 00:34:23,530
it out we using this and this makes two
terminologies I essentially calls the to

1266
00:34:23,530 --> 00:34:23,540
terminologies I essentially calls the to
 

1267
00:34:23,540 --> 00:34:26,980
terminologies I essentially calls the to
determine of communiques package and all

1268
00:34:26,980 --> 00:34:26,990
determine of communiques package and all
 

1269
00:34:26,990 --> 00:34:28,870
determine of communiques package and all
the Scriptures determine their handles

1270
00:34:28,870 --> 00:34:28,880
the Scriptures determine their handles
 

1271
00:34:28,880 --> 00:34:30,970
the Scriptures determine their handles
this is not particularly important but I

1272
00:34:30,970 --> 00:34:30,980
this is not particularly important but I
 

1273
00:34:30,980 --> 00:34:32,890
this is not particularly important but I
wanted to add it as a complete for

1274
00:34:32,890 --> 00:34:32,900
wanted to add it as a complete for
 

1275
00:34:32,900 --> 00:34:36,700
wanted to add it as a complete for
complaints the the important part about

1276
00:34:36,700 --> 00:34:36,710
complaints the the important part about
 

1277
00:34:36,710 --> 00:34:41,350
complaints the the important part about
this is that we were able to create

1278
00:34:41,350 --> 00:34:41,360
this is that we were able to create
 

1279
00:34:41,360 --> 00:34:43,060
this is that we were able to create
within one module in under hundred lines

1280
00:34:43,060 --> 00:34:43,070
within one module in under hundred lines
 

1281
00:34:43,070 --> 00:34:46,120
within one module in under hundred lines
of code at terminal and later that we

1282
00:34:46,120 --> 00:34:46,130
of code at terminal and later that we
 

1283
00:34:46,130 --> 00:34:47,950
of code at terminal and later that we
would be able to put in the suit

1284
00:34:47,950 --> 00:34:47,960
would be able to put in the suit
 

1285
00:34:47,960 --> 00:34:51,430
would be able to put in the suit
contained package in foolish and reuse

1286
00:34:51,430 --> 00:34:51,440
contained package in foolish and reuse
 

1287
00:34:51,440 --> 00:34:54,700
contained package in foolish and reuse
it for other purposes like whatever you

1288
00:34:54,700 --> 00:34:54,710
it for other purposes like whatever you
 

1289
00:34:54,710 --> 00:34:58,570
it for other purposes like whatever you
need the terminal emulator and in fact

1290
00:34:58,570 --> 00:34:58,580
need the terminal emulator and in fact
 

1291
00:34:58,580 --> 00:35:03,820
need the terminal emulator and in fact
this we never used real if we really

1292
00:35:03,820 --> 00:35:03,830
this we never used real if we really
 

1293
00:35:03,830 --> 00:35:06,490
this we never used real if we really
wanted to we could just drop off the job

1294
00:35:06,490 --> 00:35:06,500
wanted to we could just drop off the job
 

1295
00:35:06,500 --> 00:35:09,540
wanted to we could just drop off the job
log in and use the just that process and

1296
00:35:09,540 --> 00:35:09,550
log in and use the just that process and
 

1297
00:35:09,550 --> 00:35:13,120
log in and use the just that process and
like a zombie style and actually the

1298
00:35:13,120 --> 00:35:13,130
like a zombie style and actually the
 

1299
00:35:13,130 --> 00:35:17,290
like a zombie style and actually the
same function but I mean we already used

1300
00:35:17,290 --> 00:35:17,300
same function but I mean we already used
 

1301
00:35:17,300 --> 00:35:26,770
same function but I mean we already used
real which what I would suggest anyways

1302
00:35:26,770 --> 00:35:26,780

 

1303
00:35:26,780 --> 00:35:31,940

now there is more to it because we need

1304
00:35:31,940 --> 00:35:31,950
now there is more to it because we need
 

1305
00:35:31,950 --> 00:35:33,860
now there is more to it because we need
to talk about the web part of this web

1306
00:35:33,860 --> 00:35:33,870
to talk about the web part of this web
 

1307
00:35:33,870 --> 00:35:37,750
to talk about the web part of this web
web shell if you don't know yet yes or

1308
00:35:37,750 --> 00:35:37,760
web shell if you don't know yet yes or
 

1309
00:35:37,760 --> 00:35:39,530
web shell if you don't know yet yes or
I'm just gonna run really quickly

1310
00:35:39,530 --> 00:35:39,540
I'm just gonna run really quickly
 

1311
00:35:39,540 --> 00:35:41,120
I'm just gonna run really quickly
because this is not really a vehicle to

1312
00:35:41,120 --> 00:35:41,130
because this is not really a vehicle to
 

1313
00:35:41,130 --> 00:35:44,360
because this is not really a vehicle to
talk but so you can hear how this all

1314
00:35:44,360 --> 00:35:44,370
talk but so you can hear how this all
 

1315
00:35:44,370 --> 00:35:44,980
talk but so you can hear how this all
works

1316
00:35:44,980 --> 00:35:44,990
works
 

1317
00:35:44,990 --> 00:35:47,830
works
how eventually the only thing that we

1318
00:35:47,830 --> 00:35:47,840
how eventually the only thing that we
 

1319
00:35:47,840 --> 00:35:51,440
how eventually the only thing that we
use from Rio here is this ETF egg

1320
00:35:51,440 --> 00:35:51,450
use from Rio here is this ETF egg
 

1321
00:35:51,450 --> 00:35:56,720
use from Rio here is this ETF egg
builder for creating a text token hex

1322
00:35:56,720 --> 00:35:56,730
builder for creating a text token hex
 

1323
00:35:56,730 --> 00:36:01,070
builder for creating a text token hex
encoded token so we create an app app

1324
00:36:01,070 --> 00:36:01,080
encoded token so we create an app app
 

1325
00:36:01,080 --> 00:36:04,550
encoded token so we create an app app
which has our brush environment we have

1326
00:36:04,550 --> 00:36:04,560
which has our brush environment we have
 

1327
00:36:04,560 --> 00:36:07,790
which has our brush environment we have
a few routes this is our home yes have

1328
00:36:07,790 --> 00:36:07,800
a few routes this is our home yes have
 

1329
00:36:07,800 --> 00:36:09,740
a few routes this is our home yes have
static files and this is how we do

1330
00:36:09,740 --> 00:36:09,750
static files and this is how we do
 

1331
00:36:09,750 --> 00:36:11,450
static files and this is how we do
website communication of the terminal

1332
00:36:11,450 --> 00:36:11,460
website communication of the terminal
 

1333
00:36:11,460 --> 00:36:15,650
website communication of the terminal
and this is going to be a restful post

1334
00:36:15,650 --> 00:36:15,660
and this is going to be a restful post
 

1335
00:36:15,660 --> 00:36:19,750
and this is going to be a restful post
to post request to resize the terminal

1336
00:36:19,750 --> 00:36:19,760
to post request to resize the terminal
 

1337
00:36:19,760 --> 00:36:23,750
to post request to resize the terminal
and for the front-end how I may point

1338
00:36:23,750 --> 00:36:23,760
and for the front-end how I may point
 

1339
00:36:23,760 --> 00:36:25,910
and for the front-end how I may point
out that we can be using H term which

1340
00:36:25,910 --> 00:36:25,920
out that we can be using H term which
 

1341
00:36:25,920 --> 00:36:29,570
out that we can be using H term which
developed at Google which is JavaScript

1342
00:36:29,570 --> 00:36:29,580
developed at Google which is JavaScript
 

1343
00:36:29,580 --> 00:36:33,710
developed at Google which is JavaScript
application for terminal emulation only

1344
00:36:33,710 --> 00:36:33,720
application for terminal emulation only
 

1345
00:36:33,720 --> 00:36:35,240
application for terminal emulation only
going to be doing is piping all the

1346
00:36:35,240 --> 00:36:35,250
going to be doing is piping all the
 

1347
00:36:35,250 --> 00:36:39,850
going to be doing is piping all the
communication to and from it from our

1348
00:36:39,850 --> 00:36:39,860
communication to and from it from our
 

1349
00:36:39,860 --> 00:36:43,700
communication to and from it from our
process running on server and this is

1350
00:36:43,700 --> 00:36:43,710
process running on server and this is
 

1351
00:36:43,710 --> 00:36:49,220
process running on server and this is
the whole HTML that we could have this

1352
00:36:49,220 --> 00:36:49,230
the whole HTML that we could have this
 

1353
00:36:49,230 --> 00:36:51,020
the whole HTML that we could have this
is going to be our communication with

1354
00:36:51,020 --> 00:36:51,030
is going to be our communication with
 

1355
00:36:51,030 --> 00:36:55,160
is going to be our communication with
WebSockets I'm going to talk about this

1356
00:36:55,160 --> 00:36:55,170
WebSockets I'm going to talk about this
 

1357
00:36:55,170 --> 00:36:57,860
WebSockets I'm going to talk about this
function in a little bit this is our

1358
00:36:57,860 --> 00:36:57,870
function in a little bit this is our
 

1359
00:36:57,870 --> 00:37:04,430
function in a little bit this is our
post resize and here how we can call

1360
00:37:04,430 --> 00:37:04,440
post resize and here how we can call
 

1361
00:37:04,440 --> 00:37:06,740
post resize and here how we can call
real from yesterday and Michael is

1362
00:37:06,740 --> 00:37:06,750
real from yesterday and Michael is
 

1363
00:37:06,750 --> 00:37:10,010
real from yesterday and Michael is
working on making it a little bit more

1364
00:37:10,010 --> 00:37:10,020
working on making it a little bit more
 

1365
00:37:10,020 --> 00:37:13,340
working on making it a little bit more
friendlier and if I log in with with

1366
00:37:13,340 --> 00:37:13,350
friendlier and if I log in with with
 

1367
00:37:13,350 --> 00:37:17,420
friendlier and if I log in with with
years old and at some point they'll be

1368
00:37:17,420 --> 00:37:17,430
years old and at some point they'll be
 

1369
00:37:17,430 --> 00:37:20,090
years old and at some point they'll be
even working better together but at this

1370
00:37:20,090 --> 00:37:20,100
even working better together but at this
 

1371
00:37:20,100 --> 00:37:22,300
even working better together but at this
point what we do is we pull out

1372
00:37:22,300 --> 00:37:22,310
point what we do is we pull out
 

1373
00:37:22,310 --> 00:37:25,310
point what we do is we pull out
environment from your application and we

1374
00:37:25,310 --> 00:37:25,320
environment from your application and we
 

1375
00:37:25,320 --> 00:37:28,490
environment from your application and we
drown Rio and in this we can use login

1376
00:37:28,490 --> 00:37:28,500
drown Rio and in this we can use login
 

1377
00:37:28,500 --> 00:37:31,370
drown Rio and in this we can use login
we log in and call the resize terminal

1378
00:37:31,370 --> 00:37:31,380
we log in and call the resize terminal
 

1379
00:37:31,380 --> 00:37:35,470
we log in and call the resize terminal
that we've seen before

1380
00:37:35,470 --> 00:37:35,480

 

1381
00:37:35,480 --> 00:37:39,680

here's the attempt communication other

1382
00:37:39,680 --> 00:37:39,690
here's the attempt communication other
 

1383
00:37:39,690 --> 00:37:40,640
here's the attempt communication other
reason why it's called attempt because

1384
00:37:40,640 --> 00:37:40,650
reason why it's called attempt because
 

1385
00:37:40,650 --> 00:37:43,820
reason why it's called attempt because
say it might not be a WebSocket and

1386
00:37:43,820 --> 00:37:43,830
say it might not be a WebSocket and
 

1387
00:37:43,830 --> 00:37:47,270
say it might not be a WebSocket and
which case it will fail but if it is

1388
00:37:47,270 --> 00:37:47,280
which case it will fail but if it is
 

1389
00:37:47,280 --> 00:37:51,650
which case it will fail but if it is
great we create a process context which

1390
00:37:51,650 --> 00:37:51,660
great we create a process context which
 

1391
00:37:51,660 --> 00:37:54,980
great we create a process context which
we can modify if we need to for spawn

1392
00:37:54,980 --> 00:37:54,990
we can modify if we need to for spawn
 

1393
00:37:54,990 --> 00:38:01,940
we can modify if we need to for spawn
enough how we create our session with

1394
00:38:01,940 --> 00:38:01,950
enough how we create our session with
 

1395
00:38:01,950 --> 00:38:06,880
enough how we create our session with
the process context and environment now

1396
00:38:06,880 --> 00:38:06,890
the process context and environment now
 

1397
00:38:06,890 --> 00:38:12,230
the process context and environment now
we need to call WebSockets from a yes or

1398
00:38:12,230 --> 00:38:12,240
we need to call WebSockets from a yes or
 

1399
00:38:12,240 --> 00:38:15,670
we need to call WebSockets from a yes or
WebSockets but if is a type signature

1400
00:38:15,670 --> 00:38:15,680
WebSockets but if is a type signature
 

1401
00:38:15,680 --> 00:38:18,980
WebSockets but if is a type signature
reroute the connection that's what I was

1402
00:38:18,980 --> 00:38:18,990
reroute the connection that's what I was
 

1403
00:38:18,990 --> 00:38:21,470
reroute the connection that's what I was
mentioning earlier whenever you restrict

1404
00:38:21,470 --> 00:38:21,480
mentioning earlier whenever you restrict
 

1405
00:38:21,480 --> 00:38:24,140
mentioning earlier whenever you restrict
the environment it makes a little bit

1406
00:38:24,140 --> 00:38:24,150
the environment it makes a little bit
 

1407
00:38:24,150 --> 00:38:26,870
the environment it makes a little bit
less composable so we have to do a

1408
00:38:26,870 --> 00:38:26,880
less composable so we have to do a
 

1409
00:38:26,880 --> 00:38:28,580
less composable so we have to do a
little bit of trickery here in order to

1410
00:38:28,580 --> 00:38:28,590
little bit of trickery here in order to
 

1411
00:38:28,590 --> 00:38:31,700
little bit of trickery here in order to
make real work or any other reader for

1412
00:38:31,700 --> 00:38:31,710
make real work or any other reader for
 

1413
00:38:31,710 --> 00:38:36,080
make real work or any other reader for
that matter - to get to deal with this

1414
00:38:36,080 --> 00:38:36,090
that matter - to get to deal with this
 

1415
00:38:36,090 --> 00:38:38,810
that matter - to get to deal with this
environment so all we do is just use

1416
00:38:38,810 --> 00:38:38,820
environment so all we do is just use
 

1417
00:38:38,820 --> 00:38:42,830
environment so all we do is just use
with a we reader and lift wheel and we

1418
00:38:42,830 --> 00:38:42,840
with a we reader and lift wheel and we
 

1419
00:38:42,840 --> 00:38:46,820
with a we reader and lift wheel and we
can use our real action together with

1420
00:38:46,820 --> 00:38:46,830
can use our real action together with
 

1421
00:38:46,830 --> 00:38:48,920
can use our real action together with
the the WebSockets that has a real

1422
00:38:48,920 --> 00:38:48,930
the the WebSockets that has a real
 

1423
00:38:48,930 --> 00:38:51,530
the the WebSockets that has a real
career connection nothing too

1424
00:38:51,530 --> 00:38:51,540
career connection nothing too
 

1425
00:38:51,540 --> 00:38:56,930
career connection nothing too
particularly crazy here also we need to

1426
00:38:56,930 --> 00:38:56,940
particularly crazy here also we need to
 

1427
00:38:56,940 --> 00:39:02,030
particularly crazy here also we need to
do communication with our web browser

1428
00:39:02,030 --> 00:39:02,040
do communication with our web browser
 

1429
00:39:02,040 --> 00:39:05,540
do communication with our web browser
with WebSockets here is the function

1430
00:39:05,540 --> 00:39:05,550
with WebSockets here is the function
 

1431
00:39:05,550 --> 00:39:07,330
with WebSockets here is the function
that we have available the count dates

1432
00:39:07,330 --> 00:39:07,340
that we have available the count dates
 

1433
00:39:07,340 --> 00:39:11,630
that we have available the count dates
which is a source in the sink again same

1434
00:39:11,630 --> 00:39:11,640
which is a source in the sink again same
 

1435
00:39:11,640 --> 00:39:13,460
which is a source in the sink again same
problem the environment is restricted to

1436
00:39:13,460 --> 00:39:13,470
problem the environment is restricted to
 

1437
00:39:13,470 --> 00:39:17,390
problem the environment is restricted to
connection that's all right we can go

1438
00:39:17,390 --> 00:39:17,400
connection that's all right we can go
 

1439
00:39:17,400 --> 00:39:19,460
connection that's all right we can go
ahead and create this class highest

1440
00:39:19,460 --> 00:39:19,470
ahead and create this class highest
 

1441
00:39:19,470 --> 00:39:21,320
ahead and create this class highest
connection which would be a good idea to

1442
00:39:21,320 --> 00:39:21,330
connection which would be a good idea to
 

1443
00:39:21,330 --> 00:39:23,150
connection which would be a good idea to
push it upstream as well into website

1444
00:39:23,150 --> 00:39:23,160
push it upstream as well into website
 

1445
00:39:23,160 --> 00:39:25,520
push it upstream as well into website
into your web sockets which would

1446
00:39:25,520 --> 00:39:25,530
into your web sockets which would
 

1447
00:39:25,530 --> 00:39:30,950
into your web sockets which would
simplify least 11 and again with reality

1448
00:39:30,950 --> 00:39:30,960
simplify least 11 and again with reality
 

1449
00:39:30,960 --> 00:39:33,650
simplify least 11 and again with reality
and transpired function from conduit

1450
00:39:33,650 --> 00:39:33,660
and transpired function from conduit
 

1451
00:39:33,660 --> 00:39:39,380
and transpired function from conduit
allows us to change the reader T into

1452
00:39:39,380 --> 00:39:39,390
allows us to change the reader T into
 

1453
00:39:39,390 --> 00:39:45,010
allows us to change the reader T into
the the monorail connection they will

1454
00:39:45,010 --> 00:39:45,020

 

1455
00:39:45,020 --> 00:39:46,910

play around with you if you don't

1456
00:39:46,910 --> 00:39:46,920
play around with you if you don't
 

1457
00:39:46,920 --> 00:39:48,440
play around with you if you don't
understand right now it's

1458
00:39:48,440 --> 00:39:48,450
understand right now it's
 

1459
00:39:48,450 --> 00:39:50,630
understand right now it's
but not important if you do great a

1460
00:39:50,630 --> 00:39:50,640
but not important if you do great a
 

1461
00:39:50,640 --> 00:39:52,270
but not important if you do great a
party

1462
00:39:52,270 --> 00:39:52,280
party
 

1463
00:39:52,280 --> 00:39:56,650
party
the point is we have two candidates now

1464
00:39:56,650 --> 00:39:56,660
the point is we have two candidates now
 

1465
00:39:56,660 --> 00:40:00,890
the point is we have two candidates now
once they became a useful getting

1466
00:40:00,890 --> 00:40:00,900
once they became a useful getting
 

1467
00:40:00,900 --> 00:40:04,820
once they became a useful getting
information from the web browser and one

1468
00:40:04,820 --> 00:40:04,830
information from the web browser and one
 

1469
00:40:04,830 --> 00:40:06,860
information from the web browser and one
that we can type your information to the

1470
00:40:06,860 --> 00:40:06,870
that we can type your information to the
 

1471
00:40:06,870 --> 00:40:09,470
that we can type your information to the
web and remember we had the same thing

1472
00:40:09,470 --> 00:40:09,480
web and remember we had the same thing
 

1473
00:40:09,480 --> 00:40:13,550
web and remember we had the same thing
from the our suet terminal so all we got

1474
00:40:13,550 --> 00:40:13,560
from the our suet terminal so all we got
 

1475
00:40:13,560 --> 00:40:15,170
from the our suet terminal so all we got
to do really now is connect them

1476
00:40:15,170 --> 00:40:15,180
to do really now is connect them
 

1477
00:40:15,180 --> 00:40:18,530
to do really now is connect them
together and this is what this

1478
00:40:18,530 --> 00:40:18,540
together and this is what this
 

1479
00:40:18,540 --> 00:40:22,490
together and this is what this
communicate function is gonna do which

1480
00:40:22,490 --> 00:40:22,500
communicate function is gonna do which
 

1481
00:40:22,500 --> 00:40:31,370
communicate function is gonna do which
is get called right here communicate

1482
00:40:31,370 --> 00:40:31,380

 

1483
00:40:31,380 --> 00:40:33,610

[Music]

1484
00:40:33,610 --> 00:40:33,620
[Music]
 

1485
00:40:33,620 --> 00:40:36,820
[Music]
this is our with shell function that we

1486
00:40:36,820 --> 00:40:36,830
this is our with shell function that we
 

1487
00:40:36,830 --> 00:40:41,240
this is our with shell function that we
so before all it does cause our bash it

1488
00:40:41,240 --> 00:40:41,250
so before all it does cause our bash it
 

1489
00:40:41,250 --> 00:40:43,580
so before all it does cause our bash it
gets the terminal back that we can use

1490
00:40:43,580 --> 00:40:43,590
gets the terminal back that we can use
 

1491
00:40:43,590 --> 00:40:50,890
gets the terminal back that we can use
to get our conduits for communication we

1492
00:40:50,890 --> 00:40:50,900

 

1493
00:40:50,900 --> 00:40:53,600

add them together with the ones from the

1494
00:40:53,600 --> 00:40:53,610
add them together with the ones from the
 

1495
00:40:53,610 --> 00:40:56,420
add them together with the ones from the
WebSockets mystic in the middle at the

1496
00:40:56,420 --> 00:40:56,430
WebSockets mystic in the middle at the
 

1497
00:40:56,430 --> 00:41:00,410
WebSockets mystic in the middle at the
boundaries there we can use to look at

1498
00:41:00,410 --> 00:41:00,420
boundaries there we can use to look at
 

1499
00:41:00,420 --> 00:41:02,720
boundaries there we can use to look at
what's going on what's being moved back

1500
00:41:02,720 --> 00:41:02,730
what's going on what's being moved back
 

1501
00:41:02,730 --> 00:41:07,630
what's going on what's being moved back
and forth which is function right here

1502
00:41:07,630 --> 00:41:07,640
and forth which is function right here
 

1503
00:41:07,640 --> 00:41:09,860
and forth which is function right here
it does a little bit of person just so

1504
00:41:09,860 --> 00:41:09,870
it does a little bit of person just so
 

1505
00:41:09,870 --> 00:41:12,710
it does a little bit of person just so
it control sequences that are readable

1506
00:41:12,710 --> 00:41:12,720
it control sequences that are readable
 

1507
00:41:12,720 --> 00:41:16,000
it control sequences that are readable
by humans but that's not important and

1508
00:41:16,000 --> 00:41:16,010
by humans but that's not important and
 

1509
00:41:16,010 --> 00:41:19,910
by humans but that's not important and
then what it does it runs this countries

1510
00:41:19,910 --> 00:41:19,920
then what it does it runs this countries
 

1511
00:41:19,920 --> 00:41:24,460
then what it does it runs this countries
there is one country for going

1512
00:41:24,460 --> 00:41:24,470
there is one country for going
 

1513
00:41:24,470 --> 00:41:27,500
there is one country for going
downstream and one going upstream that

1514
00:41:27,500 --> 00:41:27,510
downstream and one going upstream that
 

1515
00:41:27,510 --> 00:41:29,090
downstream and one going upstream that
has to be working concurrently and if

1516
00:41:29,090 --> 00:41:29,100
has to be working concurrently and if
 

1517
00:41:29,100 --> 00:41:30,290
has to be working concurrently and if
one of them dies the other one was

1518
00:41:30,290 --> 00:41:30,300
one of them dies the other one was
 

1519
00:41:30,300 --> 00:41:31,970
one of them dies the other one was
supposed to that as well which is what a

1520
00:41:31,970 --> 00:41:31,980
supposed to that as well which is what a
 

1521
00:41:31,980 --> 00:41:35,000
supposed to that as well which is what a
race is going to do for us we also catch

1522
00:41:35,000 --> 00:41:35,010
race is going to do for us we also catch
 

1523
00:41:35,010 --> 00:41:36,110
race is going to do for us we also catch
an exception

1524
00:41:36,110 --> 00:41:36,120
an exception
 

1525
00:41:36,120 --> 00:41:38,270
an exception
the WebSockets exceptionally in case so

1526
00:41:38,270 --> 00:41:38,280
the WebSockets exceptionally in case so
 

1527
00:41:38,280 --> 00:41:44,590
the WebSockets exceptionally in case so
we have a graceful termination and we

1528
00:41:44,590 --> 00:41:44,600
we have a graceful termination and we
 

1529
00:41:44,600 --> 00:41:49,370
we have a graceful termination and we
use our logger in order to record that

1530
00:41:49,370 --> 00:41:49,380
use our logger in order to record that
 

1531
00:41:49,380 --> 00:41:52,450
use our logger in order to record that
as well and of course

1532
00:41:52,450 --> 00:41:52,460
as well and of course
 

1533
00:41:52,460 --> 00:41:55,720
as well and of course
so we don't get these 500 errors in our

1534
00:41:55,720 --> 00:41:55,730
so we don't get these 500 errors in our
 

1535
00:41:55,730 --> 00:41:58,700
so we don't get these 500 errors in our
in our browser we catch all exceptions

1536
00:41:58,700 --> 00:41:58,710
in our browser we catch all exceptions
 

1537
00:41:58,710 --> 00:41:59,790
in our browser we catch all exceptions
and

1538
00:41:59,790 --> 00:41:59,800
and
 

1539
00:41:59,800 --> 00:42:01,770
and
and except of course they're synchronous

1540
00:42:01,770 --> 00:42:01,780
and except of course they're synchronous
 

1541
00:42:01,780 --> 00:42:05,130
and except of course they're synchronous
exceptions which is important and we

1542
00:42:05,130 --> 00:42:05,140
exceptions which is important and we
 

1543
00:42:05,140 --> 00:42:09,080
exceptions which is important and we
recorded a record that as well over here

1544
00:42:09,080 --> 00:42:09,090
recorded a record that as well over here
 

1545
00:42:09,090 --> 00:42:12,540
recorded a record that as well over here
and all of these runs inside of the REO

1546
00:42:12,540 --> 00:42:12,550
and all of these runs inside of the REO
 

1547
00:42:12,550 --> 00:42:15,630
and all of these runs inside of the REO
in the his environment web shell web

1548
00:42:15,630 --> 00:42:15,640
in the his environment web shell web
 

1549
00:42:15,640 --> 00:42:18,180
in the his environment web shell web
session which has all of the stuff that

1550
00:42:18,180 --> 00:42:18,190
session which has all of the stuff that
 

1551
00:42:18,190 --> 00:42:21,390
session which has all of the stuff that
we've talked about before it has a lock

1552
00:42:21,390 --> 00:42:21,400
we've talked about before it has a lock
 

1553
00:42:21,400 --> 00:42:23,820
we've talked about before it has a lock
function it has our global mutable

1554
00:42:23,820 --> 00:42:23,830
function it has our global mutable
 

1555
00:42:23,830 --> 00:42:28,290
function it has our global mutable
environment a has configuration and

1556
00:42:28,290 --> 00:42:28,300
environment a has configuration and
 

1557
00:42:28,300 --> 00:42:31,650
environment a has configuration and
terminal handles and so basically this

1558
00:42:31,650 --> 00:42:31,660
terminal handles and so basically this
 

1559
00:42:31,660 --> 00:42:36,950
terminal handles and so basically this
is the the meat of our web shop

1560
00:42:36,950 --> 00:42:36,960
is the the meat of our web shop
 

1561
00:42:36,960 --> 00:42:40,680
is the the meat of our web shop
so before we go any further I want to

1562
00:42:40,680 --> 00:42:40,690
so before we go any further I want to
 

1563
00:42:40,690 --> 00:42:45,810
so before we go any further I want to
also show you how we initialize all this

1564
00:42:45,810 --> 00:42:45,820
also show you how we initialize all this
 

1565
00:42:45,820 --> 00:42:47,460
also show you how we initialize all this
stuff how do you want to stick it all on

1566
00:42:47,460 --> 00:42:47,470
stuff how do you want to stick it all on
 

1567
00:42:47,470 --> 00:42:53,100
stuff how do you want to stick it all on
the slide so I'm gonna drop into beam

1568
00:42:53,100 --> 00:42:53,110
the slide so I'm gonna drop into beam
 

1569
00:42:53,110 --> 00:42:58,620
the slide so I'm gonna drop into beam
and we'll look at a main function this

1570
00:42:58,620 --> 00:42:58,630
and we'll look at a main function this
 

1571
00:42:58,630 --> 00:43:00,150
and we'll look at a main function this
is the part that gives everything

1572
00:43:00,150 --> 00:43:00,160
is the part that gives everything
 

1573
00:43:00,160 --> 00:43:02,840
is the part that gives everything
together

1574
00:43:02,840 --> 00:43:02,850

 

1575
00:43:02,850 --> 00:43:08,010

we can parse our command line arguments

1576
00:43:08,010 --> 00:43:08,020
we can parse our command line arguments
 

1577
00:43:08,020 --> 00:43:08,760
we can parse our command line arguments
like port

1578
00:43:08,760 --> 00:43:08,770
like port
 

1579
00:43:08,770 --> 00:43:11,430
like port
log level host basically this is how we

1580
00:43:11,430 --> 00:43:11,440
log level host basically this is how we
 

1581
00:43:11,440 --> 00:43:14,850
log level host basically this is how we
customize our environment and this is

1582
00:43:14,850 --> 00:43:14,860
customize our environment and this is
 

1583
00:43:14,860 --> 00:43:18,870
customize our environment and this is
what we do in name again this is

1584
00:43:18,870 --> 00:43:18,880
what we do in name again this is
 

1585
00:43:18,880 --> 00:43:20,160
what we do in name again this is
basically configuration however you

1586
00:43:20,160 --> 00:43:20,170
basically configuration however you
 

1587
00:43:20,170 --> 00:43:22,140
basically configuration however you
wanna do it such as top of the parcel

1588
00:43:22,140 --> 00:43:22,150
wanna do it such as top of the parcel
 

1589
00:43:22,150 --> 00:43:25,920
wanna do it such as top of the parcel
applicative as well as a choice of

1590
00:43:25,920 --> 00:43:25,930
applicative as well as a choice of
 

1591
00:43:25,930 --> 00:43:27,510
applicative as well as a choice of
dealing with configuration file if you

1592
00:43:27,510 --> 00:43:27,520
dealing with configuration file if you
 

1593
00:43:27,520 --> 00:43:31,410
dealing with configuration file if you
want to go that route we use those

1594
00:43:31,410 --> 00:43:31,420
want to go that route we use those
 

1595
00:43:31,420 --> 00:43:36,810
want to go that route we use those
settings for setting up the warp server

1596
00:43:36,810 --> 00:43:36,820
settings for setting up the warp server
 

1597
00:43:36,820 --> 00:43:43,320
settings for setting up the warp server
the port the host and then as we saw

1598
00:43:43,320 --> 00:43:43,330
the port the host and then as we saw
 

1599
00:43:43,330 --> 00:43:49,020
the port the host and then as we saw
before we create our log function we

1600
00:43:49,020 --> 00:43:49,030
before we create our log function we
 

1601
00:43:49,030 --> 00:43:52,380
before we create our log function we
create our global state environment we

1602
00:43:52,380 --> 00:43:52,390
create our global state environment we
 

1603
00:43:52,390 --> 00:43:56,190
create our global state environment we
put it into the ESL app and we start our

1604
00:43:56,190 --> 00:43:56,200
put it into the ESL app and we start our
 

1605
00:43:56,200 --> 00:44:01,590
put it into the ESL app and we start our
server and that's pretty much the whole

1606
00:44:01,590 --> 00:44:01,600
server and that's pretty much the whole
 

1607
00:44:01,600 --> 00:44:08,340
server and that's pretty much the whole
WebGL application that we have we'll be

1608
00:44:08,340 --> 00:44:08,350
WebGL application that we have we'll be
 

1609
00:44:08,350 --> 00:44:09,960
WebGL application that we have we'll be
good to thing to have a demo of this

1610
00:44:09,960 --> 00:44:09,970
good to thing to have a demo of this
 

1611
00:44:09,970 --> 00:44:11,580
good to thing to have a demo of this
application I would assume you a seed

1612
00:44:11,580 --> 00:44:11,590
application I would assume you a seed
 

1613
00:44:11,590 --> 00:44:13,590
application I would assume you a seed
and in fact

1614
00:44:13,590 --> 00:44:13,600
and in fact
 

1615
00:44:13,600 --> 00:44:15,600
and in fact
this whole time we were using this web

1616
00:44:15,600 --> 00:44:15,610
this whole time we were using this web
 

1617
00:44:15,610 --> 00:44:17,160
this whole time we were using this web
shell because this thing is actually

1618
00:44:17,160 --> 00:44:17,170
shell because this thing is actually
 

1619
00:44:17,170 --> 00:44:20,970
shell because this thing is actually
running instead of the browser which is

1620
00:44:20,970 --> 00:44:20,980
running instead of the browser which is
 

1621
00:44:20,980 --> 00:44:25,290
running instead of the browser which is
really need and I don't ask what can we

1622
00:44:25,290 --> 00:44:25,300
really need and I don't ask what can we
 

1623
00:44:25,300 --> 00:44:29,430
really need and I don't ask what can we
do well we can then go deeper as Leonard

1624
00:44:29,430 --> 00:44:29,440
do well we can then go deeper as Leonard
 

1625
00:44:29,440 --> 00:44:36,110
do well we can then go deeper as Leonard
DiCaprio said we can do a stack run rush

1626
00:44:36,110 --> 00:44:36,120
DiCaprio said we can do a stack run rush
 

1627
00:44:36,120 --> 00:44:38,300
DiCaprio said we can do a stack run rush
verbose and

1628
00:44:38,300 --> 00:44:38,310
verbose and
 

1629
00:44:38,310 --> 00:44:44,730
verbose and
log alive well save the bug and port

1630
00:44:44,730 --> 00:44:44,740
log alive well save the bug and port
 

1631
00:44:44,740 --> 00:44:47,070
log alive well save the bug and port
3000 won because we already have run out

1632
00:44:47,070 --> 00:44:47,080
3000 won because we already have run out
 

1633
00:44:47,080 --> 00:44:50,130
3000 won because we already have run out
of 8,000 and we can just open another

1634
00:44:50,130 --> 00:44:50,140
of 8,000 and we can just open another
 

1635
00:44:50,140 --> 00:44:57,810
of 8,000 and we can just open another
tab 3,000 won and we have eruption which

1636
00:44:57,810 --> 00:44:57,820
tab 3,000 won and we have eruption which
 

1637
00:44:57,820 --> 00:44:59,150
tab 3,000 won and we have eruption which
is really cool I think

1638
00:44:59,150 --> 00:44:59,160
is really cool I think
 

1639
00:44:59,160 --> 00:45:02,220
is really cool I think
and there's many instances of it will be

1640
00:45:02,220 --> 00:45:02,230
and there's many instances of it will be
 

1641
00:45:02,230 --> 00:45:04,290
and there's many instances of it will be
supported and here was what I was

1642
00:45:04,290 --> 00:45:04,300
supported and here was what I was
 

1643
00:45:04,300 --> 00:45:06,810
supported and here was what I was
mentioned too if we resize it it needs

1644
00:45:06,810 --> 00:45:06,820
mentioned too if we resize it it needs
 

1645
00:45:06,820 --> 00:45:09,030
mentioned too if we resize it it needs
to let the server know that the size has

1646
00:45:09,030 --> 00:45:09,040
to let the server know that the size has
 

1647
00:45:09,040 --> 00:45:15,270
to let the server know that the size has
changed so I will go ahead come back go

1648
00:45:15,270 --> 00:45:15,280
changed so I will go ahead come back go
 

1649
00:45:15,280 --> 00:45:16,260
changed so I will go ahead come back go
ahead and kill our server

1650
00:45:16,260 --> 00:45:16,270
ahead and kill our server
 

1651
00:45:16,270 --> 00:45:22,080
ahead and kill our server
well actually we go like here and we

1652
00:45:22,080 --> 00:45:22,090
well actually we go like here and we
 

1653
00:45:22,090 --> 00:45:27,210
well actually we go like here and we
graceful exit we will see here that the

1654
00:45:27,210 --> 00:45:27,220
graceful exit we will see here that the
 

1655
00:45:27,220 --> 00:45:31,380
graceful exit we will see here that the
Prats function told us logged how long

1656
00:45:31,380 --> 00:45:31,390
Prats function told us logged how long
 

1657
00:45:31,390 --> 00:45:33,540
Prats function told us logged how long
this process was running which process

1658
00:45:33,540 --> 00:45:33,550
this process was running which process
 

1659
00:45:33,550 --> 00:45:39,030
this process was running which process
was and you'll see this logger in action

1660
00:45:39,030 --> 00:45:39,040
was and you'll see this logger in action
 

1661
00:45:39,040 --> 00:45:41,520
was and you'll see this logger in action
he was logging everything that we

1662
00:45:41,520 --> 00:45:41,530
he was logging everything that we
 

1663
00:45:41,530 --> 00:45:45,480
he was logging everything that we
communicated this is the exit and how

1664
00:45:45,480 --> 00:45:45,490
communicated this is the exit and how
 

1665
00:45:45,490 --> 00:45:53,210
communicated this is the exit and how
the process fixed okay let's go slides

1666
00:45:53,210 --> 00:45:53,220
the process fixed okay let's go slides
 

1667
00:45:53,220 --> 00:45:55,170
the process fixed okay let's go slides
everyone's very impressed with the twist

1668
00:45:55,170 --> 00:45:55,180
everyone's very impressed with the twist
 

1669
00:45:55,180 --> 00:46:05,100
everyone's very impressed with the twist
by the way before I sum up I want to say

1670
00:46:05,100 --> 00:46:05,110
by the way before I sum up I want to say
 

1671
00:46:05,110 --> 00:46:06,690
by the way before I sum up I want to say
a little bit about the package called

1672
00:46:06,690 --> 00:46:06,700
a little bit about the package called
 

1673
00:46:06,700 --> 00:46:10,860
a little bit about the package called
the orphans this provides orphans

1674
00:46:10,860 --> 00:46:10,870
the orphans this provides orphans
 

1675
00:46:10,870 --> 00:46:14,540
the orphans this provides orphans
instances for their for real data type

1676
00:46:14,540 --> 00:46:14,550
instances for their for real data type
 

1677
00:46:14,550 --> 00:46:19,140
instances for their for real data type
monitor logger is one thing that is used

1678
00:46:19,140 --> 00:46:19,150
monitor logger is one thing that is used
 

1679
00:46:19,150 --> 00:46:22,920
monitor logger is one thing that is used
extensively if throught some tools we

1680
00:46:22,920 --> 00:46:22,930
extensively if throught some tools we
 

1681
00:46:22,930 --> 00:46:26,370
extensively if throught some tools we
share REO has an instance of a few if

1682
00:46:26,370 --> 00:46:26,380
share REO has an instance of a few if
 

1683
00:46:26,380 --> 00:46:27,550
share REO has an instance of a few if
you need

1684
00:46:27,550 --> 00:46:27,560
you need
 

1685
00:46:27,560 --> 00:46:29,110
you need
when a resource have you successful that

1686
00:46:29,110 --> 00:46:29,120
when a resource have you successful that
 

1687
00:46:29,120 --> 00:46:33,340
when a resource have you successful that
which is comes very very handy this in

1688
00:46:33,340 --> 00:46:33,350
which is comes very very handy this in
 

1689
00:46:33,350 --> 00:46:35,050
which is comes very very handy this in
particular I didn't find useful but some

1690
00:46:35,050 --> 00:46:35,060
particular I didn't find useful but some
 

1691
00:46:35,060 --> 00:46:37,320
particular I didn't find useful but some
some people mine

1692
00:46:37,320 --> 00:46:37,330
some people mine
 

1693
00:46:37,330 --> 00:46:41,410
some people mine
yeah the demo you seen that and so I

1694
00:46:41,410 --> 00:46:41,420
yeah the demo you seen that and so I
 

1695
00:46:41,420 --> 00:46:45,160
yeah the demo you seen that and so I
want to sum it up so we have a little

1696
00:46:45,160 --> 00:46:45,170
want to sum it up so we have a little
 

1697
00:46:45,170 --> 00:46:49,210
want to sum it up so we have a little
bit of time of questions first of all

1698
00:46:49,210 --> 00:46:49,220
bit of time of questions first of all
 

1699
00:46:49,220 --> 00:46:52,120
bit of time of questions first of all
Rio is an amazing package I want to

1700
00:46:52,120 --> 00:46:52,130
Rio is an amazing package I want to
 

1701
00:46:52,130 --> 00:46:55,890
Rio is an amazing package I want to
thank Michael very much for it we use it

1702
00:46:55,890 --> 00:46:55,900
thank Michael very much for it we use it
 

1703
00:46:55,900 --> 00:47:00,400
thank Michael very much for it we use it
lately extensively on projects in that

1704
00:47:00,400 --> 00:47:00,410
lately extensively on projects in that
 

1705
00:47:00,410 --> 00:47:02,260
lately extensively on projects in that
epoch complete and think not only to

1706
00:47:02,260 --> 00:47:02,270
epoch complete and think not only to
 

1707
00:47:02,270 --> 00:47:04,380
epoch complete and think not only to
Michael but other contributors of course

1708
00:47:04,380 --> 00:47:04,390
Michael but other contributors of course
 

1709
00:47:04,390 --> 00:47:08,440
Michael but other contributors of course
it is very well established patterns and

1710
00:47:08,440 --> 00:47:08,450
it is very well established patterns and
 

1711
00:47:08,450 --> 00:47:10,960
it is very well established patterns and
it's very easy to get started with them

1712
00:47:10,960 --> 00:47:10,970
it's very easy to get started with them
 

1713
00:47:10,970 --> 00:47:13,390
it's very easy to get started with them
documentation is very good and they

1714
00:47:13,390 --> 00:47:13,400
documentation is very good and they
 

1715
00:47:13,400 --> 00:47:16,000
documentation is very good and they
follows the also the pattern if it

1716
00:47:16,000 --> 00:47:16,010
follows the also the pattern if it
 

1717
00:47:16,010 --> 00:47:18,070
follows the also the pattern if it
doesn't compile it's most likely it's

1718
00:47:18,070 --> 00:47:18,080
doesn't compile it's most likely it's
 

1719
00:47:18,080 --> 00:47:23,220
doesn't compile it's most likely it's
broken

1720
00:47:23,220 --> 00:47:23,230

 

1721
00:47:23,230 --> 00:47:26,740

there is also questions sometimes that I

1722
00:47:26,740 --> 00:47:26,750
there is also questions sometimes that I
 

1723
00:47:26,750 --> 00:47:29,350
there is also questions sometimes that I
mean there are dependencies I don't want

1724
00:47:29,350 --> 00:47:29,360
mean there are dependencies I don't want
 

1725
00:47:29,360 --> 00:47:32,680
mean there are dependencies I don't want
to depend on all those packages like

1726
00:47:32,680 --> 00:47:32,690
to depend on all those packages like
 

1727
00:47:32,690 --> 00:47:35,290
to depend on all those packages like
back to package and containers I'm gonna

1728
00:47:35,290 --> 00:47:35,300
back to package and containers I'm gonna
 

1729
00:47:35,300 --> 00:47:37,660
back to package and containers I'm gonna
be using them well let's find it say you

1730
00:47:37,660 --> 00:47:37,670
be using them well let's find it say you
 

1731
00:47:37,670 --> 00:47:41,250
be using them well let's find it say you
your library doesn't you can select

1732
00:47:41,250 --> 00:47:41,260
your library doesn't you can select
 

1733
00:47:41,260 --> 00:47:46,300
your library doesn't you can select
selectively choose for instance only if

1734
00:47:46,300 --> 00:47:46,310
selectively choose for instance only if
 

1735
00:47:46,310 --> 00:47:49,870
selectively choose for instance only if
they are in that process which could

1736
00:47:49,870 --> 00:47:49,880
they are in that process which could
 

1737
00:47:49,880 --> 00:47:55,980
they are in that process which could
potentially down to the terminal example

1738
00:47:55,980 --> 00:47:55,990

 

1739
00:47:55,990 --> 00:47:59,380

but then why not to not to use Rio

1740
00:47:59,380 --> 00:47:59,390
but then why not to not to use Rio
 

1741
00:47:59,390 --> 00:48:01,450
but then why not to not to use Rio
depends not that expensive and most of

1742
00:48:01,450 --> 00:48:01,460
depends not that expensive and most of
 

1743
00:48:01,460 --> 00:48:04,270
depends not that expensive and most of
those dependencies are already wired in

1744
00:48:04,270 --> 00:48:04,280
those dependencies are already wired in
 

1745
00:48:04,280 --> 00:48:11,140
those dependencies are already wired in
base so why not one example I will say

1746
00:48:11,140 --> 00:48:11,150
base so why not one example I will say
 

1747
00:48:11,150 --> 00:48:13,270
base so why not one example I will say
that we will not gonna shine is if

1748
00:48:13,270 --> 00:48:13,280
that we will not gonna shine is if
 

1749
00:48:13,280 --> 00:48:15,220
that we will not gonna shine is if
you're not doing much concurrent so

1750
00:48:15,220 --> 00:48:15,230
you're not doing much concurrent so
 

1751
00:48:15,230 --> 00:48:16,900
you're not doing much concurrent so
exception so you not doing any

1752
00:48:16,900 --> 00:48:16,910
exception so you not doing any
 

1753
00:48:16,910 --> 00:48:19,450
exception so you not doing any
side-effects period it's some pure

1754
00:48:19,450 --> 00:48:19,460
side-effects period it's some pure
 

1755
00:48:19,460 --> 00:48:22,960
side-effects period it's some pure
category theory library then library we

1756
00:48:22,960 --> 00:48:22,970
category theory library then library we
 

1757
00:48:22,970 --> 00:48:27,100
category theory library then library we
was different not for you but you can

1758
00:48:27,100 --> 00:48:27,110
was different not for you but you can
 

1759
00:48:27,110 --> 00:48:29,050
was different not for you but you can
still use the concepts that describes

1760
00:48:29,050 --> 00:48:29,060
still use the concepts that describes
 

1761
00:48:29,060 --> 00:48:35,440
still use the concepts that describes
you really describe with that I think

1762
00:48:35,440 --> 00:48:35,450
you really describe with that I think
 

1763
00:48:35,450 --> 00:48:38,980
you really describe with that I think
one lastly now definitely mention is it

1764
00:48:38,980 --> 00:48:38,990
one lastly now definitely mention is it
 

1765
00:48:38,990 --> 00:48:41,000
one lastly now definitely mention is it
works very well for teams because

1766
00:48:41,000 --> 00:48:41,010
works very well for teams because
 

1767
00:48:41,010 --> 00:48:43,849
works very well for teams because
working on a large project it provides a

1768
00:48:43,849 --> 00:48:43,859
working on a large project it provides a
 

1769
00:48:43,859 --> 00:48:45,320
working on a large project it provides a
consistent way for all of your

1770
00:48:45,320 --> 00:48:45,330
consistent way for all of your
 

1771
00:48:45,330 --> 00:48:46,849
consistent way for all of your
co-workers to follow the same pattern

1772
00:48:46,849 --> 00:48:46,859
co-workers to follow the same pattern
 

1773
00:48:46,859 --> 00:48:49,190
co-workers to follow the same pattern
and not step in each other's toes smooth

1774
00:48:49,190 --> 00:48:49,200
and not step in each other's toes smooth
 

1775
00:48:49,200 --> 00:48:53,480
and not step in each other's toes smooth
them with different classes I'd like so

1776
00:48:53,480 --> 00:48:53,490
them with different classes I'd like so
 

1777
00:48:53,490 --> 00:48:55,670
them with different classes I'd like so
well thank you very much I think that's

1778
00:48:55,670 --> 00:48:55,680
well thank you very much I think that's
 

1779
00:48:55,680 --> 00:49:01,010
well thank you very much I think that's
it for me anybody has any questions two

1780
00:49:01,010 --> 00:49:01,020
it for me anybody has any questions two
 

1781
00:49:01,020 --> 00:49:02,150
it for me anybody has any questions two
people wanted to confirm whether the

1782
00:49:02,150 --> 00:49:02,160
people wanted to confirm whether the
 

1783
00:49:02,160 --> 00:49:03,890
people wanted to confirm whether the
source for the project and the slides

1784
00:49:03,890 --> 00:49:03,900
source for the project and the slides
 

1785
00:49:03,900 --> 00:49:05,359
source for the project and the slides
themselves will be available for

1786
00:49:05,359 --> 00:49:05,369
themselves will be available for
 

1787
00:49:05,369 --> 00:49:09,230
themselves will be available for
download after the presentation slides I

1788
00:49:09,230 --> 00:49:09,240
download after the presentation slides I
 

1789
00:49:09,240 --> 00:49:11,240
download after the presentation slides I
can make them available the source for

1790
00:49:11,240 --> 00:49:11,250
can make them available the source for
 

1791
00:49:11,250 --> 00:49:14,450
can make them available the source for
the demo application is right here I can

1792
00:49:14,450 --> 00:49:14,460
the demo application is right here I can
 

1793
00:49:14,460 --> 00:49:17,210
the demo application is right here I can
go ahead and clone and improve it if you

1794
00:49:17,210 --> 00:49:17,220
go ahead and clone and improve it if you
 

1795
00:49:17,220 --> 00:49:23,270
go ahead and clone and improve it if you
wish cars do whatever you the slides if

1796
00:49:23,270 --> 00:49:23,280
wish cars do whatever you the slides if
 

1797
00:49:23,280 --> 00:49:26,690
wish cars do whatever you the slides if
you if like I mean you have available as

1798
00:49:26,690 --> 00:49:26,700
you if like I mean you have available as
 

1799
00:49:26,700 --> 00:49:28,820
you if like I mean you have available as
well and this presentation is also

1800
00:49:28,820 --> 00:49:28,830
well and this presentation is also
 

1801
00:49:28,830 --> 00:49:37,970
well and this presentation is also
recorded I believe it will be okay so a

1802
00:49:37,970 --> 00:49:37,980
recorded I believe it will be okay so a
 

1803
00:49:37,980 --> 00:49:39,650
recorded I believe it will be okay so a
question is how much effort would you

1804
00:49:39,650 --> 00:49:39,660
question is how much effort would you
 

1805
00:49:39,660 --> 00:49:41,660
question is how much effort would you
guess would it be for a 100 module

1806
00:49:41,660 --> 00:49:41,670
guess would it be for a 100 module
 

1807
00:49:41,670 --> 00:49:43,520
guess would it be for a 100 module
Haskell code base to use Rio instead of

1808
00:49:43,520 --> 00:49:43,530
Haskell code base to use Rio instead of
 

1809
00:49:43,530 --> 00:49:48,109
Haskell code base to use Rio instead of
Prelude how much effort well they would

1810
00:49:48,109 --> 00:49:48,119
Prelude how much effort well they would
 

1811
00:49:48,119 --> 00:49:50,300
Prelude how much effort well they would
actually simplify it would reduce your

1812
00:49:50,300 --> 00:49:50,310
actually simplify it would reduce your
 

1813
00:49:50,310 --> 00:49:54,910
actually simplify it would reduce your
number of modules the number of code and

1814
00:49:54,910 --> 00:49:54,920
number of modules the number of code and
 

1815
00:49:54,920 --> 00:49:58,760
number of modules the number of code and
how much effort it would be very simple

1816
00:49:58,760 --> 00:49:58,770
how much effort it would be very simple
 

1817
00:49:58,770 --> 00:50:03,380
how much effort it would be very simple
I think first because it will import

1818
00:50:03,380 --> 00:50:03,390
I think first because it will import
 

1819
00:50:03,390 --> 00:50:06,020
I think first because it will import
everything that Prelude has and if it

1820
00:50:06,020 --> 00:50:06,030
everything that Prelude has and if it
 

1821
00:50:06,030 --> 00:50:08,810
everything that Prelude has and if it
breaks a compilation that means it

1822
00:50:08,810 --> 00:50:08,820
breaks a compilation that means it
 

1823
00:50:08,820 --> 00:50:13,210
breaks a compilation that means it
probably fix some bug for you so you

1824
00:50:13,210 --> 00:50:13,220
probably fix some bug for you so you
 

1825
00:50:13,220 --> 00:50:15,410
probably fix some bug for you so you
definitely because they will point out

1826
00:50:15,410 --> 00:50:15,420
definitely because they will point out
 

1827
00:50:15,420 --> 00:50:19,700
definitely because they will point out
all your partial functions it will force

1828
00:50:19,700 --> 00:50:19,710
all your partial functions it will force
 

1829
00:50:19,710 --> 00:50:23,960
all your partial functions it will force
you to use unified logging a lot of

1830
00:50:23,960 --> 00:50:23,970
you to use unified logging a lot of
 

1831
00:50:23,970 --> 00:50:25,700
you to use unified logging a lot of
times it will enforce good patterns on

1832
00:50:25,700 --> 00:50:25,710
times it will enforce good patterns on
 

1833
00:50:25,710 --> 00:50:30,560
times it will enforce good patterns on
you what refactoring is in in Haskell I

1834
00:50:30,560 --> 00:50:30,570
you what refactoring is in in Haskell I
 

1835
00:50:30,570 --> 00:50:31,790
you what refactoring is in in Haskell I
mean we have type system which is

1836
00:50:31,790 --> 00:50:31,800
mean we have type system which is
 

1837
00:50:31,800 --> 00:50:34,790
mean we have type system which is
amazing you'll tell you everywhere it's

1838
00:50:34,790 --> 00:50:34,800
amazing you'll tell you everywhere it's
 

1839
00:50:34,800 --> 00:50:36,349
amazing you'll tell you everywhere it's
broken I would never dare you do

1840
00:50:36,349 --> 00:50:36,359
broken I would never dare you do
 

1841
00:50:36,359 --> 00:50:41,000
broken I would never dare you do
something like that in Python what kind

1842
00:50:41,000 --> 00:50:41,010
something like that in Python what kind
 

1843
00:50:41,010 --> 00:50:42,890
something like that in Python what kind
of adoption by community or industry do

1844
00:50:42,890 --> 00:50:42,900
of adoption by community or industry do
 

1845
00:50:42,900 --> 00:50:44,900
of adoption by community or industry do
you have how big do you count on it to

1846
00:50:44,900 --> 00:50:44,910
you have how big do you count on it to
 

1847
00:50:44,910 --> 00:50:47,290
you have how big do you count on it to
be

1848
00:50:47,290 --> 00:50:47,300

 

1849
00:50:47,300 --> 00:50:50,560

I don't expect the real of Rio to be

1850
00:50:50,560 --> 00:50:50,570
I don't expect the real of Rio to be
 

1851
00:50:50,570 --> 00:50:52,210
I don't expect the real of Rio to be
growing it's that's the question but how

1852
00:50:52,210 --> 00:50:52,220
growing it's that's the question but how
 

1853
00:50:52,220 --> 00:50:55,470
growing it's that's the question but how
how popular will hope to become

1854
00:50:55,470 --> 00:50:55,480
how popular will hope to become
 

1855
00:50:55,480 --> 00:51:00,040
how popular will hope to become
definitely extremely popular I don't see

1856
00:51:00,040 --> 00:51:00,050
definitely extremely popular I don't see
 

1857
00:51:00,050 --> 00:51:01,830
definitely extremely popular I don't see
any reason why you should use anything

1858
00:51:01,830 --> 00:51:01,840
any reason why you should use anything
 

1859
00:51:01,840 --> 00:51:04,810
any reason why you should use anything
else if you fried in an application it's

1860
00:51:04,810 --> 00:51:04,820
else if you fried in an application it's
 

1861
00:51:04,820 --> 00:51:09,310
else if you fried in an application it's
just so straightforward and today and so

1862
00:51:09,310 --> 00:51:09,320
just so straightforward and today and so
 

1863
00:51:09,320 --> 00:51:10,840
just so straightforward and today and so
on the numbers front I don't have any

1864
00:51:10,840 --> 00:51:10,850
on the numbers front I don't have any
 

1865
00:51:10,850 --> 00:51:12,130
on the numbers front I don't have any
kind of numbers to back up how many

1866
00:51:12,130 --> 00:51:12,140
kind of numbers to back up how many
 

1867
00:51:12,140 --> 00:51:14,109
kind of numbers to back up how many
people are using it we definitely aren't

1868
00:51:14,109 --> 00:51:14,119
people are using it we definitely aren't
 

1869
00:51:14,119 --> 00:51:17,380
people are using it we definitely aren't
pushing it for a library dependency well

1870
00:51:17,380 --> 00:51:17,390
pushing it for a library dependency well
 

1871
00:51:17,390 --> 00:51:18,910
pushing it for a library dependency well
we may start using it as a library

1872
00:51:18,910 --> 00:51:18,920
we may start using it as a library
 

1873
00:51:18,920 --> 00:51:22,450
we may start using it as a library
dependency but many things on has on you

1874
00:51:22,450 --> 00:51:22,460
dependency but many things on has on you
 

1875
00:51:22,460 --> 00:51:24,760
dependency but many things on has on you
know uploaded the hackage wouldn't be

1876
00:51:24,760 --> 00:51:24,770
know uploaded the hackage wouldn't be
 

1877
00:51:24,770 --> 00:51:26,590
know uploaded the hackage wouldn't be
depending on Rio just by design right

1878
00:51:26,590 --> 00:51:26,600
depending on Rio just by design right
 

1879
00:51:26,600 --> 00:51:28,990
depending on Rio just by design right
now so it's hard to tell how popular it

1880
00:51:28,990 --> 00:51:29,000
now so it's hard to tell how popular it
 

1881
00:51:29,000 --> 00:51:32,290
now so it's hard to tell how popular it
is at the moment I would adapt a little

1882
00:51:32,290 --> 00:51:32,300
is at the moment I would adapt a little
 

1883
00:51:32,300 --> 00:51:34,390
is at the moment I would adapt a little
bit as a rock looked up there are a few

1884
00:51:34,390 --> 00:51:34,400
bit as a rock looked up there are a few
 

1885
00:51:34,400 --> 00:51:36,190
bit as a rock looked up there are a few
packages they already depend on Rio and

1886
00:51:36,190 --> 00:51:36,200
packages they already depend on Rio and
 

1887
00:51:36,200 --> 00:51:38,530
packages they already depend on Rio and
there is a there brings a lot of things

1888
00:51:38,530 --> 00:51:38,540
there is a there brings a lot of things
 

1889
00:51:38,540 --> 00:51:40,540
there is a there brings a lot of things
together like servant and I forgot the

1890
00:51:40,540 --> 00:51:40,550
together like servant and I forgot the
 

1891
00:51:40,550 --> 00:51:44,320
together like servant and I forgot the
name wood and a few standard things

1892
00:51:44,320 --> 00:51:44,330
name wood and a few standard things
 

1893
00:51:44,330 --> 00:51:47,440
name wood and a few standard things
based on Rio as well and in fact I've

1894
00:51:47,440 --> 00:51:47,450
based on Rio as well and in fact I've
 

1895
00:51:47,450 --> 00:51:49,990
based on Rio as well and in fact I've
used the servant and amazon co with

1896
00:51:49,990 --> 00:51:50,000
used the servant and amazon co with
 

1897
00:51:50,000 --> 00:51:55,570
used the servant and amazon co with
three or four weeks absolutely fine do

1898
00:51:55,570 --> 00:51:55,580
three or four weeks absolutely fine do
 

1899
00:51:55,580 --> 00:51:56,980
three or four weeks absolutely fine do
you have any working application online

1900
00:51:56,980 --> 00:51:56,990
you have any working application online
 

1901
00:51:56,990 --> 00:52:01,150
you have any working application online
or on github that uses Rio yeah it's

1902
00:52:01,150 --> 00:52:01,160
or on github that uses Rio yeah it's
 

1903
00:52:01,160 --> 00:52:06,760
or on github that uses Rio yeah it's
there is one selector right here I don't

1904
00:52:06,760 --> 00:52:06,770
there is one selector right here I don't
 

1905
00:52:06,770 --> 00:52:11,200
there is one selector right here I don't
personally for now we've used in close

1906
00:52:11,200 --> 00:52:11,210
personally for now we've used in close
 

1907
00:52:11,210 --> 00:52:14,710
personally for now we've used in close
source projects which plan to be open

1908
00:52:14,710 --> 00:52:14,720
source projects which plan to be open
 

1909
00:52:14,720 --> 00:52:16,870
source projects which plan to be open
source in the future so there will be

1910
00:52:16,870 --> 00:52:16,880
source in the future so there will be
 

1911
00:52:16,880 --> 00:52:20,080
source in the future so there will be
definitely project at the complain

1912
00:52:20,080 --> 00:52:20,090
definitely project at the complain
 

1913
00:52:20,090 --> 00:52:23,130
definitely project at the complain
worked on whether it will be open source

1914
00:52:23,130 --> 00:52:23,140
worked on whether it will be open source
 

1915
00:52:23,140 --> 00:52:26,710
worked on whether it will be open source
the there are few that are already

1916
00:52:26,710 --> 00:52:26,720
the there are few that are already
 

1917
00:52:26,720 --> 00:52:30,609
the there are few that are already
available that develop other people all

1918
00:52:30,609 --> 00:52:30,619
available that develop other people all
 

1919
00:52:30,619 --> 00:52:33,120
available that develop other people all
you can do is just go to this

1920
00:52:33,120 --> 00:52:33,130
you can do is just go to this
 

1921
00:52:33,130 --> 00:52:35,109
you can do is just go to this
documentation and look up the reverse

1922
00:52:35,109 --> 00:52:35,119
documentation and look up the reverse
 

1923
00:52:35,119 --> 00:52:36,670
documentation and look up the reverse
dependencies and you'll see packages

1924
00:52:36,670 --> 00:52:36,680
dependencies and you'll see packages
 

1925
00:52:36,680 --> 00:52:41,320
dependencies and you'll see packages
that usually you for newbies does it

1926
00:52:41,320 --> 00:52:41,330
that usually you for newbies does it
 

1927
00:52:41,330 --> 00:52:43,180
that usually you for newbies does it
make sense to go to Rio from the Rio

1928
00:52:43,180 --> 00:52:43,190
make sense to go to Rio from the Rio
 

1929
00:52:43,190 --> 00:52:44,440
make sense to go to Rio from the Rio
wrap from the beginning or would you

1930
00:52:44,440 --> 00:52:44,450
wrap from the beginning or would you
 

1931
00:52:44,450 --> 00:52:45,940
wrap from the beginning or would you
suggest to come by this library after

1932
00:52:45,940 --> 00:52:45,950
suggest to come by this library after
 

1933
00:52:45,950 --> 00:52:47,260
suggest to come by this library after
experiencing some of the problems and

1934
00:52:47,260 --> 00:52:47,270
experiencing some of the problems and
 

1935
00:52:47,270 --> 00:52:53,950
experiencing some of the problems and
intends to circumvent mitre you might

1936
00:52:53,950 --> 00:52:53,960
intends to circumvent mitre you might
 

1937
00:52:53,960 --> 00:52:56,710
intends to circumvent mitre you might
have to learn a little bit up front but

1938
00:52:56,710 --> 00:52:56,720
have to learn a little bit up front but
 

1939
00:52:56,720 --> 00:53:00,010
have to learn a little bit up front but
it'll be definitely worth it namely the

1940
00:53:00,010 --> 00:53:00,020
it'll be definitely worth it namely the
 

1941
00:53:00,020 --> 00:53:00,630
it'll be definitely worth it namely the
reader pattern

1942
00:53:00,630 --> 00:53:00,640
reader pattern
 

1943
00:53:00,640 --> 00:53:05,339
reader pattern
and dealing with with io if you can deal

1944
00:53:05,339 --> 00:53:05,349
and dealing with with io if you can deal
 

1945
00:53:05,349 --> 00:53:09,210
and dealing with with io if you can deal
with that then just go with with real if

1946
00:53:09,210 --> 00:53:09,220
with that then just go with with real if
 

1947
00:53:09,220 --> 00:53:12,630
with that then just go with with real if
you if this is totally new before and

1948
00:53:12,630 --> 00:53:12,640
you if this is totally new before and
 

1949
00:53:12,640 --> 00:53:14,579
you if this is totally new before and
you don't know how to do with the

1950
00:53:14,579 --> 00:53:14,589
you don't know how to do with the
 

1951
00:53:14,589 --> 00:53:16,980
you don't know how to do with the
recursion release and yet really a

1952
00:53:16,980 --> 00:53:16,990
recursion release and yet really a
 

1953
00:53:16,990 --> 00:53:22,259
recursion release and yet really a
little bit too early to motivate Rio as

1954
00:53:22,259 --> 00:53:22,269
little bit too early to motivate Rio as
 

1955
00:53:22,269 --> 00:53:24,329
little bit too early to motivate Rio as
a new type the reason is type classes

1956
00:53:24,329 --> 00:53:24,339
a new type the reason is type classes
 

1957
00:53:24,339 --> 00:53:26,400
a new type the reason is type classes
like monad lager define their instances

1958
00:53:26,400 --> 00:53:26,410
like monad lager define their instances
 

1959
00:53:26,410 --> 00:53:28,079
like monad lager define their instances
on Reader T to defer to the underlying

1960
00:53:28,079 --> 00:53:28,089
on Reader T to defer to the underlying
 

1961
00:53:28,089 --> 00:53:30,180
on Reader T to defer to the underlying
monad can you explain why this force is

1962
00:53:30,180 --> 00:53:30,190
monad can you explain why this force is
 

1963
00:53:30,190 --> 00:53:32,400
monad can you explain why this force is
a new type it seems like monad lager

1964
00:53:32,400 --> 00:53:32,410
a new type it seems like monad lager
 

1965
00:53:32,410 --> 00:53:36,569
a new type it seems like monad lager
should just default to IO Michael you

1966
00:53:36,569 --> 00:53:36,579
should just default to IO Michael you
 

1967
00:53:36,579 --> 00:53:37,710
should just default to IO Michael you
want to answer that because you are the

1968
00:53:37,710 --> 00:53:37,720
want to answer that because you are the
 

1969
00:53:37,720 --> 00:53:40,529
want to answer that because you are the
author of those I think I actually wrote

1970
00:53:40,529 --> 00:53:40,539
author of those I think I actually wrote
 

1971
00:53:40,539 --> 00:53:43,859
author of those I think I actually wrote
that sentence so yeah I can probably so

1972
00:53:43,859 --> 00:53:43,869
that sentence so yeah I can probably so
 

1973
00:53:43,869 --> 00:53:45,420
that sentence so yeah I can probably so
I don't quite understand the end of it's

1974
00:53:45,420 --> 00:53:45,430
I don't quite understand the end of it's
 

1975
00:53:45,430 --> 00:53:46,980
I don't quite understand the end of it's
all just explained what I was talking

1976
00:53:46,980 --> 00:53:46,990
all just explained what I was talking
 

1977
00:53:46,990 --> 00:53:50,819
all just explained what I was talking
about you you end up having the what we

1978
00:53:50,819 --> 00:53:50,829
about you you end up having the what we
 

1979
00:53:50,829 --> 00:53:52,380
about you you end up having the what we
call the the N by n problem with a

1980
00:53:52,380 --> 00:53:52,390
call the the N by n problem with a
 

1981
00:53:52,390 --> 00:53:54,269
call the the N by n problem with a
Cartesian explosion problem when you

1982
00:53:54,269 --> 00:53:54,279
Cartesian explosion problem when you
 

1983
00:53:54,279 --> 00:53:55,799
Cartesian explosion problem when you
start dealing with MPL style type

1984
00:53:55,799 --> 00:53:55,809
start dealing with MPL style type
 

1985
00:53:55,809 --> 00:53:58,019
start dealing with MPL style type
classes when you're defining the type

1986
00:53:58,019 --> 00:53:58,029
classes when you're defining the type
 

1987
00:53:58,029 --> 00:54:01,140
classes when you're defining the type
classes on the monad itself as opposed

1988
00:54:01,140 --> 00:54:01,150
classes on the monad itself as opposed
 

1989
00:54:01,150 --> 00:54:02,940
classes on the monad itself as opposed
to an environment contained within the

1990
00:54:02,940 --> 00:54:02,950
to an environment contained within the
 

1991
00:54:02,950 --> 00:54:04,950
to an environment contained within the
monad every time you define a new

1992
00:54:04,950 --> 00:54:04,960
monad every time you define a new
 

1993
00:54:04,960 --> 00:54:06,809
monad every time you define a new
capability you want to define a new

1994
00:54:06,809 --> 00:54:06,819
capability you want to define a new
 

1995
00:54:06,819 --> 00:54:08,940
capability you want to define a new
monad transformer which is usually the

1996
00:54:08,940 --> 00:54:08,950
monad transformer which is usually the
 

1997
00:54:08,950 --> 00:54:10,049
monad transformer which is usually the
new type I think that's where the new

1998
00:54:10,049 --> 00:54:10,059
new type I think that's where the new
 

1999
00:54:10,059 --> 00:54:12,210
new type I think that's where the new
type concept is coming from so you

2000
00:54:12,210 --> 00:54:12,220
type concept is coming from so you
 

2001
00:54:12,220 --> 00:54:13,529
type concept is coming from so you
define a new monad transformer and they

2002
00:54:13,529 --> 00:54:13,539
define a new monad transformer and they
 

2003
00:54:13,539 --> 00:54:15,480
define a new monad transformer and they
need to find a new type class to go

2004
00:54:15,480 --> 00:54:15,490
need to find a new type class to go
 

2005
00:54:15,490 --> 00:54:17,190
need to find a new type class to go
along with it let's say that you

2006
00:54:17,190 --> 00:54:17,200
along with it let's say that you
 

2007
00:54:17,200 --> 00:54:20,249
along with it let's say that you
introduced the new transformer foo T and

2008
00:54:20,249 --> 00:54:20,259
introduced the new transformer foo T and
 

2009
00:54:20,259 --> 00:54:22,980
introduced the new transformer foo T and
then you define it Mona type class monad

2010
00:54:22,980 --> 00:54:22,990
then you define it Mona type class monad
 

2011
00:54:22,990 --> 00:54:25,950
then you define it Mona type class monad
foo what you're going to end up doing is

2012
00:54:25,950 --> 00:54:25,960
foo what you're going to end up doing is
 

2013
00:54:25,960 --> 00:54:28,380
foo what you're going to end up doing is
defining a monad food type class inste

2014
00:54:28,380 --> 00:54:28,390
defining a monad food type class inste
 

2015
00:54:28,390 --> 00:54:31,410
defining a monad food type class inste
type class instance for reader t @

2016
00:54:31,410 --> 00:54:31,420
type class instance for reader t @
 

2017
00:54:31,420 --> 00:54:34,410
type class instance for reader t @
writer T and all these others that defer

2018
00:54:34,410 --> 00:54:34,420
writer T and all these others that defer
 

2019
00:54:34,420 --> 00:54:36,960
writer T and all these others that defer
to an underline instance of monad foo

2020
00:54:36,960 --> 00:54:36,970
to an underline instance of monad foo
 

2021
00:54:36,970 --> 00:54:39,480
to an underline instance of monad foo
and if you look in the MTL that's

2022
00:54:39,480 --> 00:54:39,490
and if you look in the MTL that's
 

2023
00:54:39,490 --> 00:54:41,400
and if you look in the MTL that's
exactly how it defines all of those

2024
00:54:41,400 --> 00:54:41,410
exactly how it defines all of those
 

2025
00:54:41,410 --> 00:54:44,910
exactly how it defines all of those
instances for the core type classes this

2026
00:54:44,910 --> 00:54:44,920
instances for the core type classes this
 

2027
00:54:44,920 --> 00:54:46,799
instances for the core type classes this
all works fine if you add a single

2028
00:54:46,799 --> 00:54:46,809
all works fine if you add a single
 

2029
00:54:46,809 --> 00:54:49,529
all works fine if you add a single
package on top of them TL the problem is

2030
00:54:49,529 --> 00:54:49,539
package on top of them TL the problem is
 

2031
00:54:49,539 --> 00:54:51,839
package on top of them TL the problem is
if you have a food package in a bar

2032
00:54:51,839 --> 00:54:51,849
if you have a food package in a bar
 

2033
00:54:51,849 --> 00:54:53,789
if you have a food package in a bar
packaged in a bad package each defining

2034
00:54:53,789 --> 00:54:53,799
packaged in a bad package each defining
 

2035
00:54:53,799 --> 00:54:56,039
packaged in a bad package each defining
their own mono transformer and their own

2036
00:54:56,039 --> 00:54:56,049
their own mono transformer and their own
 

2037
00:54:56,049 --> 00:54:58,410
their own mono transformer and their own
mono transformer and in their own MTL

2038
00:54:58,410 --> 00:54:58,420
mono transformer and in their own MTL
 

2039
00:54:58,420 --> 00:55:01,079
mono transformer and in their own MTL
style type class now you've added three

2040
00:55:01,079 --> 00:55:01,089
style type class now you've added three
 

2041
00:55:01,089 --> 00:55:02,609
style type class now you've added three
different combinations and now the

2042
00:55:02,609 --> 00:55:02,619
different combinations and now the
 

2043
00:55:02,619 --> 00:55:04,319
different combinations and now the
combination of these different things

2044
00:55:04,319 --> 00:55:04,329
combination of these different things
 

2045
00:55:04,329 --> 00:55:06,599
combination of these different things
needs to be defined and pulled together

2046
00:55:06,599 --> 00:55:06,609
needs to be defined and pulled together
 

2047
00:55:06,609 --> 00:55:08,130
needs to be defined and pulled together
in one place you start getting into

2048
00:55:08,130 --> 00:55:08,140
in one place you start getting into
 

2049
00:55:08,140 --> 00:55:10,410
in one place you start getting into
orphan instances if in place of all of

2050
00:55:10,410 --> 00:55:10,420
orphan instances if in place of all of
 

2051
00:55:10,420 --> 00:55:13,140
orphan instances if in place of all of
that you just define the these type

2052
00:55:13,140 --> 00:55:13,150
that you just define the these type
 

2053
00:55:13,150 --> 00:55:14,859
that you just define the these type
classes on

2054
00:55:14,859 --> 00:55:14,869
classes on
 

2055
00:55:14,869 --> 00:55:16,569
classes on
inside a reader tee and said a monad

2056
00:55:16,569 --> 00:55:16,579
inside a reader tee and said a monad
 

2057
00:55:16,579 --> 00:55:18,640
inside a reader tee and said a monad
reader you bypassed that problem

2058
00:55:18,640 --> 00:55:18,650
reader you bypassed that problem
 

2059
00:55:18,650 --> 00:55:21,009
reader you bypassed that problem
entirely and if that seems a little bit

2060
00:55:21,009 --> 00:55:21,019
entirely and if that seems a little bit
 

2061
00:55:21,019 --> 00:55:23,500
entirely and if that seems a little bit
vague feel free to hit me up on Twitter

2062
00:55:23,500 --> 00:55:23,510
vague feel free to hit me up on Twitter
 

2063
00:55:23,510 --> 00:55:24,670
vague feel free to hit me up on Twitter
or somewhere else afterwards and I can

2064
00:55:24,670 --> 00:55:24,680
or somewhere else afterwards and I can
 

2065
00:55:24,680 --> 00:55:28,599
or somewhere else afterwards and I can
give you some more examples I hope that

2066
00:55:28,599 --> 00:55:28,609
give you some more examples I hope that
 

2067
00:55:28,609 --> 00:55:30,579
give you some more examples I hope that
was clear cool thank you

2068
00:55:30,579 --> 00:55:30,589
was clear cool thank you
 

2069
00:55:30,589 --> 00:55:36,880
was clear cool thank you
sure let me see so far everything we

2070
00:55:36,880 --> 00:55:36,890
sure let me see so far everything we
 

2071
00:55:36,890 --> 00:55:38,740
sure let me see so far everything we
have seen in the default logging pattern

2072
00:55:38,740 --> 00:55:38,750
have seen in the default logging pattern
 

2073
00:55:38,750 --> 00:55:40,690
have seen in the default logging pattern
looks like we'll be very compatible by

2074
00:55:40,690 --> 00:55:40,700
looks like we'll be very compatible by
 

2075
00:55:40,700 --> 00:55:42,400
looks like we'll be very compatible by
default to serve as a base for something

2076
00:55:42,400 --> 00:55:42,410
default to serve as a base for something
 

2077
00:55:42,410 --> 00:55:45,430
default to serve as a base for something
like open tracing implementations that's

2078
00:55:45,430 --> 00:55:45,440
like open tracing implementations that's
 

2079
00:55:45,440 --> 00:55:47,769
like open tracing implementations that's
cool I think s'tel X of one what are

2080
00:55:47,769 --> 00:55:47,779
cool I think s'tel X of one what are
 

2081
00:55:47,779 --> 00:55:49,059
cool I think s'tel X of one what are
your thoughts on using this as a default

2082
00:55:49,059 --> 00:55:49,069
your thoughts on using this as a default
 

2083
00:55:49,069 --> 00:55:55,390
your thoughts on using this as a default
Lib for something like this don't fully

2084
00:55:55,390 --> 00:55:55,400
Lib for something like this don't fully
 

2085
00:55:55,400 --> 00:55:58,089
Lib for something like this don't fully
understand the question could you yeah

2086
00:55:58,089 --> 00:55:58,099
understand the question could you yeah
 

2087
00:55:58,099 --> 00:55:59,470
understand the question could you yeah
I'm also having a little trouble

2088
00:55:59,470 --> 00:55:59,480
I'm also having a little trouble
 

2089
00:55:59,480 --> 00:56:00,849
I'm also having a little trouble
understanding so Xavier if you could

2090
00:56:00,849 --> 00:56:00,859
understanding so Xavier if you could
 

2091
00:56:00,859 --> 00:56:02,829
understanding so Xavier if you could
type it and type in a clarification I'll

2092
00:56:02,829 --> 00:56:02,839
type it and type in a clarification I'll
 

2093
00:56:02,839 --> 00:56:04,930
type it and type in a clarification I'll
read it again though so far everything

2094
00:56:04,930 --> 00:56:04,940
read it again though so far everything
 

2095
00:56:04,940 --> 00:56:06,549
read it again though so far everything
we have seen in the default logging

2096
00:56:06,549 --> 00:56:06,559
we have seen in the default logging
 

2097
00:56:06,559 --> 00:56:08,500
we have seen in the default logging
pattern looks like it will be very

2098
00:56:08,500 --> 00:56:08,510
pattern looks like it will be very
 

2099
00:56:08,510 --> 00:56:10,539
pattern looks like it will be very
compatible by default to serve as a base

2100
00:56:10,539 --> 00:56:10,549
compatible by default to serve as a base
 

2101
00:56:10,549 --> 00:56:12,099
compatible by default to serve as a base
for something like open tracing

2102
00:56:12,099 --> 00:56:12,109
for something like open tracing
 

2103
00:56:12,109 --> 00:56:14,410
for something like open tracing
implementations what are your thoughts

2104
00:56:14,410 --> 00:56:14,420
implementations what are your thoughts
 

2105
00:56:14,420 --> 00:56:16,359
implementations what are your thoughts
about using it as a default Lib for

2106
00:56:16,359 --> 00:56:16,369
about using it as a default Lib for
 

2107
00:56:16,369 --> 00:56:19,690
about using it as a default Lib for
something something like this I guess I

2108
00:56:19,690 --> 00:56:19,700
something something like this I guess I
 

2109
00:56:19,700 --> 00:56:21,880
something something like this I guess I
part of it I'm confused about is open

2110
00:56:21,880 --> 00:56:21,890
part of it I'm confused about is open
 

2111
00:56:21,890 --> 00:56:24,009
part of it I'm confused about is open
tracing yeah I'm not familiar with open

2112
00:56:24,009 --> 00:56:24,019
tracing yeah I'm not familiar with open
 

2113
00:56:24,019 --> 00:56:26,289
tracing yeah I'm not familiar with open
tracing myself either

2114
00:56:26,289 --> 00:56:26,299
tracing myself either
 

2115
00:56:26,299 --> 00:56:27,789
tracing myself either
again let's follow up on that one

2116
00:56:27,789 --> 00:56:27,799
again let's follow up on that one
 

2117
00:56:27,799 --> 00:56:30,460
again let's follow up on that one
afterwards so follow up on currently

2118
00:56:30,460 --> 00:56:30,470
afterwards so follow up on currently
 

2119
00:56:30,470 --> 00:56:32,349
afterwards so follow up on currently
being answered which topics do you need

2120
00:56:32,349 --> 00:56:32,359
being answered which topics do you need
 

2121
00:56:32,359 --> 00:56:38,430
being answered which topics do you need
to understand to use real exceptions

2122
00:56:38,430 --> 00:56:38,440
to understand to use real exceptions
 

2123
00:56:38,440 --> 00:56:44,170
to understand to use real exceptions
reader pattern and that's pretty much it

2124
00:56:44,170 --> 00:56:44,180
reader pattern and that's pretty much it
 

2125
00:56:44,180 --> 00:56:46,599
reader pattern and that's pretty much it
and everything else that you want to use

2126
00:56:46,599 --> 00:56:46,609
and everything else that you want to use
 

2127
00:56:46,609 --> 00:56:49,960
and everything else that you want to use
you know you get back true containers by

2128
00:56:49,960 --> 00:56:49,970
you know you get back true containers by
 

2129
00:56:49,970 --> 00:56:52,569
you know you get back true containers by
strings it actually simplifies a lot of

2130
00:56:52,569 --> 00:56:52,579
strings it actually simplifies a lot of
 

2131
00:56:52,579 --> 00:56:56,890
strings it actually simplifies a lot of
things for you one thing I'll just throw

2132
00:56:56,890 --> 00:56:56,900
things for you one thing I'll just throw
 

2133
00:56:56,900 --> 00:56:59,440
things for you one thing I'll just throw
in is that it depends on which subset of

2134
00:56:59,440 --> 00:56:59,450
in is that it depends on which subset of
 

2135
00:56:59,450 --> 00:57:01,029
in is that it depends on which subset of
the REO package you want to use if you

2136
00:57:01,029 --> 00:57:01,039
the REO package you want to use if you
 

2137
00:57:01,039 --> 00:57:02,230
the REO package you want to use if you
just want to use it as a prelude

2138
00:57:02,230 --> 00:57:02,240
just want to use it as a prelude
 

2139
00:57:02,240 --> 00:57:04,240
just want to use it as a prelude
replacement you don't have to really

2140
00:57:04,240 --> 00:57:04,250
replacement you don't have to really
 

2141
00:57:04,250 --> 00:57:06,130
replacement you don't have to really
know anything you can just start using

2142
00:57:06,130 --> 00:57:06,140
know anything you can just start using
 

2143
00:57:06,140 --> 00:57:08,980
know anything you can just start using
it yeah do you want to start using the

2144
00:57:08,980 --> 00:57:08,990
it yeah do you want to start using the
 

2145
00:57:08,990 --> 00:57:10,480
it yeah do you want to start using the
logging capabilities you're gonna have

2146
00:57:10,480 --> 00:57:10,490
logging capabilities you're gonna have
 

2147
00:57:10,490 --> 00:57:11,589
logging capabilities you're gonna have
to understand a little bit about

2148
00:57:11,589 --> 00:57:11,599
to understand a little bit about
 

2149
00:57:11,599 --> 00:57:14,170
to understand a little bit about
alternative monads as an using REO

2150
00:57:14,170 --> 00:57:14,180
alternative monads as an using REO
 

2151
00:57:14,180 --> 00:57:16,690
alternative monads as an using REO
instead of i/o that's where I want to

2152
00:57:16,690 --> 00:57:16,700
instead of i/o that's where I want to
 

2153
00:57:16,700 --> 00:57:19,150
instead of i/o that's where I want to
follow up the REO doesn't provide any

2154
00:57:19,150 --> 00:57:19,160
follow up the REO doesn't provide any
 

2155
00:57:19,160 --> 00:57:22,480
follow up the REO doesn't provide any
put-put strong printing so you sort of

2156
00:57:22,480 --> 00:57:22,490
put-put strong printing so you sort of
 

2157
00:57:22,490 --> 00:57:24,190
put-put strong printing so you sort of
need to know a little bit about logging

2158
00:57:24,190 --> 00:57:24,200
need to know a little bit about logging
 

2159
00:57:24,200 --> 00:57:26,289
need to know a little bit about logging
if you want to debug your application or

2160
00:57:26,289 --> 00:57:26,299
if you want to debug your application or
 

2161
00:57:26,299 --> 00:57:27,670
if you want to debug your application or
you want to

2162
00:57:27,670 --> 00:57:27,680
you want to
 

2163
00:57:27,680 --> 00:57:31,059
you want to
with it yeah unless you important the

2164
00:57:31,059 --> 00:57:31,069
with it yeah unless you important the
 

2165
00:57:31,069 --> 00:57:35,349
with it yeah unless you important the
regular print statement yep and one

2166
00:57:35,349 --> 00:57:35,359
regular print statement yep and one
 

2167
00:57:35,359 --> 00:57:37,359
regular print statement yep and one
other thing ever in Genoa if they want

2168
00:57:37,359 --> 00:57:37,369
other thing ever in Genoa if they want
 

2169
00:57:37,369 --> 00:57:39,400
other thing ever in Genoa if they want
to play around with this library you can

2170
00:57:39,400 --> 00:57:39,410
to play around with this library you can
 

2171
00:57:39,410 --> 00:57:40,599
to play around with this library you can
use this function that we've got in

2172
00:57:40,599 --> 00:57:40,609
use this function that we've got in
 

2173
00:57:40,609 --> 00:57:42,520
use this function that we've got in
there called runs simple app which is a

2174
00:57:42,520 --> 00:57:42,530
there called runs simple app which is a
 

2175
00:57:42,530 --> 00:57:44,200
there called runs simple app which is a
nice easy way to get started with Rio

2176
00:57:44,200 --> 00:57:44,210
nice easy way to get started with Rio
 

2177
00:57:44,210 --> 00:57:46,089
nice easy way to get started with Rio
very quickly and I'll type that into the

2178
00:57:46,089 --> 00:57:46,099
very quickly and I'll type that into the
 

2179
00:57:46,099 --> 00:57:52,270
very quickly and I'll type that into the
chat okay are there any good tutorials

2180
00:57:52,270 --> 00:57:52,280
chat okay are there any good tutorials
 

2181
00:57:52,280 --> 00:57:54,010
chat okay are there any good tutorials
for exceptions and for the reader T

2182
00:57:54,010 --> 00:57:54,020
for exceptions and for the reader T
 

2183
00:57:54,020 --> 00:57:58,569
for exceptions and for the reader T
pattern I can provide the links to those

2184
00:57:58,569 --> 00:57:58,579
pattern I can provide the links to those
 

2185
00:57:58,579 --> 00:58:01,990
pattern I can provide the links to those
if you want Alexi yeah I'll just be

2186
00:58:01,990 --> 00:58:02,000
if you want Alexi yeah I'll just be
 

2187
00:58:02,000 --> 00:58:03,160
if you want Alexi yeah I'll just be
completely as clear there's a few of

2188
00:58:03,160 --> 00:58:03,170
completely as clear there's a few of
 

2189
00:58:03,170 --> 00:58:04,750
completely as clear there's a few of
them yeah and I think we have them

2190
00:58:04,750 --> 00:58:04,760
them yeah and I think we have them
 

2191
00:58:04,760 --> 00:58:06,760
them yeah and I think we have them
linked from the new Haskell dot F P

2192
00:58:06,760 --> 00:58:06,770
linked from the new Haskell dot F P
 

2193
00:58:06,770 --> 00:58:08,829
linked from the new Haskell dot F P
complete calm as well I'm still in the

2194
00:58:08,829 --> 00:58:08,839
complete calm as well I'm still in the
 

2195
00:58:08,839 --> 00:58:10,359
complete calm as well I'm still in the
process of updating that website and

2196
00:58:10,359 --> 00:58:10,369
process of updating that website and
 

2197
00:58:10,369 --> 00:58:11,980
process of updating that website and
definitely Rio is gonna be front and

2198
00:58:11,980 --> 00:58:11,990
definitely Rio is gonna be front and
 

2199
00:58:11,990 --> 00:58:15,400
definitely Rio is gonna be front and
center on the new syllabus on that site

2200
00:58:15,400 --> 00:58:15,410
center on the new syllabus on that site
 

2201
00:58:15,410 --> 00:58:17,680
center on the new syllabus on that site
so I'll provide some links in the text

2202
00:58:17,680 --> 00:58:17,690
so I'll provide some links in the text
 

2203
00:58:17,690 --> 00:58:24,400
so I'll provide some links in the text
read in a second all right well we're at

2204
00:58:24,400 --> 00:58:24,410
read in a second all right well we're at
 

2205
00:58:24,410 --> 00:58:25,120
read in a second all right well we're at
the top of the hour

2206
00:58:25,120 --> 00:58:25,130
the top of the hour
 

2207
00:58:25,130 --> 00:58:27,910
the top of the hour
anyone have any last questions before we

2208
00:58:27,910 --> 00:58:27,920
anyone have any last questions before we
 

2209
00:58:27,920 --> 00:58:29,500
anyone have any last questions before we
call the end oh hold on there were two

2210
00:58:29,500 --> 00:58:29,510
call the end oh hold on there were two
 

2211
00:58:29,510 --> 00:58:30,970
call the end oh hold on there were two
others probably a question for Michael

2212
00:58:30,970 --> 00:58:30,980
others probably a question for Michael
 

2213
00:58:30,980 --> 00:58:32,980
others probably a question for Michael
recommendations for current users of

2214
00:58:32,980 --> 00:58:32,990
recommendations for current users of
 

2215
00:58:32,990 --> 00:58:34,420
recommendations for current users of
classy prelude ooh this one popped up

2216
00:58:34,420 --> 00:58:34,430
classy prelude ooh this one popped up
 

2217
00:58:34,430 --> 00:58:34,870
classy prelude ooh this one popped up
recently

2218
00:58:34,870 --> 00:58:34,880
recently
 

2219
00:58:34,880 --> 00:58:36,880
recently
well classy prelude be rework to build

2220
00:58:36,880 --> 00:58:36,890
well classy prelude be rework to build
 

2221
00:58:36,890 --> 00:58:38,440
well classy prelude be rework to build
on top of Rio or do you recommend moving

2222
00:58:38,440 --> 00:58:38,450
on top of Rio or do you recommend moving
 

2223
00:58:38,450 --> 00:58:41,230
on top of Rio or do you recommend moving
off of classy prelude okay yeah

2224
00:58:41,230 --> 00:58:41,240
off of classy prelude okay yeah
 

2225
00:58:41,240 --> 00:58:43,270
off of classy prelude okay yeah
definitely Lexi you mind if I take this

2226
00:58:43,270 --> 00:58:43,280
definitely Lexi you mind if I take this
 

2227
00:58:43,280 --> 00:58:47,640
definitely Lexi you mind if I take this
one from what I've heard

2228
00:58:47,640 --> 00:58:47,650
one from what I've heard
 

2229
00:58:47,650 --> 00:58:50,589
one from what I've heard
classic prelude might get the deprecated

2230
00:58:50,589 --> 00:58:50,599
classic prelude might get the deprecated
 

2231
00:58:50,599 --> 00:58:56,260
classic prelude might get the deprecated
in the future and we receded I think

2232
00:58:56,260 --> 00:58:56,270
in the future and we receded I think
 

2233
00:58:56,270 --> 00:58:58,770
in the future and we receded I think
that's a very good decision choice

2234
00:58:58,770 --> 00:58:58,780
that's a very good decision choice
 

2235
00:58:58,780 --> 00:59:04,109
that's a very good decision choice
spider doubt like classic polluted I

2236
00:59:04,109 --> 00:59:04,119
spider doubt like classic polluted I
 

2237
00:59:04,119 --> 00:59:07,960
spider doubt like classic polluted I
also like classy prelude but the fact is

2238
00:59:07,960 --> 00:59:07,970
also like classy prelude but the fact is
 

2239
00:59:07,970 --> 00:59:10,329
also like classy prelude but the fact is
it's it just it's true opinionated it's

2240
00:59:10,329 --> 00:59:10,339
it's it just it's true opinionated it's
 

2241
00:59:10,339 --> 00:59:12,490
it's it just it's true opinionated it's
too far off the beaten path of the way

2242
00:59:12,490 --> 00:59:12,500
too far off the beaten path of the way
 

2243
00:59:12,500 --> 00:59:14,200
too far off the beaten path of the way
things typically work in the Haskell

2244
00:59:14,200 --> 00:59:14,210
things typically work in the Haskell
 

2245
00:59:14,210 --> 00:59:16,750
things typically work in the Haskell
ecosystem if people I don't have I am

2246
00:59:16,750 --> 00:59:16,760
ecosystem if people I don't have I am
 

2247
00:59:16,760 --> 00:59:18,309
ecosystem if people I don't have I am
thinking of you know starting to

2248
00:59:18,309 --> 00:59:18,319
thinking of you know starting to
 

2249
00:59:18,319 --> 00:59:19,480
thinking of you know starting to
deprecate it at some point in the future

2250
00:59:19,480 --> 00:59:19,490
deprecate it at some point in the future
 

2251
00:59:19,490 --> 00:59:21,849
deprecate it at some point in the future
but if people have alternative ideas of

2252
00:59:21,849 --> 00:59:21,859
but if people have alternative ideas of
 

2253
00:59:21,859 --> 00:59:23,200
but if people have alternative ideas of
what they'd like to do with it I'm

2254
00:59:23,200 --> 00:59:23,210
what they'd like to do with it I'm
 

2255
00:59:23,210 --> 00:59:24,849
what they'd like to do with it I'm
definitely happy to discuss classy

2256
00:59:24,849 --> 00:59:24,859
definitely happy to discuss classy
 

2257
00:59:24,859 --> 00:59:26,170
definitely happy to discuss classy
Prelude as it stands right now is

2258
00:59:26,170 --> 00:59:26,180
Prelude as it stands right now is
 

2259
00:59:26,180 --> 00:59:28,720
Prelude as it stands right now is
already built on top of unlived IO so

2260
00:59:28,720 --> 00:59:28,730
already built on top of unlived IO so
 

2261
00:59:28,730 --> 00:59:31,359
already built on top of unlived IO so
the biggest hurdle to a dog you know the

2262
00:59:31,359 --> 00:59:31,369
the biggest hurdle to a dog you know the
 

2263
00:59:31,369 --> 00:59:33,579
the biggest hurdle to a dog you know the
biggest migration that we need to happen

2264
00:59:33,579 --> 00:59:33,589
biggest migration that we need to happen
 

2265
00:59:33,589 --> 00:59:35,319
biggest migration that we need to happen
has already been done if people have

2266
00:59:35,319 --> 00:59:35,329
has already been done if people have
 

2267
00:59:35,329 --> 00:59:36,549
has already been done if people have
some ideas on what they'd like to see

2268
00:59:36,549 --> 00:59:36,559
some ideas on what they'd like to see
 

2269
00:59:36,559 --> 00:59:39,039
some ideas on what they'd like to see
come out of classy prelude hit me up on

2270
00:59:39,039 --> 00:59:39,049
come out of classy prelude hit me up on
 

2271
00:59:39,049 --> 00:59:40,400
come out of classy prelude hit me up on
the issue tracker and

2272
00:59:40,400 --> 00:59:40,410
the issue tracker and
 

2273
00:59:40,410 --> 00:59:43,489
the issue tracker and
I don't have any solid answer yet on

2274
00:59:43,489 --> 00:59:43,499
I don't have any solid answer yet on
 

2275
00:59:43,499 --> 00:59:48,140
I don't have any solid answer yet on
what's gonna happen with it okay and

2276
00:59:48,140 --> 00:59:48,150
what's gonna happen with it okay and
 

2277
00:59:48,150 --> 00:59:50,029
what's gonna happen with it okay and
about with resource approach

2278
00:59:50,029 --> 00:59:50,039
about with resource approach
 

2279
00:59:50,039 --> 00:59:51,979
about with resource approach
what if usage of resources overlapping

2280
00:59:51,979 --> 00:59:51,989
what if usage of resources overlapping
 

2281
00:59:51,989 --> 00:59:55,599
what if usage of resources overlapping
so with resource cannot just be nested

2282
00:59:55,599 --> 00:59:55,609
so with resource cannot just be nested
 

2283
00:59:55,609 --> 00:59:59,329
so with resource cannot just be nested
you can use if you cannot describe your

2284
00:59:59,329 --> 00:59:59,339
you can use if you cannot describe your
 

2285
00:59:59,339 --> 01:00:01,789
you can use if you cannot describe your
pattern with the with the with pattern

2286
01:00:01,789 --> 01:00:01,799
pattern with the with the with pattern
 

2287
01:00:01,799 --> 01:00:05,469
pattern with the with the with pattern
you can use resource resource T that's

2288
01:00:05,469 --> 01:00:05,479
you can use resource resource T that's
 

2289
01:00:05,479 --> 01:00:08,630
you can use resource resource T that's
no fallback but that complicates a

2290
01:00:08,630 --> 01:00:08,640
no fallback but that complicates a
 

2291
01:00:08,640 --> 01:00:11,269
no fallback but that complicates a
little bit end I think my goals are

2292
01:00:11,269 --> 01:00:11,279
little bit end I think my goals are
 

2293
01:00:11,279 --> 01:00:14,089
little bit end I think my goals are
gonna blog post about that probably

2294
01:00:14,089 --> 01:00:14,099
gonna blog post about that probably
 

2295
01:00:14,099 --> 01:00:18,620
gonna blog post about that probably
somewhere okay not seeing any more

2296
01:00:18,620 --> 01:00:18,630
somewhere okay not seeing any more
 

2297
01:00:18,630 --> 01:00:20,779
somewhere okay not seeing any more
questions so I think we're gonna stop

2298
01:00:20,779 --> 01:00:20,789
questions so I think we're gonna stop
 

2299
01:00:20,789 --> 01:00:22,759
questions so I think we're gonna stop
here I'm gonna I'll go ahead and post on

2300
01:00:22,759 --> 01:00:22,769
here I'm gonna I'll go ahead and post on
 

2301
01:00:22,769 --> 01:00:25,819
here I'm gonna I'll go ahead and post on
my Twitter account links to the relevant

2302
01:00:25,819 --> 01:00:25,829
my Twitter account links to the relevant
 

2303
01:00:25,829 --> 01:00:27,829
my Twitter account links to the relevant
blog posts on I think it was exception

2304
01:00:27,829 --> 01:00:27,839
blog posts on I think it was exception
 

2305
01:00:27,839 --> 01:00:30,170
blog posts on I think it was exception
handling and the reader T design pattern

2306
01:00:30,170 --> 01:00:30,180
handling and the reader T design pattern
 

2307
01:00:30,180 --> 01:00:31,759
handling and the reader T design pattern
since I'm gonna be shutting down this

2308
01:00:31,759 --> 01:00:31,769
since I'm gonna be shutting down this
 

2309
01:00:31,769 --> 01:00:33,469
since I'm gonna be shutting down this
webinar and you won't be able to see the

2310
01:00:33,469 --> 01:00:33,479
webinar and you won't be able to see the
 

2311
01:00:33,479 --> 01:00:35,210
webinar and you won't be able to see the
text track so go ahead and check out

2312
01:00:35,210 --> 01:00:35,220
text track so go ahead and check out
 

2313
01:00:35,220 --> 01:00:37,069
text track so go ahead and check out
there for those links and if you don't

2314
01:00:37,069 --> 01:00:37,079
there for those links and if you don't
 

2315
01:00:37,079 --> 01:00:39,620
there for those links and if you don't
see it there just check out Haskell das

2316
01:00:39,620 --> 01:00:39,630
see it there just check out Haskell das
 

2317
01:00:39,630 --> 01:00:41,930
see it there just check out Haskell das
gold at Ft complete calm and poke around

2318
01:00:41,930 --> 01:00:41,940
gold at Ft complete calm and poke around
 

2319
01:00:41,940 --> 01:00:43,999
gold at Ft complete calm and poke around
until you find something but it'll be on

2320
01:00:43,999 --> 01:00:44,009
until you find something but it'll be on
 

2321
01:00:44,009 --> 01:00:47,319
until you find something but it'll be on
Twitter in like five minutes okay

2322
01:00:47,319 --> 01:00:47,329

 

2323
01:00:47,329 --> 01:00:48,650

awesome

2324
01:00:48,650 --> 01:00:48,660
awesome
 

2325
01:00:48,660 --> 01:00:49,999
awesome
alexei thank you very much for the

2326
01:00:49,999 --> 01:00:50,009
alexei thank you very much for the
 

2327
01:00:50,009 --> 01:00:51,650
alexei thank you very much for the
wonderful presentation audience thank

2328
01:00:51,650 --> 01:00:51,660
wonderful presentation audience thank
 

2329
01:00:51,660 --> 01:00:52,959
wonderful presentation audience thank
you very much for the group

2330
01:00:52,959 --> 01:00:52,969
you very much for the group
 

2331
01:00:52,969 --> 01:00:55,819
you very much for the group
participation and have a great rest of

2332
01:00:55,819 --> 01:00:55,829
participation and have a great rest of
 

2333
01:00:55,829 --> 01:00:58,339
participation and have a great rest of
the day everyone

